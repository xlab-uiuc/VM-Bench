<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>get_data.isra.0 (8,270,946 samples, 0.01%)</title><rect x="1189.1" y="245" width="0.2" height="15.0" fill="rgb(250,82,41)" rx="2" ry="2" />
<text  x="1192.11" y="255.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (22,768,469 samples, 0.04%)</title><rect x="756.9" y="53" width="0.5" height="15.0" fill="rgb(237,5,23)" rx="2" ry="2" />
<text  x="759.92" y="63.5" ></text>
</g>
<g >
<title>lock_page_memcg (8,038,220 samples, 0.01%)</title><rect x="1178.7" y="325" width="0.2" height="15.0" fill="rgb(237,77,0)" rx="2" ry="2" />
<text  x="1181.71" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (496,455,702 samples, 0.82%)</title><rect x="1177.9" y="389" width="9.7" height="15.0" fill="rgb(249,206,8)" rx="2" ry="2" />
<text  x="1180.88" y="399.5" ></text>
</g>
<g >
<title>free_compound_page (56,797,102 samples, 0.09%)</title><rect x="1176.8" y="309" width="1.1" height="15.0" fill="rgb(211,104,31)" rx="2" ry="2" />
<text  x="1179.76" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (8,578,528 samples, 0.01%)</title><rect x="1170.4" y="341" width="0.2" height="15.0" fill="rgb(211,203,51)" rx="2" ry="2" />
<text  x="1173.44" y="351.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (7,359,810 samples, 0.01%)</title><rect x="1173.2" y="325" width="0.2" height="15.0" fill="rgb(238,75,12)" rx="2" ry="2" />
<text  x="1176.23" y="335.5" ></text>
</g>
<g >
<title>free_transhuge_page (58,046,383 samples, 0.10%)</title><rect x="1176.7" y="325" width="1.2" height="15.0" fill="rgb(212,186,9)" rx="2" ry="2" />
<text  x="1179.74" y="335.5" ></text>
</g>
<g >
<title>try_charge_memcg (22,416,372 samples, 0.04%)</title><rect x="69.4" y="341" width="0.5" height="15.0" fill="rgb(241,7,54)" rx="2" ry="2" />
<text  x="72.42" y="351.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (9,237,391 samples, 0.02%)</title><rect x="68.0" y="373" width="0.2" height="15.0" fill="rgb(249,28,30)" rx="2" ry="2" />
<text  x="71.00" y="383.5" ></text>
</g>
<g >
<title>desc_read (17,525,156 samples, 0.03%)</title><rect x="1188.8" y="229" width="0.3" height="15.0" fill="rgb(207,36,27)" rx="2" ry="2" />
<text  x="1191.77" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (120,142,713 samples, 0.20%)</title><rect x="756.0" y="245" width="2.4" height="15.0" fill="rgb(245,168,46)" rx="2" ry="2" />
<text  x="759.01" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (28,087,921 samples, 0.05%)</title><rect x="1173.4" y="325" width="0.5" height="15.0" fill="rgb(225,170,47)" rx="2" ry="2" />
<text  x="1176.37" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (61,167,044 samples, 0.10%)</title><rect x="1176.7" y="389" width="1.2" height="15.0" fill="rgb(230,157,9)" rx="2" ry="2" />
<text  x="1179.68" y="399.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6,593,212 samples, 0.01%)</title><rect x="1187.4" y="213" width="0.1" height="15.0" fill="rgb(239,172,12)" rx="2" ry="2" />
<text  x="1190.39" y="223.5" ></text>
</g>
<g >
<title>rcu_all_qs (127,900,898 samples, 0.21%)</title><rect x="1167.1" y="357" width="2.5" height="15.0" fill="rgb(239,85,12)" rx="2" ry="2" />
<text  x="1170.06" y="367.5" ></text>
</g>
<g >
<title>_prb_read_valid (6,182,573 samples, 0.01%)</title><rect x="1176.2" y="245" width="0.1" height="15.0" fill="rgb(233,212,46)" rx="2" ry="2" />
<text  x="1179.23" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,466,096 samples, 0.01%)</title><rect x="1174.2" y="405" width="0.1" height="15.0" fill="rgb(238,217,39)" rx="2" ry="2" />
<text  x="1177.17" y="415.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (104,793,894 samples, 0.17%)</title><rect x="1171.2" y="325" width="2.0" height="15.0" fill="rgb(244,139,48)" rx="2" ry="2" />
<text  x="1174.18" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (395,790,592 samples, 0.65%)</title><rect x="1179.8" y="245" width="7.7" height="15.0" fill="rgb(234,125,31)" rx="2" ry="2" />
<text  x="1182.80" y="255.5" ></text>
</g>
<g >
<title>console_unlock (95,627,042 samples, 0.16%)</title><rect x="756.2" y="101" width="1.9" height="15.0" fill="rgb(253,189,26)" rx="2" ry="2" />
<text  x="759.22" y="111.5" ></text>
</g>
<g >
<title>mmput (558,692,748 samples, 0.92%)</title><rect x="1176.7" y="437" width="10.9" height="15.0" fill="rgb(231,22,22)" rx="2" ry="2" />
<text  x="1179.66" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (45,172,638 samples, 0.07%)</title><rect x="68.2" y="373" width="0.9" height="15.0" fill="rgb(219,133,8)" rx="2" ry="2" />
<text  x="71.18" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (79,431,648 samples, 0.13%)</title><rect x="1158.8" y="325" width="1.5" height="15.0" fill="rgb(244,123,45)" rx="2" ry="2" />
<text  x="1161.76" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (11,661,609 samples, 0.02%)</title><rect x="1176.2" y="373" width="0.2" height="15.0" fill="rgb(209,184,23)" rx="2" ry="2" />
<text  x="1179.22" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (122,997,964 samples, 0.20%)</title><rect x="756.0" y="277" width="2.4" height="15.0" fill="rgb(254,61,44)" rx="2" ry="2" />
<text  x="759.00" y="287.5" ></text>
</g>
<g >
<title>page_counter_try_charge (43,659,588 samples, 0.07%)</title><rect x="1171.7" y="293" width="0.9" height="15.0" fill="rgb(212,222,42)" rx="2" ry="2" />
<text  x="1174.73" y="303.5" ></text>
</g>
<g >
<title>PageHuge (5,524,683 samples, 0.01%)</title><rect x="1178.9" y="277" width="0.1" height="15.0" fill="rgb(211,229,10)" rx="2" ry="2" />
<text  x="1181.93" y="287.5" ></text>
</g>
<g >
<title>page_counter_try_charge (19,251,347 samples, 0.03%)</title><rect x="69.5" y="325" width="0.3" height="15.0" fill="rgb(243,216,20)" rx="2" ry="2" />
<text  x="72.47" y="335.5" ></text>
</g>
<g >
<title>prep_compound_page (754,585,506 samples, 1.25%)</title><rect x="765.4" y="309" width="14.7" height="15.0" fill="rgb(246,109,25)" rx="2" ry="2" />
<text  x="768.40" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (36,358,527,600 samples, 60.14%)</title><rect x="70.5" y="341" width="709.6" height="15.0" fill="rgb(226,89,47)" rx="2" ry="2" />
<text  x="73.52" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>free_unref_page (54,657,916 samples, 0.09%)</title><rect x="1176.8" y="293" width="1.1" height="15.0" fill="rgb(212,154,2)" rx="2" ry="2" />
<text  x="1179.80" y="303.5" ></text>
</g>
<g >
<title>page_counter_cancel (7,209,476 samples, 0.01%)</title><rect x="1179.6" y="197" width="0.2" height="15.0" fill="rgb(253,176,48)" rx="2" ry="2" />
<text  x="1182.63" y="207.5" ></text>
</g>
<g >
<title>charge_memcg (36,025,103 samples, 0.06%)</title><rect x="69.2" y="357" width="0.7" height="15.0" fill="rgb(213,99,40)" rx="2" ry="2" />
<text  x="72.16" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (5,552,920 samples, 0.01%)</title><rect x="1174.2" y="421" width="0.1" height="15.0" fill="rgb(235,63,45)" rx="2" ry="2" />
<text  x="1177.17" y="431.5" ></text>
</g>
<g >
<title>scheduler_tick (7,988,586 samples, 0.01%)</title><rect x="758.1" y="165" width="0.2" height="15.0" fill="rgb(254,99,23)" rx="2" ry="2" />
<text  x="761.15" y="175.5" ></text>
</g>
<g >
<title>alloc_pages (153,073,457 samples, 0.25%)</title><rect x="1171.1" y="357" width="3.0" height="15.0" fill="rgb(237,119,8)" rx="2" ry="2" />
<text  x="1174.09" y="367.5" ></text>
</g>
<g >
<title>memcpy_erms (17,561,067 samples, 0.03%)</title><rect x="1159.8" y="117" width="0.3" height="15.0" fill="rgb(228,119,10)" rx="2" ry="2" />
<text  x="1162.79" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,691,990 samples, 0.02%)</title><rect x="71.1" y="309" width="0.3" height="15.0" fill="rgb(245,56,50)" rx="2" ry="2" />
<text  x="74.12" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,913,028 samples, 0.02%)</title><rect x="1176.2" y="405" width="0.2" height="15.0" fill="rgb(227,65,3)" rx="2" ry="2" />
<text  x="1179.21" y="415.5" ></text>
</g>
<g >
<title>try_charge_memcg (28,175,755 samples, 0.05%)</title><rect x="1172.6" y="293" width="0.6" height="15.0" fill="rgb(215,76,10)" rx="2" ry="2" />
<text  x="1175.61" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (9,671,115 samples, 0.02%)</title><rect x="1170.9" y="341" width="0.2" height="15.0" fill="rgb(223,26,26)" rx="2" ry="2" />
<text  x="1173.90" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (110,937,553 samples, 0.18%)</title><rect x="756.1" y="197" width="2.2" height="15.0" fill="rgb(225,111,52)" rx="2" ry="2" />
<text  x="759.14" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (496,455,702 samples, 0.82%)</title><rect x="1177.9" y="405" width="9.7" height="15.0" fill="rgb(246,103,33)" rx="2" ry="2" />
<text  x="1180.88" y="415.5" ></text>
</g>
<g >
<title>free_transhuge_page (423,397,550 samples, 0.70%)</title><rect x="1179.3" y="277" width="8.2" height="15.0" fill="rgb(238,130,28)" rx="2" ry="2" />
<text  x="1182.27" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (83,299,826 samples, 0.14%)</title><rect x="65.7" y="389" width="1.6" height="15.0" fill="rgb(252,225,35)" rx="2" ry="2" />
<text  x="68.71" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (59,660,257,754 samples, 98.68%)</title><rect x="10.0" y="469" width="1164.4" height="15.0" fill="rgb(228,69,8)" rx="2" ry="2" />
<text  x="13.01" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__mem_cgroup_uncharge (18,257,250 samples, 0.03%)</title><rect x="1179.4" y="245" width="0.4" height="15.0" fill="rgb(210,38,6)" rx="2" ry="2" />
<text  x="1182.44" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (77,556,773 samples, 0.13%)</title><rect x="1158.8" y="293" width="1.5" height="15.0" fill="rgb(225,142,46)" rx="2" ry="2" />
<text  x="1161.76" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (117,596,026 samples, 0.19%)</title><rect x="1187.6" y="437" width="2.3" height="15.0" fill="rgb(225,27,19)" rx="2" ry="2" />
<text  x="1190.64" y="447.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (56,703,425,123 samples, 93.79%)</title><rect x="67.4" y="389" width="1106.7" height="15.0" fill="rgb(254,215,14)" rx="2" ry="2" />
<text  x="70.41" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (71,782,034 samples, 0.12%)</title><rect x="1158.8" y="245" width="1.4" height="15.0" fill="rgb(254,18,52)" rx="2" ry="2" />
<text  x="1161.84" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (559,042,121 samples, 0.92%)</title><rect x="1176.7" y="485" width="10.9" height="15.0" fill="rgb(228,197,0)" rx="2" ry="2" />
<text  x="1179.66" y="495.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (15,911,828 samples, 0.03%)</title><rect x="1159.3" y="101" width="0.4" height="15.0" fill="rgb(248,86,24)" rx="2" ry="2" />
<text  x="1162.35" y="111.5" ></text>
</g>
<g >
<title>update_process_times (109,858,394 samples, 0.18%)</title><rect x="1187.8" y="373" width="2.1" height="15.0" fill="rgb(214,116,15)" rx="2" ry="2" />
<text  x="1190.76" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7,204,882 samples, 0.01%)</title><rect x="1179.1" y="261" width="0.1" height="15.0" fill="rgb(244,212,30)" rx="2" ry="2" />
<text  x="1182.08" y="271.5" ></text>
</g>
<g >
<title>memcg_check_events (9,583,260 samples, 0.02%)</title><rect x="69.2" y="341" width="0.2" height="15.0" fill="rgb(245,102,11)" rx="2" ry="2" />
<text  x="72.23" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (16,263,827 samples, 0.03%)</title><rect x="69.9" y="357" width="0.3" height="15.0" fill="rgb(241,212,52)" rx="2" ry="2" />
<text  x="72.86" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,233,551 samples, 0.02%)</title><rect x="1176.2" y="421" width="0.2" height="15.0" fill="rgb(228,60,49)" rx="2" ry="2" />
<text  x="1179.21" y="431.5" ></text>
</g>
<g >
<title>page_counter_uncharge (8,903,246 samples, 0.01%)</title><rect x="1179.6" y="213" width="0.2" height="15.0" fill="rgb(243,4,35)" rx="2" ry="2" />
<text  x="1182.61" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (22,713,403 samples, 0.04%)</title><rect x="1170.0" y="341" width="0.4" height="15.0" fill="rgb(222,107,30)" rx="2" ry="2" />
<text  x="1172.95" y="351.5" ></text>
</g>
<g >
<title>_prb_read_valid (70,629,014 samples, 0.12%)</title><rect x="1187.9" y="261" width="1.4" height="15.0" fill="rgb(217,107,15)" rx="2" ry="2" />
<text  x="1190.89" y="271.5" ></text>
</g>
<g >
<title>update_process_times (11,661,609 samples, 0.02%)</title><rect x="1176.2" y="357" width="0.2" height="15.0" fill="rgb(253,34,41)" rx="2" ry="2" />
<text  x="1179.22" y="367.5" ></text>
</g>
<g >
<title>[vmlinux] (559,042,121 samples, 0.92%)</title><rect x="1176.7" y="469" width="10.9" height="15.0" fill="rgb(246,198,54)" rx="2" ry="2" />
<text  x="1179.66" y="479.5" ></text>
</g>
<g >
<title>free_pcp_prepare (7,052,308 samples, 0.01%)</title><rect x="1178.2" y="309" width="0.2" height="15.0" fill="rgb(221,138,45)" rx="2" ry="2" />
<text  x="1181.23" y="319.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (10,112,979 samples, 0.02%)</title><rect x="1176.2" y="293" width="0.2" height="15.0" fill="rgb(232,189,7)" rx="2" ry="2" />
<text  x="1179.22" y="303.5" ></text>
</g>
<g >
<title>irq_work_single (100,411,536 samples, 0.17%)</title><rect x="756.2" y="133" width="1.9" height="15.0" fill="rgb(253,92,45)" rx="2" ry="2" />
<text  x="759.17" y="143.5" ></text>
</g>
<g >
<title>prb_read_valid (62,804,645 samples, 0.10%)</title><rect x="1158.9" y="133" width="1.2" height="15.0" fill="rgb(243,111,15)" rx="2" ry="2" />
<text  x="1161.90" y="143.5" ></text>
</g>
<g >
<title>irq_work_single (10,112,979 samples, 0.02%)</title><rect x="1176.2" y="309" width="0.2" height="15.0" fill="rgb(241,112,50)" rx="2" ry="2" />
<text  x="1179.22" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (79,431,648 samples, 0.13%)</title><rect x="1158.8" y="341" width="1.5" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="1161.76" y="351.5" ></text>
</g>
<g >
<title>__free_pages (22,240,339 samples, 0.04%)</title><rect x="1178.0" y="341" width="0.4" height="15.0" fill="rgb(232,207,15)" rx="2" ry="2" />
<text  x="1181.00" y="351.5" ></text>
</g>
<g >
<title>__put_compound_page (60,630,982 samples, 0.10%)</title><rect x="1176.7" y="341" width="1.2" height="15.0" fill="rgb(251,170,13)" rx="2" ry="2" />
<text  x="1179.68" y="351.5" ></text>
</g>
<g >
<title>prep_new_page (36,331,569,194 samples, 60.09%)</title><rect x="71.0" y="325" width="709.1" height="15.0" fill="rgb(216,205,6)" rx="2" ry="2" />
<text  x="74.04" y="335.5" >prep_new_page</text>
</g>
<g >
<title>scheduler_tick (5,959,138 samples, 0.01%)</title><rect x="1189.8" y="357" width="0.1" height="15.0" fill="rgb(241,39,30)" rx="2" ry="2" />
<text  x="1192.79" y="367.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (10,919,225 samples, 0.02%)</title><rect x="1170.4" y="373" width="0.2" height="15.0" fill="rgb(210,37,14)" rx="2" ry="2" />
<text  x="1173.41" y="383.5" ></text>
</g>
<g >
<title>console_unlock (9,939,112 samples, 0.02%)</title><rect x="1176.2" y="277" width="0.2" height="15.0" fill="rgb(237,109,11)" rx="2" ry="2" />
<text  x="1179.22" y="287.5" ></text>
</g>
<g >
<title>irq_work_tick (67,130,851 samples, 0.11%)</title><rect x="1158.8" y="213" width="1.4" height="15.0" fill="rgb(241,203,8)" rx="2" ry="2" />
<text  x="1161.85" y="223.5" ></text>
</g>
<g >
<title>[unknown] (59,775,559,930 samples, 98.87%)</title><rect x="10.0" y="501" width="1166.6" height="15.0" fill="rgb(244,164,22)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>update_process_times (110,620,427 samples, 0.18%)</title><rect x="756.1" y="181" width="2.2" height="15.0" fill="rgb(225,226,20)" rx="2" ry="2" />
<text  x="759.15" y="191.5" ></text>
</g>
<g >
<title>__mod_node_page_state (8,129,454 samples, 0.01%)</title><rect x="1170.9" y="325" width="0.2" height="15.0" fill="rgb(218,155,20)" rx="2" ry="2" />
<text  x="1173.93" y="335.5" ></text>
</g>
<g >
<title>release_pages (60,898,842 samples, 0.10%)</title><rect x="1176.7" y="357" width="1.2" height="15.0" fill="rgb(223,130,6)" rx="2" ry="2" />
<text  x="1179.68" y="367.5" ></text>
</g>
<g >
<title>irq_work_tick (100,411,536 samples, 0.17%)</title><rect x="756.2" y="165" width="1.9" height="15.0" fill="rgb(224,132,4)" rx="2" ry="2" />
<text  x="759.17" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,835,241 samples, 0.02%)</title><rect x="1176.2" y="389" width="0.2" height="15.0" fill="rgb(251,43,36)" rx="2" ry="2" />
<text  x="1179.21" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (122,997,964 samples, 0.20%)</title><rect x="756.0" y="293" width="2.4" height="15.0" fill="rgb(229,201,6)" rx="2" ry="2" />
<text  x="759.00" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (120,636,311 samples, 0.20%)</title><rect x="756.0" y="261" width="2.4" height="15.0" fill="rgb(226,214,23)" rx="2" ry="2" />
<text  x="759.00" y="271.5" ></text>
</g>
<g >
<title>free_unref_page (11,251,480 samples, 0.02%)</title><rect x="1178.2" y="325" width="0.2" height="15.0" fill="rgb(239,1,28)" rx="2" ry="2" />
<text  x="1181.21" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (443,339,504 samples, 0.73%)</title><rect x="1178.9" y="325" width="8.6" height="15.0" fill="rgb(236,23,26)" rx="2" ry="2" />
<text  x="1181.88" y="335.5" ></text>
</g>
<g >
<title>__put_compound_page (441,023,725 samples, 0.73%)</title><rect x="1178.9" y="293" width="8.6" height="15.0" fill="rgb(246,151,3)" rx="2" ry="2" />
<text  x="1181.93" y="303.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (24,016,166 samples, 0.04%)</title><rect x="1169.9" y="373" width="0.5" height="15.0" fill="rgb(214,68,30)" rx="2" ry="2" />
<text  x="1172.94" y="383.5" ></text>
</g>
<g >
<title>event_seq_write (124,087,978 samples, 0.21%)</title><rect x="1187.6" y="501" width="2.4" height="15.0" fill="rgb(228,191,16)" rx="2" ry="2" />
<text  x="1190.57" y="511.5" ></text>
</g>
<g >
<title>page_remove_rmap (19,831,171 samples, 0.03%)</title><rect x="1178.5" y="341" width="0.4" height="15.0" fill="rgb(205,195,1)" rx="2" ry="2" />
<text  x="1181.49" y="351.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (22,951,156 samples, 0.04%)</title><rect x="1188.7" y="245" width="0.4" height="15.0" fill="rgb(248,148,46)" rx="2" ry="2" />
<text  x="1191.66" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (66,871,930 samples, 0.11%)</title><rect x="1158.9" y="181" width="1.3" height="15.0" fill="rgb(212,91,30)" rx="2" ry="2" />
<text  x="1161.85" y="191.5" ></text>
</g>
<g >
<title>_prb_read_valid (43,686,319 samples, 0.07%)</title><rect x="1158.9" y="117" width="0.9" height="15.0" fill="rgb(252,168,19)" rx="2" ry="2" />
<text  x="1161.92" y="127.5" ></text>
</g>
<g >
<title>memcpy_erms (21,616,650 samples, 0.04%)</title><rect x="1189.3" y="261" width="0.4" height="15.0" fill="rgb(212,112,6)" rx="2" ry="2" />
<text  x="1192.31" y="271.5" ></text>
</g>
<g >
<title>do_exit (558,781,942 samples, 0.92%)</title><rect x="1176.7" y="453" width="10.9" height="15.0" fill="rgb(246,144,15)" rx="2" ry="2" />
<text  x="1179.66" y="463.5" ></text>
</g>
<g >
<title>exit_mmap (558,692,748 samples, 0.92%)</title><rect x="1176.7" y="421" width="10.9" height="15.0" fill="rgb(238,140,42)" rx="2" ry="2" />
<text  x="1179.66" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (56,834,108,244 samples, 94.00%)</title><rect x="65.2" y="453" width="1109.2" height="15.0" fill="rgb(220,178,41)" rx="2" ry="2" />
<text  x="68.16" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>clear_subpage (345,911,058 samples, 0.57%)</title><rect x="1160.3" y="357" width="6.8" height="15.0" fill="rgb(242,226,31)" rx="2" ry="2" />
<text  x="1163.31" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (115,995,042 samples, 0.19%)</title><rect x="1187.6" y="405" width="2.3" height="15.0" fill="rgb(250,202,5)" rx="2" ry="2" />
<text  x="1190.64" y="415.5" ></text>
</g>
<g >
<title>sysbench (60,459,920,012 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(211,136,19)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >sysbench</text>
</g>
<g >
<title>clear_subpage (19,026,795 samples, 0.03%)</title><rect x="1169.6" y="373" width="0.3" height="15.0" fill="rgb(236,121,50)" rx="2" ry="2" />
<text  x="1172.56" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages (148,794,970 samples, 0.25%)</title><rect x="1171.1" y="341" width="2.9" height="15.0" fill="rgb(222,133,16)" rx="2" ry="2" />
<text  x="1174.11" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,233,551 samples, 0.02%)</title><rect x="1176.2" y="437" width="0.2" height="15.0" fill="rgb(247,221,19)" rx="2" ry="2" />
<text  x="1179.21" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add (23,929,284 samples, 0.04%)</title><rect x="1169.9" y="357" width="0.5" height="15.0" fill="rgb(209,91,5)" rx="2" ry="2" />
<text  x="1172.94" y="367.5" ></text>
</g>
<g >
<title>free_compound_page (414,760,403 samples, 0.69%)</title><rect x="1179.4" y="261" width="8.1" height="15.0" fill="rgb(226,92,34)" rx="2" ry="2" />
<text  x="1182.44" y="271.5" ></text>
</g>
<g >
<title>uncharge_batch (16,919,797 samples, 0.03%)</title><rect x="1179.5" y="229" width="0.3" height="15.0" fill="rgb(220,1,35)" rx="2" ry="2" />
<text  x="1182.45" y="239.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (357,751,426 samples, 0.59%)</title><rect x="758.4" y="309" width="7.0" height="15.0" fill="rgb(209,209,45)" rx="2" ry="2" />
<text  x="761.42" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5,446,874 samples, 0.01%)</title><rect x="1178.6" y="325" width="0.1" height="15.0" fill="rgb(235,86,36)" rx="2" ry="2" />
<text  x="1181.61" y="335.5" ></text>
</g>
<g >
<title>up_read (5,889,435 samples, 0.01%)</title><rect x="1174.3" y="437" width="0.1" height="15.0" fill="rgb(242,73,45)" rx="2" ry="2" />
<text  x="1177.28" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (75,586,738 samples, 0.13%)</title><rect x="1158.8" y="277" width="1.4" height="15.0" fill="rgb(249,87,31)" rx="2" ry="2" />
<text  x="1161.76" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (559,042,121 samples, 0.92%)</title><rect x="1176.7" y="501" width="10.9" height="15.0" fill="rgb(213,61,5)" rx="2" ry="2" />
<text  x="1179.66" y="511.5" ></text>
</g>
<g >
<title>memcpy_erms (25,481,129 samples, 0.04%)</title><rect x="757.6" y="69" width="0.5" height="15.0" fill="rgb(214,96,9)" rx="2" ry="2" />
<text  x="760.57" y="79.5" ></text>
</g>
<g >
<title>_prb_read_valid (64,155,756 samples, 0.11%)</title><rect x="756.3" y="69" width="1.2" height="15.0" fill="rgb(214,66,19)" rx="2" ry="2" />
<text  x="759.28" y="79.5" ></text>
</g>
<g >
<title>__alloc_pages (36,367,769,938 samples, 60.15%)</title><rect x="70.3" y="357" width="709.8" height="15.0" fill="rgb(240,58,49)" rx="2" ry="2" />
<text  x="73.34" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>release_pages (5,204,663 samples, 0.01%)</title><rect x="1170.3" y="325" width="0.1" height="15.0" fill="rgb(214,192,47)" rx="2" ry="2" />
<text  x="1173.29" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (12,847,005 samples, 0.02%)</title><rect x="1173.5" y="293" width="0.3" height="15.0" fill="rgb(250,176,16)" rx="2" ry="2" />
<text  x="1176.54" y="303.5" ></text>
</g>
<g >
<title>get_data.isra.0 (8,917,043 samples, 0.01%)</title><rect x="757.4" y="53" width="0.1" height="15.0" fill="rgb(215,118,32)" rx="2" ry="2" />
<text  x="760.36" y="63.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (61,167,044 samples, 0.10%)</title><rect x="1176.7" y="405" width="1.2" height="15.0" fill="rgb(227,133,20)" rx="2" ry="2" />
<text  x="1179.68" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (56,811,753,058 samples, 93.97%)</title><rect x="65.3" y="421" width="1108.8" height="15.0" fill="rgb(246,22,22)" rx="2" ry="2" />
<text  x="68.31" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>free_pcp_prepare (386,524,179 samples, 0.64%)</title><rect x="1179.8" y="229" width="7.6" height="15.0" fill="rgb(226,224,37)" rx="2" ry="2" />
<text  x="1182.82" y="239.5" ></text>
</g>
<g >
<title>console_unlock (98,739,720 samples, 0.16%)</title><rect x="1187.8" y="293" width="1.9" height="15.0" fill="rgb(243,124,22)" rx="2" ry="2" />
<text  x="1190.81" y="303.5" ></text>
</g>
<g >
<title>zap_huge_pmd (493,701,541 samples, 0.82%)</title><rect x="1177.9" y="357" width="9.7" height="15.0" fill="rgb(205,222,4)" rx="2" ry="2" />
<text  x="1180.93" y="367.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (6,425,542 samples, 0.01%)</title><rect x="1178.2" y="277" width="0.2" height="15.0" fill="rgb(245,223,7)" rx="2" ry="2" />
<text  x="1181.24" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (116,083,990 samples, 0.19%)</title><rect x="1187.6" y="421" width="2.3" height="15.0" fill="rgb(236,41,28)" rx="2" ry="2" />
<text  x="1190.64" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (119,908,078 samples, 0.20%)</title><rect x="1187.6" y="469" width="2.4" height="15.0" fill="rgb(236,61,33)" rx="2" ry="2" />
<text  x="1190.63" y="479.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (6,604,642 samples, 0.01%)</title><rect x="1178.2" y="293" width="0.2" height="15.0" fill="rgb(254,43,24)" rx="2" ry="2" />
<text  x="1181.24" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,486,735 samples, 0.01%)</title><rect x="782.3" y="357" width="0.2" height="15.0" fill="rgb(222,215,24)" rx="2" ry="2" />
<text  x="785.35" y="367.5" ></text>
</g>
<g >
<title>irq_work_single (102,386,744 samples, 0.17%)</title><rect x="1187.8" y="325" width="2.0" height="15.0" fill="rgb(245,94,24)" rx="2" ry="2" />
<text  x="1190.78" y="335.5" ></text>
</g>
<g >
<title>irq_work_run_list (100,411,536 samples, 0.17%)</title><rect x="756.2" y="149" width="1.9" height="15.0" fill="rgb(213,103,47)" rx="2" ry="2" />
<text  x="759.17" y="159.5" ></text>
</g>
<g >
<title>all (60,459,920,012 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(244,114,20)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (19,947,994 samples, 0.03%)</title><rect x="1170.7" y="357" width="0.4" height="15.0" fill="rgb(213,135,8)" rx="2" ry="2" />
<text  x="1173.70" y="367.5" ></text>
</g>
<g >
<title>prep_new_page (13,703,738 samples, 0.02%)</title><rect x="1173.5" y="309" width="0.3" height="15.0" fill="rgb(247,70,50)" rx="2" ry="2" />
<text  x="1176.53" y="319.5" ></text>
</g>
<g >
<title>free_pcp_prepare (53,501,474 samples, 0.09%)</title><rect x="1176.8" y="277" width="1.1" height="15.0" fill="rgb(220,213,40)" rx="2" ry="2" />
<text  x="1179.81" y="287.5" ></text>
</g>
<g >
<title>desc_read (11,588,889 samples, 0.02%)</title><rect x="1159.4" y="85" width="0.3" height="15.0" fill="rgb(211,54,11)" rx="2" ry="2" />
<text  x="1162.43" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (106,443,421 samples, 0.18%)</title><rect x="1174.4" y="469" width="2.1" height="15.0" fill="rgb(209,21,42)" rx="2" ry="2" />
<text  x="1177.40" y="479.5" ></text>
</g>
<g >
<title>prb_read_valid (9,433,976 samples, 0.02%)</title><rect x="1176.2" y="261" width="0.2" height="15.0" fill="rgb(245,6,13)" rx="2" ry="2" />
<text  x="1179.23" y="271.5" ></text>
</g>
<g >
<title>release_pages (443,071,591 samples, 0.73%)</title><rect x="1178.9" y="309" width="8.6" height="15.0" fill="rgb(213,108,41)" rx="2" ry="2" />
<text  x="1181.89" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (60,898,842 samples, 0.10%)</title><rect x="1176.7" y="373" width="1.2" height="15.0" fill="rgb(242,229,46)" rx="2" ry="2" />
<text  x="1179.68" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (35,202,192,506 samples, 58.22%)</title><rect x="71.4" y="309" width="687.0" height="15.0" fill="rgb(220,39,8)" rx="2" ry="2" />
<text  x="74.37" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>irq_work_run_list (102,653,689 samples, 0.17%)</title><rect x="1187.8" y="341" width="2.0" height="15.0" fill="rgb(210,84,28)" rx="2" ry="2" />
<text  x="1190.78" y="351.5" ></text>
</g>
<g >
<title>__cond_resched (34,405,809 samples, 0.06%)</title><rect x="781.7" y="357" width="0.6" height="15.0" fill="rgb(246,96,36)" rx="2" ry="2" />
<text  x="784.68" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (110,125,341 samples, 0.18%)</title><rect x="1187.8" y="389" width="2.1" height="15.0" fill="rgb(205,166,16)" rx="2" ry="2" />
<text  x="1190.76" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56,797,912,410 samples, 93.94%)</title><rect x="65.6" y="405" width="1108.5" height="15.0" fill="rgb(207,152,12)" rx="2" ry="2" />
<text  x="68.58" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>__mod_node_page_state (6,415,140 samples, 0.01%)</title><rect x="1170.5" y="325" width="0.1" height="15.0" fill="rgb(242,193,29)" rx="2" ry="2" />
<text  x="1173.48" y="335.5" ></text>
</g>
<g >
<title>console_unlock (64,880,597 samples, 0.11%)</title><rect x="1158.9" y="149" width="1.2" height="15.0" fill="rgb(233,37,2)" rx="2" ry="2" />
<text  x="1161.87" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (122,753,684 samples, 0.20%)</title><rect x="1187.6" y="485" width="2.4" height="15.0" fill="rgb(231,188,8)" rx="2" ry="2" />
<text  x="1190.57" y="495.5" ></text>
</g>
<g >
<title>pte_alloc_one (174,134,974 samples, 0.29%)</title><rect x="1170.7" y="373" width="3.4" height="15.0" fill="rgb(230,215,50)" rx="2" ry="2" />
<text  x="1173.69" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit (8,672,970 samples, 0.01%)</title><rect x="1174.1" y="437" width="0.2" height="15.0" fill="rgb(228,13,1)" rx="2" ry="2" />
<text  x="1177.11" y="447.5" ></text>
</g>
<g >
<title>irq_work_run_list (67,130,851 samples, 0.11%)</title><rect x="1158.8" y="197" width="1.4" height="15.0" fill="rgb(250,12,23)" rx="2" ry="2" />
<text  x="1161.85" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (8,199,652 samples, 0.01%)</title><rect x="1187.4" y="229" width="0.1" height="15.0" fill="rgb(216,193,40)" rx="2" ry="2" />
<text  x="1190.36" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (116,466,933 samples, 0.19%)</title><rect x="756.0" y="213" width="2.3" height="15.0" fill="rgb(250,156,36)" rx="2" ry="2" />
<text  x="759.03" y="223.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (9,445,857 samples, 0.02%)</title><rect x="1170.4" y="357" width="0.2" height="15.0" fill="rgb(237,209,33)" rx="2" ry="2" />
<text  x="1173.43" y="367.5" ></text>
</g>
<g >
<title>get_data.isra.0 (5,971,518 samples, 0.01%)</title><rect x="1159.7" y="101" width="0.1" height="15.0" fill="rgb(224,98,23)" rx="2" ry="2" />
<text  x="1162.66" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (77,814,566 samples, 0.13%)</title><rect x="1158.8" y="309" width="1.5" height="15.0" fill="rgb(228,105,41)" rx="2" ry="2" />
<text  x="1161.76" y="319.5" ></text>
</g>
<g >
<title>desc_read (17,877,536 samples, 0.03%)</title><rect x="757.0" y="37" width="0.4" height="15.0" fill="rgb(254,192,28)" rx="2" ry="2" />
<text  x="760.01" y="47.5" ></text>
</g>
<g >
<title>tick_sched_timer (75,502,243 samples, 0.12%)</title><rect x="1158.8" y="261" width="1.4" height="15.0" fill="rgb(213,137,9)" rx="2" ry="2" />
<text  x="1161.77" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (118,396,503 samples, 0.20%)</title><rect x="1187.6" y="453" width="2.3" height="15.0" fill="rgb(250,4,1)" rx="2" ry="2" />
<text  x="1190.63" y="463.5" ></text>
</g>
<g >
<title>update_process_times (71,696,080 samples, 0.12%)</title><rect x="1158.8" y="229" width="1.4" height="15.0" fill="rgb(244,218,43)" rx="2" ry="2" />
<text  x="1161.84" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,849,096 samples, 0.02%)</title><rect x="1176.2" y="453" width="0.3" height="15.0" fill="rgb(223,176,25)" rx="2" ry="2" />
<text  x="1179.21" y="463.5" ></text>
</g>
<g >
<title>clear_huge_page (19,953,080,279 samples, 33.00%)</title><rect x="780.1" y="373" width="389.5" height="15.0" fill="rgb(244,73,28)" rx="2" ry="2" />
<text  x="783.14" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>__mod_node_page_state (6,582,953 samples, 0.01%)</title><rect x="1179.1" y="245" width="0.1" height="15.0" fill="rgb(216,140,46)" rx="2" ry="2" />
<text  x="1182.09" y="255.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (77,232,044 samples, 0.13%)</title><rect x="1171.7" y="309" width="1.5" height="15.0" fill="rgb(238,199,3)" rx="2" ry="2" />
<text  x="1174.66" y="319.5" ></text>
</g>
<g >
<title>irq_work_tick (102,742,664 samples, 0.17%)</title><rect x="1187.8" y="357" width="2.0" height="15.0" fill="rgb(251,137,47)" rx="2" ry="2" />
<text  x="1190.78" y="367.5" ></text>
</g>
<g >
<title>irq_work_tick (10,112,979 samples, 0.02%)</title><rect x="1176.2" y="341" width="0.2" height="15.0" fill="rgb(213,49,48)" rx="2" ry="2" />
<text  x="1179.22" y="351.5" ></text>
</g>
<g >
<title>__page_cache_release (11,478,091 samples, 0.02%)</title><rect x="1179.0" y="277" width="0.3" height="15.0" fill="rgb(229,196,44)" rx="2" ry="2" />
<text  x="1182.04" y="287.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (66,698,798 samples, 0.11%)</title><rect x="1158.9" y="165" width="1.3" height="15.0" fill="rgb(228,129,9)" rx="2" ry="2" />
<text  x="1161.86" y="175.5" ></text>
</g>
<g >
<title>prb_read_valid (95,270,341 samples, 0.16%)</title><rect x="1187.9" y="277" width="1.8" height="15.0" fill="rgb(230,55,4)" rx="2" ry="2" />
<text  x="1190.87" y="287.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (99,752,735 samples, 0.16%)</title><rect x="756.2" y="117" width="1.9" height="15.0" fill="rgb(230,144,24)" rx="2" ry="2" />
<text  x="759.18" y="127.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (11,554,157 samples, 0.02%)</title><rect x="1171.4" y="309" width="0.3" height="15.0" fill="rgb(208,186,38)" rx="2" ry="2" />
<text  x="1174.43" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (59,773,702,428 samples, 98.87%)</title><rect x="10.0" y="485" width="1166.6" height="15.0" fill="rgb(214,112,0)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >__memset_avx2_erms</text>
</g>
<g >
<title>rmqueue_bulk (6,506,475 samples, 0.01%)</title><rect x="1173.8" y="309" width="0.1" height="15.0" fill="rgb(235,108,26)" rx="2" ry="2" />
<text  x="1176.80" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (19,359,266,140 samples, 32.02%)</title><rect x="782.5" y="357" width="377.8" height="15.0" fill="rgb(235,23,5)" rx="2" ry="2" />
<text  x="785.47" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>tlb_flush_mmu (444,850,842 samples, 0.74%)</title><rect x="1178.9" y="341" width="8.7" height="15.0" fill="rgb(240,0,14)" rx="2" ry="2" />
<text  x="1181.88" y="351.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (5,246,966 samples, 0.01%)</title><rect x="1187.7" y="389" width="0.1" height="15.0" fill="rgb(249,37,29)" rx="2" ry="2" />
<text  x="1190.65" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (496,278,103 samples, 0.82%)</title><rect x="1177.9" y="373" width="9.7" height="15.0" fill="rgb(226,123,44)" rx="2" ry="2" />
<text  x="1180.88" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (117,200,488 samples, 0.19%)</title><rect x="756.0" y="229" width="2.3" height="15.0" fill="rgb(251,90,16)" rx="2" ry="2" />
<text  x="759.02" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (36,374,963,939 samples, 60.16%)</title><rect x="70.2" y="373" width="709.9" height="15.0" fill="rgb(214,72,47)" rx="2" ry="2" />
<text  x="73.20" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>irq_work_run_list (10,112,979 samples, 0.02%)</title><rect x="1176.2" y="325" width="0.2" height="15.0" fill="rgb(210,50,25)" rx="2" ry="2" />
<text  x="1179.22" y="335.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (102,119,855 samples, 0.17%)</title><rect x="1187.8" y="309" width="2.0" height="15.0" fill="rgb(220,80,2)" rx="2" ry="2" />
<text  x="1190.79" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (56,817,983,563 samples, 93.98%)</title><rect x="65.2" y="437" width="1108.9" height="15.0" fill="rgb(231,30,13)" rx="2" ry="2" />
<text  x="68.19" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>prb_read_valid (92,583,861 samples, 0.15%)</title><rect x="756.3" y="85" width="1.8" height="15.0" fill="rgb(236,209,47)" rx="2" ry="2" />
<text  x="759.26" y="95.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (53,573,842 samples, 0.09%)</title><rect x="69.2" y="373" width="1.0" height="15.0" fill="rgb(233,23,33)" rx="2" ry="2" />
<text  x="72.15" y="383.5" ></text>
</g>
</g>
</svg>
