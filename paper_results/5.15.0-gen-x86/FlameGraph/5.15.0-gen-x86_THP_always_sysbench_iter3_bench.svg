<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>irq_work_run_list (99,175,913 samples, 0.11%)</title><rect x="498.7" y="149" width="1.3" height="15.0" fill="rgb(225,142,6)" rx="2" ry="2" />
<text  x="501.72" y="159.5" ></text>
</g>
<g >
<title>prb_read_valid (62,116,366 samples, 0.07%)</title><rect x="763.8" y="133" width="0.8" height="15.0" fill="rgb(224,219,32)" rx="2" ry="2" />
<text  x="766.80" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (120,955,876 samples, 0.13%)</title><rect x="498.6" y="261" width="1.6" height="15.0" fill="rgb(234,84,17)" rx="2" ry="2" />
<text  x="501.61" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (36,348,536,699 samples, 39.42%)</title><rect x="49.7" y="357" width="465.1" height="15.0" fill="rgb(225,38,42)" rx="2" ry="2" />
<text  x="52.70" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>unmap_page_range (494,923,090 samples, 0.54%)</title><rect x="776.7" y="373" width="6.4" height="15.0" fill="rgb(247,63,2)" rx="2" ry="2" />
<text  x="779.75" y="383.5" ></text>
</g>
<g >
<title>irq_work_run_list (102,570,976 samples, 0.11%)</title><rect x="1188.6" y="341" width="1.3" height="15.0" fill="rgb(236,127,50)" rx="2" ry="2" />
<text  x="1191.56" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (9,331,148 samples, 0.01%)</title><rect x="772.0" y="325" width="0.1" height="15.0" fill="rgb(221,208,35)" rx="2" ry="2" />
<text  x="775.02" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,869,202 samples, 0.02%)</title><rect x="775.5" y="453" width="0.2" height="15.0" fill="rgb(231,48,40)" rx="2" ry="2" />
<text  x="778.54" y="463.5" ></text>
</g>
<g >
<title>__cond_resched (36,664,623 samples, 0.04%)</title><rect x="515.8" y="357" width="0.5" height="15.0" fill="rgb(237,194,34)" rx="2" ry="2" />
<text  x="518.82" y="367.5" ></text>
</g>
<g >
<title>desc_read (15,745,394 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.2" height="15.0" fill="rgb(207,73,49)" rx="2" ry="2" />
<text  x="1192.22" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (21,567,681 samples, 0.02%)</title><rect x="771.9" y="357" width="0.2" height="15.0" fill="rgb(250,88,37)" rx="2" ry="2" />
<text  x="774.86" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (114,669,291 samples, 0.12%)</title><rect x="1188.5" y="421" width="1.4" height="15.0" fill="rgb(240,158,16)" rx="2" ry="2" />
<text  x="1191.47" y="431.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (12,667,353 samples, 0.01%)</title><rect x="771.6" y="373" width="0.2" height="15.0" fill="rgb(251,100,30)" rx="2" ry="2" />
<text  x="774.64" y="383.5" ></text>
</g>
<g >
<title>irq_work_run_list (67,043,672 samples, 0.07%)</title><rect x="763.8" y="197" width="0.8" height="15.0" fill="rgb(241,114,28)" rx="2" ry="2" />
<text  x="766.76" y="207.5" ></text>
</g>
<g >
<title>free_compound_page (59,661,213 samples, 0.06%)</title><rect x="776.0" y="309" width="0.7" height="15.0" fill="rgb(254,208,26)" rx="2" ry="2" />
<text  x="778.98" y="319.5" ></text>
</g>
<g >
<title>irq_work_single (99,015,486 samples, 0.11%)</title><rect x="498.7" y="133" width="1.3" height="15.0" fill="rgb(226,187,30)" rx="2" ry="2" />
<text  x="501.72" y="143.5" ></text>
</g>
<g >
<title>__cond_resched (41,112,911 samples, 0.04%)</title><rect x="48.3" y="373" width="0.6" height="15.0" fill="rgb(225,160,15)" rx="2" ry="2" />
<text  x="51.33" y="383.5" ></text>
</g>
<g >
<title>clear_huge_page (20,019,978,707 samples, 21.71%)</title><rect x="514.8" y="373" width="256.2" height="15.0" fill="rgb(208,196,38)" rx="2" ry="2" />
<text  x="517.84" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>console_unlock (95,153,752 samples, 0.10%)</title><rect x="498.7" y="101" width="1.3" height="15.0" fill="rgb(250,182,22)" rx="2" ry="2" />
<text  x="501.74" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,236,701 samples, 0.02%)</title><rect x="50.2" y="309" width="0.2" height="15.0" fill="rgb(241,158,12)" rx="2" ry="2" />
<text  x="53.23" y="319.5" ></text>
</g>
<g >
<title>irq_work_single (102,393,004 samples, 0.11%)</title><rect x="1188.6" y="325" width="1.3" height="15.0" fill="rgb(226,141,18)" rx="2" ry="2" />
<text  x="1191.56" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (108,086,403 samples, 0.12%)</title><rect x="1188.6" y="389" width="1.3" height="15.0" fill="rgb(215,69,17)" rx="2" ry="2" />
<text  x="1191.55" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add (29,499,084 samples, 0.03%)</title><rect x="771.3" y="357" width="0.3" height="15.0" fill="rgb(219,159,35)" rx="2" ry="2" />
<text  x="774.26" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (12,057,215 samples, 0.01%)</title><rect x="777.0" y="325" width="0.1" height="15.0" fill="rgb(249,122,18)" rx="2" ry="2" />
<text  x="779.96" y="335.5" ></text>
</g>
<g >
<title>_prb_read_valid (64,384,061 samples, 0.07%)</title><rect x="498.8" y="69" width="0.8" height="15.0" fill="rgb(220,161,21)" rx="2" ry="2" />
<text  x="501.79" y="79.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (59,721,247,436 samples, 64.76%)</title><rect x="10.2" y="469" width="764.2" height="15.0" fill="rgb(207,100,23)" rx="2" ry="2" />
<text  x="13.17" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (118,582,866 samples, 0.13%)</title><rect x="1188.5" y="469" width="1.5" height="15.0" fill="rgb(241,107,21)" rx="2" ry="2" />
<text  x="1191.46" y="479.5" ></text>
</g>
<g >
<title>irqentry_exit (9,985,343 samples, 0.01%)</title><rect x="774.2" y="437" width="0.1" height="15.0" fill="rgb(210,57,13)" rx="2" ry="2" />
<text  x="777.20" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (56,892,667,360 samples, 61.70%)</title><rect x="46.4" y="453" width="728.0" height="15.0" fill="rgb(234,173,47)" rx="2" ry="2" />
<text  x="49.36" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>entry_SYSCALL_64 (560,387,031 samples, 0.61%)</title><rect x="775.9" y="501" width="7.2" height="15.0" fill="rgb(217,22,50)" rx="2" ry="2" />
<text  x="778.91" y="511.5" ></text>
</g>
<g >
<title>memcpy_erms (21,705,473 samples, 0.02%)</title><rect x="1189.5" y="261" width="0.3" height="15.0" fill="rgb(226,118,10)" rx="2" ry="2" />
<text  x="1192.54" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (153,835,500 samples, 0.17%)</title><rect x="772.2" y="341" width="1.9" height="15.0" fill="rgb(250,60,35)" rx="2" ry="2" />
<text  x="775.15" y="351.5" ></text>
</g>
<g >
<title>__put_compound_page (63,412,840 samples, 0.07%)</title><rect x="775.9" y="341" width="0.8" height="15.0" fill="rgb(236,157,6)" rx="2" ry="2" />
<text  x="778.93" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (136,637,637 samples, 0.15%)</title><rect x="769.3" y="357" width="1.7" height="15.0" fill="rgb(219,26,24)" rx="2" ry="2" />
<text  x="772.27" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30,390,572 samples, 0.03%)</title><rect x="773.7" y="325" width="0.4" height="15.0" fill="rgb(244,188,8)" rx="2" ry="2" />
<text  x="776.66" y="335.5" ></text>
</g>
<g >
<title>desc_read (11,338,993 samples, 0.01%)</title><rect x="764.1" y="85" width="0.2" height="15.0" fill="rgb(252,132,53)" rx="2" ry="2" />
<text  x="767.13" y="95.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (13,180,260 samples, 0.01%)</title><rect x="772.4" y="309" width="0.2" height="15.0" fill="rgb(233,176,36)" rx="2" ry="2" />
<text  x="775.38" y="319.5" ></text>
</g>
<g >
<title>free_unref_page (392,514,122 samples, 0.43%)</title><rect x="778.0" y="245" width="5.0" height="15.0" fill="rgb(228,123,44)" rx="2" ry="2" />
<text  x="781.02" y="255.5" ></text>
</g>
<g >
<title>console_unlock (9,819,764 samples, 0.01%)</title><rect x="775.5" y="277" width="0.2" height="15.0" fill="rgb(246,28,31)" rx="2" ry="2" />
<text  x="778.54" y="287.5" ></text>
</g>
<g >
<title>console_unlock (97,500,003 samples, 0.11%)</title><rect x="1188.6" y="293" width="1.2" height="15.0" fill="rgb(247,72,1)" rx="2" ry="2" />
<text  x="1191.58" y="303.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (63,948,692 samples, 0.07%)</title><rect x="775.9" y="389" width="0.8" height="15.0" fill="rgb(242,93,34)" rx="2" ry="2" />
<text  x="778.92" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (103,941,982 samples, 0.11%)</title><rect x="774.4" y="469" width="1.3" height="15.0" fill="rgb(240,160,7)" rx="2" ry="2" />
<text  x="777.38" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (122,188,189 samples, 0.13%)</title><rect x="498.6" y="293" width="1.6" height="15.0" fill="rgb(215,190,2)" rx="2" ry="2" />
<text  x="501.61" y="303.5" ></text>
</g>
<g >
<title>irq_work_run_list (9,993,487 samples, 0.01%)</title><rect x="775.5" y="325" width="0.2" height="15.0" fill="rgb(222,100,49)" rx="2" ry="2" />
<text  x="778.54" y="335.5" ></text>
</g>
<g >
<title>try_charge_memcg (19,941,526 samples, 0.02%)</title><rect x="49.1" y="341" width="0.3" height="15.0" fill="rgb(239,99,39)" rx="2" ry="2" />
<text  x="52.11" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (77,216,603 samples, 0.08%)</title><rect x="763.7" y="277" width="1.0" height="15.0" fill="rgb(253,170,48)" rx="2" ry="2" />
<text  x="766.70" y="287.5" ></text>
</g>
<g >
<title>clear_subpage (18,607,556 samples, 0.02%)</title><rect x="771.0" y="373" width="0.3" height="15.0" fill="rgb(233,1,38)" rx="2" ry="2" />
<text  x="774.02" y="383.5" ></text>
</g>
<g >
<title>do_exit (560,126,987 samples, 0.61%)</title><rect x="775.9" y="453" width="7.2" height="15.0" fill="rgb(249,179,21)" rx="2" ry="2" />
<text  x="778.91" y="463.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (63,681,136 samples, 0.07%)</title><rect x="775.9" y="373" width="0.8" height="15.0" fill="rgb(221,43,14)" rx="2" ry="2" />
<text  x="778.92" y="383.5" ></text>
</g>
<g >
<title>__free_pages (23,320,443 samples, 0.03%)</title><rect x="776.8" y="341" width="0.3" height="15.0" fill="rgb(225,53,12)" rx="2" ry="2" />
<text  x="779.82" y="351.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (9,993,487 samples, 0.01%)</title><rect x="775.5" y="293" width="0.2" height="15.0" fill="rgb(244,221,0)" rx="2" ry="2" />
<text  x="778.54" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (560,126,987 samples, 0.61%)</title><rect x="775.9" y="421" width="7.2" height="15.0" fill="rgb(248,209,50)" rx="2" ry="2" />
<text  x="778.91" y="431.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (102,037,019 samples, 0.11%)</title><rect x="1188.6" y="309" width="1.3" height="15.0" fill="rgb(245,175,43)" rx="2" ry="2" />
<text  x="1191.57" y="319.5" ></text>
</g>
<g >
<title>alloc_pages (159,229,157 samples, 0.17%)</title><rect x="772.1" y="357" width="2.1" height="15.0" fill="rgb(249,12,21)" rx="2" ry="2" />
<text  x="775.14" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (56,875,908,179 samples, 61.68%)</title><rect x="46.4" y="437" width="727.8" height="15.0" fill="rgb(212,117,32)" rx="2" ry="2" />
<text  x="49.40" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>get_page_from_freelist (36,337,919,503 samples, 39.41%)</title><rect x="49.8" y="341" width="465.0" height="15.0" fill="rgb(240,0,51)" rx="2" ry="2" />
<text  x="52.84" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>free_pcp_prepare (385,293,301 samples, 0.42%)</title><rect x="778.0" y="229" width="5.0" height="15.0" fill="rgb(208,4,46)" rx="2" ry="2" />
<text  x="781.03" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (116,981,897 samples, 0.13%)</title><rect x="1188.5" y="453" width="1.5" height="15.0" fill="rgb(235,209,26)" rx="2" ry="2" />
<text  x="1191.46" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (111,662,266 samples, 0.12%)</title><rect x="498.7" y="197" width="1.4" height="15.0" fill="rgb(253,101,47)" rx="2" ry="2" />
<text  x="501.69" y="207.5" ></text>
</g>
<g >
<title>irq_work_tick (102,748,922 samples, 0.11%)</title><rect x="1188.6" y="357" width="1.3" height="15.0" fill="rgb(229,208,19)" rx="2" ry="2" />
<text  x="1191.56" y="367.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (24,279,369 samples, 0.03%)</title><rect x="499.2" y="53" width="0.3" height="15.0" fill="rgb(239,126,34)" rx="2" ry="2" />
<text  x="502.21" y="63.5" ></text>
</g>
<g >
<title>charge_memcg (34,415,007 samples, 0.04%)</title><rect x="48.9" y="357" width="0.5" height="15.0" fill="rgb(215,56,6)" rx="2" ry="2" />
<text  x="51.93" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (120,005,945 samples, 0.13%)</title><rect x="1188.4" y="485" width="1.6" height="15.0" fill="rgb(219,130,8)" rx="2" ry="2" />
<text  x="1191.45" y="495.5" ></text>
</g>
<g >
<title>release_pages (63,681,136 samples, 0.07%)</title><rect x="775.9" y="357" width="0.8" height="15.0" fill="rgb(253,32,8)" rx="2" ry="2" />
<text  x="778.92" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (114,402,408 samples, 0.12%)</title><rect x="1188.5" y="405" width="1.4" height="15.0" fill="rgb(214,171,50)" rx="2" ry="2" />
<text  x="1191.47" y="415.5" ></text>
</g>
<g >
<title>free_pcp_prepare (55,292,969 samples, 0.06%)</title><rect x="776.0" y="277" width="0.7" height="15.0" fill="rgb(248,79,4)" rx="2" ry="2" />
<text  x="779.01" y="287.5" ></text>
</g>
<g >
<title>prb_read_valid (92,702,611 samples, 0.10%)</title><rect x="498.8" y="85" width="1.2" height="15.0" fill="rgb(207,57,18)" rx="2" ry="2" />
<text  x="501.77" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (122,188,189 samples, 0.13%)</title><rect x="498.6" y="277" width="1.6" height="15.0" fill="rgb(222,30,0)" rx="2" ry="2" />
<text  x="501.61" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (76,874,289 samples, 0.08%)</title><rect x="763.7" y="261" width="1.0" height="15.0" fill="rgb(251,184,22)" rx="2" ry="2" />
<text  x="766.71" y="271.5" ></text>
</g>
<g >
<title>update_process_times (107,997,451 samples, 0.12%)</title><rect x="1188.6" y="373" width="1.3" height="15.0" fill="rgb(221,134,38)" rx="2" ry="2" />
<text  x="1191.55" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (495,102,372 samples, 0.54%)</title><rect x="776.7" y="389" width="6.4" height="15.0" fill="rgb(222,144,19)" rx="2" ry="2" />
<text  x="779.74" y="399.5" ></text>
</g>
<g >
<title>irq_work_single (9,993,487 samples, 0.01%)</title><rect x="775.5" y="309" width="0.2" height="15.0" fill="rgb(239,89,23)" rx="2" ry="2" />
<text  x="778.54" y="319.5" ></text>
</g>
<g >
<title>prep_compound_page (766,192,764 samples, 0.83%)</title><rect x="505.0" y="309" width="9.8" height="15.0" fill="rgb(210,158,51)" rx="2" ry="2" />
<text  x="508.02" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (11,628,928 samples, 0.01%)</title><rect x="775.5" y="373" width="0.2" height="15.0" fill="rgb(235,159,25)" rx="2" ry="2" />
<text  x="778.54" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (78,414,036 samples, 0.09%)</title><rect x="763.7" y="293" width="1.0" height="15.0" fill="rgb(244,118,30)" rx="2" ry="2" />
<text  x="766.70" y="303.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (29,760,164 samples, 0.03%)</title><rect x="771.3" y="373" width="0.3" height="15.0" fill="rgb(228,31,54)" rx="2" ry="2" />
<text  x="774.26" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (10,870,764 samples, 0.01%)</title><rect x="772.0" y="341" width="0.1" height="15.0" fill="rgb(228,11,14)" rx="2" ry="2" />
<text  x="775.00" y="351.5" ></text>
</g>
<g >
<title>_prb_read_valid (67,165,169 samples, 0.07%)</title><rect x="1188.7" y="261" width="0.8" height="15.0" fill="rgb(215,18,29)" rx="2" ry="2" />
<text  x="1191.65" y="271.5" ></text>
</g>
<g >
<title>free_transhuge_page (420,650,785 samples, 0.46%)</title><rect x="777.7" y="277" width="5.4" height="15.0" fill="rgb(209,121,5)" rx="2" ry="2" />
<text  x="780.67" y="287.5" ></text>
</g>
<g >
<title>prep_new_page (14,207,744 samples, 0.02%)</title><rect x="773.8" y="309" width="0.2" height="15.0" fill="rgb(251,13,8)" rx="2" ry="2" />
<text  x="776.78" y="319.5" ></text>
</g>
<g >
<title>memcpy_erms (25,339,348 samples, 0.03%)</title><rect x="499.6" y="69" width="0.4" height="15.0" fill="rgb(243,94,15)" rx="2" ry="2" />
<text  x="502.63" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (72,982,954 samples, 0.08%)</title><rect x="763.8" y="245" width="0.9" height="15.0" fill="rgb(213,113,37)" rx="2" ry="2" />
<text  x="766.76" y="255.5" ></text>
</g>
<g >
<title>release_pages (441,478,514 samples, 0.48%)</title><rect x="777.4" y="309" width="5.7" height="15.0" fill="rgb(240,227,43)" rx="2" ry="2" />
<text  x="780.41" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (117,588,146 samples, 0.13%)</title><rect x="498.6" y="229" width="1.5" height="15.0" fill="rgb(218,2,19)" rx="2" ry="2" />
<text  x="501.62" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (18,256,035 samples, 0.02%)</title><rect x="764.4" y="117" width="0.2" height="15.0" fill="rgb(243,10,41)" rx="2" ry="2" />
<text  x="767.37" y="127.5" ></text>
</g>
<g >
<title>clear_page_erms (12,413,243 samples, 0.01%)</title><rect x="773.8" y="293" width="0.1" height="15.0" fill="rgb(231,42,39)" rx="2" ry="2" />
<text  x="776.79" y="303.5" ></text>
</g>
<g >
<title>lock_page_memcg (8,399,642 samples, 0.01%)</title><rect x="777.3" y="325" width="0.1" height="15.0" fill="rgb(207,178,29)" rx="2" ry="2" />
<text  x="780.29" y="335.5" ></text>
</g>
<g >
<title>__page_cache_release (12,818,725 samples, 0.01%)</title><rect x="777.5" y="277" width="0.2" height="15.0" fill="rgb(224,12,17)" rx="2" ry="2" />
<text  x="780.50" y="287.5" ></text>
</g>
<g >
<title>prb_read_valid (9,733,074 samples, 0.01%)</title><rect x="775.5" y="261" width="0.2" height="15.0" fill="rgb(216,191,31)" rx="2" ry="2" />
<text  x="778.55" y="271.5" ></text>
</g>
<g >
<title>irq_work_tick (67,043,672 samples, 0.07%)</title><rect x="763.8" y="213" width="0.8" height="15.0" fill="rgb(233,224,33)" rx="2" ry="2" />
<text  x="766.76" y="223.5" ></text>
</g>
<g >
<title>update_process_times (72,982,954 samples, 0.08%)</title><rect x="763.8" y="229" width="0.9" height="15.0" fill="rgb(237,57,13)" rx="2" ry="2" />
<text  x="766.76" y="239.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (27,067,231 samples, 0.03%)</title><rect x="771.3" y="341" width="0.3" height="15.0" fill="rgb(207,202,51)" rx="2" ry="2" />
<text  x="774.28" y="351.5" ></text>
</g>
<g >
<title>free_unref_page (56,992,050 samples, 0.06%)</title><rect x="776.0" y="293" width="0.7" height="15.0" fill="rgb(229,208,43)" rx="2" ry="2" />
<text  x="779.01" y="303.5" ></text>
</g>
<g >
<title>clear_subpage (355,289,932 samples, 0.39%)</title><rect x="764.7" y="357" width="4.6" height="15.0" fill="rgb(217,75,34)" rx="2" ry="2" />
<text  x="767.73" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (120,548,375 samples, 0.13%)</title><rect x="498.6" y="245" width="1.6" height="15.0" fill="rgb(253,192,1)" rx="2" ry="2" />
<text  x="501.62" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (79,017,927 samples, 0.09%)</title><rect x="763.7" y="309" width="1.0" height="15.0" fill="rgb(245,149,45)" rx="2" ry="2" />
<text  x="766.70" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,559,905 samples, 0.01%)</title><rect x="775.5" y="421" width="0.2" height="15.0" fill="rgb(206,112,12)" rx="2" ry="2" />
<text  x="778.54" y="431.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (54,104,833 samples, 0.06%)</title><rect x="48.9" y="373" width="0.7" height="15.0" fill="rgb(207,8,39)" rx="2" ry="2" />
<text  x="51.92" y="383.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (56,760,379,386 samples, 61.55%)</title><rect x="47.9" y="389" width="726.3" height="15.0" fill="rgb(217,105,51)" rx="2" ry="2" />
<text  x="50.86" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>hrtimer_interrupt (116,626,107 samples, 0.13%)</title><rect x="1188.5" y="437" width="1.5" height="15.0" fill="rgb(231,13,37)" rx="2" ry="2" />
<text  x="1191.47" y="447.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (17,633,864 samples, 0.02%)</title><rect x="777.8" y="245" width="0.2" height="15.0" fill="rgb(231,204,16)" rx="2" ry="2" />
<text  x="780.79" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56,858,440,030 samples, 61.66%)</title><rect x="46.6" y="405" width="727.6" height="15.0" fill="rgb(232,174,6)" rx="2" ry="2" />
<text  x="49.62" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>all (92,213,954,306 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(222,152,16)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,146,806 samples, 0.01%)</title><rect x="775.5" y="405" width="0.2" height="15.0" fill="rgb(245,88,14)" rx="2" ry="2" />
<text  x="778.54" y="415.5" ></text>
</g>
<g >
<title>page_counter_try_charge (17,034,622 samples, 0.02%)</title><rect x="49.1" y="325" width="0.3" height="15.0" fill="rgb(208,148,29)" rx="2" ry="2" />
<text  x="52.14" y="335.5" ></text>
</g>
<g >
<title>free_compound_page (410,946,596 samples, 0.45%)</title><rect x="777.8" y="261" width="5.3" height="15.0" fill="rgb(230,62,53)" rx="2" ry="2" />
<text  x="780.79" y="271.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (442,994,120 samples, 0.48%)</title><rect x="777.4" y="341" width="5.7" height="15.0" fill="rgb(232,64,39)" rx="2" ry="2" />
<text  x="780.41" y="351.5" ></text>
</g>
<g >
<title>irq_work_tick (99,341,816 samples, 0.11%)</title><rect x="498.7" y="165" width="1.3" height="15.0" fill="rgb(242,216,22)" rx="2" ry="2" />
<text  x="501.71" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (80,291,086 samples, 0.09%)</title><rect x="763.7" y="341" width="1.0" height="15.0" fill="rgb(210,200,6)" rx="2" ry="2" />
<text  x="766.70" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (117,007,486 samples, 0.13%)</title><rect x="498.6" y="213" width="1.5" height="15.0" fill="rgb(209,116,30)" rx="2" ry="2" />
<text  x="501.62" y="223.5" ></text>
</g>
<g >
<title>desc_read (19,656,275 samples, 0.02%)</title><rect x="499.3" y="37" width="0.2" height="15.0" fill="rgb(207,170,41)" rx="2" ry="2" />
<text  x="502.27" y="47.5" ></text>
</g>
<g >
<title>_prb_read_valid (41,956,394 samples, 0.05%)</title><rect x="763.8" y="117" width="0.5" height="15.0" fill="rgb(247,22,8)" rx="2" ry="2" />
<text  x="766.81" y="127.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (64,038,069 samples, 0.07%)</title><rect x="775.9" y="405" width="0.8" height="15.0" fill="rgb(244,38,12)" rx="2" ry="2" />
<text  x="778.92" y="415.5" ></text>
</g>
<g >
<title>irq_work_single (66,784,940 samples, 0.07%)</title><rect x="763.8" y="181" width="0.8" height="15.0" fill="rgb(238,0,16)" rx="2" ry="2" />
<text  x="766.77" y="191.5" ></text>
</g>
<g >
<title>unmap_vmas (495,102,372 samples, 0.54%)</title><rect x="776.7" y="405" width="6.4" height="15.0" fill="rgb(245,176,9)" rx="2" ry="2" />
<text  x="779.74" y="415.5" ></text>
</g>
<g >
<title>irq_work_tick (9,993,487 samples, 0.01%)</title><rect x="775.5" y="341" width="0.2" height="15.0" fill="rgb(252,29,38)" rx="2" ry="2" />
<text  x="778.54" y="351.5" ></text>
</g>
<g >
<title>[unknown] (59,852,735,843 samples, 64.91%)</title><rect x="10.0" y="501" width="765.9" height="15.0" fill="rgb(240,45,35)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>__put_compound_page (439,875,134 samples, 0.48%)</title><rect x="777.4" y="293" width="5.7" height="15.0" fill="rgb(253,132,48)" rx="2" ry="2" />
<text  x="780.43" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (56,871,027,210 samples, 61.67%)</title><rect x="46.5" y="421" width="727.7" height="15.0" fill="rgb(231,146,2)" rx="2" ry="2" />
<text  x="49.46" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>page_remove_rmap (19,041,603 samples, 0.02%)</title><rect x="777.2" y="341" width="0.2" height="15.0" fill="rgb(228,129,39)" rx="2" ry="2" />
<text  x="780.16" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (11,104,489 samples, 0.01%)</title><rect x="771.7" y="357" width="0.1" height="15.0" fill="rgb(205,61,16)" rx="2" ry="2" />
<text  x="774.65" y="367.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (66,699,273 samples, 0.07%)</title><rect x="763.8" y="165" width="0.8" height="15.0" fill="rgb(214,140,17)" rx="2" ry="2" />
<text  x="766.77" y="175.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (106,922,078 samples, 0.12%)</title><rect x="772.2" y="325" width="1.4" height="15.0" fill="rgb(207,138,46)" rx="2" ry="2" />
<text  x="775.21" y="335.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (21,972,052 samples, 0.02%)</title><rect x="1189.1" y="245" width="0.3" height="15.0" fill="rgb(235,38,52)" rx="2" ry="2" />
<text  x="1192.14" y="255.5" ></text>
</g>
<g >
<title>prep_new_page (36,310,019,882 samples, 39.38%)</title><rect x="50.2" y="325" width="464.6" height="15.0" fill="rgb(244,203,42)" rx="2" ry="2" />
<text  x="53.19" y="335.5" >prep_new_page</text>
</g>
<g >
<title>free_transhuge_page (60,822,582 samples, 0.07%)</title><rect x="776.0" y="325" width="0.7" height="15.0" fill="rgb(252,228,14)" rx="2" ry="2" />
<text  x="778.96" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (441,568,006 samples, 0.48%)</title><rect x="777.4" y="325" width="5.7" height="15.0" fill="rgb(219,179,15)" rx="2" ry="2" />
<text  x="780.41" y="335.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (98,605,353 samples, 0.11%)</title><rect x="498.7" y="117" width="1.3" height="15.0" fill="rgb(207,40,44)" rx="2" ry="2" />
<text  x="501.72" y="127.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (377,128,813 samples, 0.41%)</title><rect x="500.2" y="309" width="4.8" height="15.0" fill="rgb(216,204,51)" rx="2" ry="2" />
<text  x="503.19" y="319.5" ></text>
</g>
<g >
<title>free_pcp_prepare (7,858,247 samples, 0.01%)</title><rect x="777.0" y="309" width="0.1" height="15.0" fill="rgb(236,77,11)" rx="2" ry="2" />
<text  x="779.97" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,061,592 samples, 0.01%)</title><rect x="775.5" y="389" width="0.2" height="15.0" fill="rgb(232,86,52)" rx="2" ry="2" />
<text  x="778.54" y="399.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (14,624,529 samples, 0.02%)</title><rect x="764.1" y="101" width="0.2" height="15.0" fill="rgb(246,92,29)" rx="2" ry="2" />
<text  x="767.09" y="111.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (8,044,035 samples, 0.01%)</title><rect x="48.2" y="373" width="0.1" height="15.0" fill="rgb(213,54,52)" rx="2" ry="2" />
<text  x="51.23" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (10,201,721 samples, 0.01%)</title><rect x="500.0" y="165" width="0.1" height="15.0" fill="rgb(248,169,51)" rx="2" ry="2" />
<text  x="502.99" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (59,844,323,831 samples, 64.90%)</title><rect x="10.0" y="485" width="765.8" height="15.0" fill="rgb(213,16,9)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >__memset_avx2_erms</text>
</g>
<g >
<title>pte_alloc_one (182,252,243 samples, 0.20%)</title><rect x="771.9" y="373" width="2.3" height="15.0" fill="rgb(246,67,27)" rx="2" ry="2" />
<text  x="774.86" y="383.5" ></text>
</g>
<g >
<title>zap_huge_pmd (492,334,606 samples, 0.53%)</title><rect x="776.8" y="357" width="6.3" height="15.0" fill="rgb(236,44,50)" rx="2" ry="2" />
<text  x="779.78" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (35,148,894,837 samples, 38.12%)</title><rect x="50.4" y="309" width="449.8" height="15.0" fill="rgb(212,30,17)" rx="2" ry="2" />
<text  x="53.42" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>sysbench (92,213,954,306 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(225,13,41)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >sysbench</text>
</g>
<g >
<title>do_syscall_64 (560,387,031 samples, 0.61%)</title><rect x="775.9" y="485" width="7.2" height="15.0" fill="rgb(225,5,21)" rx="2" ry="2" />
<text  x="778.91" y="495.5" ></text>
</g>
<g >
<title>page_counter_try_charge (47,595,616 samples, 0.05%)</title><rect x="772.6" y="293" width="0.6" height="15.0" fill="rgb(213,129,17)" rx="2" ry="2" />
<text  x="775.58" y="303.5" ></text>
</g>
<g >
<title>mmput (560,126,987 samples, 0.61%)</title><rect x="775.9" y="437" width="7.2" height="15.0" fill="rgb(218,87,43)" rx="2" ry="2" />
<text  x="778.91" y="447.5" ></text>
</g>
<g >
<title>uncharge_batch (16,032,445 samples, 0.02%)</title><rect x="777.8" y="229" width="0.2" height="15.0" fill="rgb(210,120,43)" rx="2" ry="2" />
<text  x="780.81" y="239.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (77,555,157 samples, 0.08%)</title><rect x="772.6" y="309" width="0.9" height="15.0" fill="rgb(226,89,22)" rx="2" ry="2" />
<text  x="775.55" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (36,354,866,317 samples, 39.42%)</title><rect x="49.6" y="373" width="465.2" height="15.0" fill="rgb(227,162,34)" rx="2" ry="2" />
<text  x="52.62" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>console_unlock (64,624,388 samples, 0.07%)</title><rect x="763.8" y="149" width="0.8" height="15.0" fill="rgb(210,57,12)" rx="2" ry="2" />
<text  x="766.78" y="159.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (18,405,321 samples, 0.02%)</title><rect x="49.4" y="357" width="0.2" height="15.0" fill="rgb(248,210,4)" rx="2" ry="2" />
<text  x="52.37" y="367.5" ></text>
</g>
<g >
<title>prb_read_valid (92,785,010 samples, 0.10%)</title><rect x="1188.6" y="277" width="1.2" height="15.0" fill="rgb(224,37,53)" rx="2" ry="2" />
<text  x="1191.63" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (87,636,583 samples, 0.10%)</title><rect x="46.7" y="389" width="1.1" height="15.0" fill="rgb(227,82,22)" rx="2" ry="2" />
<text  x="49.69" y="399.5" ></text>
</g>
<g >
<title>update_process_times (11,628,928 samples, 0.01%)</title><rect x="775.5" y="357" width="0.2" height="15.0" fill="rgb(254,212,32)" rx="2" ry="2" />
<text  x="778.54" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (19,408,009,091 samples, 21.05%)</title><rect x="516.4" y="357" width="248.3" height="15.0" fill="rgb(222,197,0)" rx="2" ry="2" />
<text  x="519.37" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>try_charge_memcg (25,591,312 samples, 0.03%)</title><rect x="773.2" y="293" width="0.3" height="15.0" fill="rgb(249,33,18)" rx="2" ry="2" />
<text  x="776.22" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (9,805,742 samples, 0.01%)</title><rect x="771.7" y="341" width="0.1" height="15.0" fill="rgb(229,159,14)" rx="2" ry="2" />
<text  x="774.66" y="351.5" ></text>
</g>
<g >
<title>update_process_times (111,495,942 samples, 0.12%)</title><rect x="498.7" y="181" width="1.4" height="15.0" fill="rgb(231,191,4)" rx="2" ry="2" />
<text  x="501.70" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (80,291,086 samples, 0.09%)</title><rect x="763.7" y="325" width="1.0" height="15.0" fill="rgb(229,177,51)" rx="2" ry="2" />
<text  x="766.70" y="335.5" ></text>
</g>
<g >
<title>[vmlinux] (560,387,031 samples, 0.61%)</title><rect x="775.9" y="469" width="7.2" height="15.0" fill="rgb(216,46,49)" rx="2" ry="2" />
<text  x="778.91" y="479.5" ></text>
</g>
<g >
<title>event_seq_write (31,799,421,140 samples, 34.48%)</title><rect x="783.1" y="501" width="406.9" height="15.0" fill="rgb(214,76,15)" rx="2" ry="2" />
<text  x="786.08" y="511.5" >event_seq_write</text>
</g>
<g >
<title>memcg_check_events (10,703,383 samples, 0.01%)</title><rect x="49.0" y="341" width="0.1" height="15.0" fill="rgb(223,7,19)" rx="2" ry="2" />
<text  x="51.97" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,730,060 samples, 0.01%)</title><rect x="775.5" y="437" width="0.2" height="15.0" fill="rgb(245,158,7)" rx="2" ry="2" />
<text  x="778.54" y="447.5" ></text>
</g>
</g>
</svg>
