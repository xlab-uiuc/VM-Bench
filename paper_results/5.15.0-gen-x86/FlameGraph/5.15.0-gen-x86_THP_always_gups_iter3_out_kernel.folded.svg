<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>charge_memcg (25,435,292 samples, 0.04%)</title><rect x="27.1" y="357" width="0.6" height="15.0" fill="rgb(244,205,27)" rx="2" ry="2" />
<text  x="30.14" y="367.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (7,433,658 samples, 0.01%)</title><rect x="25.2" y="373" width="0.2" height="15.0" fill="rgb(252,16,35)" rx="2" ry="2" />
<text  x="28.22" y="383.5" ></text>
</g>
<g >
<title>get_data.isra.0 (15,915,093 samples, 0.03%)</title><rect x="1186.5" y="229" width="0.3" height="15.0" fill="rgb(246,35,19)" rx="2" ry="2" />
<text  x="1189.51" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,265,602 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(246,64,22)" rx="2" ry="2" />
<text  x="13.17" y="431.5" ></text>
</g>
<g >
<title>do_sys_open (16,265,602 samples, 0.03%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(221,158,13)" rx="2" ry="2" />
<text  x="13.17" y="415.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="341" width="0.1" height="15.0" fill="rgb(249,19,7)" rx="2" ry="2" />
<text  x="13.05" y="351.5" ></text>
</g>
<g >
<title>uncharge_batch (15,138,873 samples, 0.03%)</title><rect x="13.9" y="197" width="0.3" height="15.0" fill="rgb(245,108,0)" rx="2" ry="2" />
<text  x="16.86" y="207.5" ></text>
</g>
<g >
<title>irq_work_single (47,862,125 samples, 0.08%)</title><rect x="1169.3" y="181" width="1.0" height="15.0" fill="rgb(208,89,34)" rx="2" ry="2" />
<text  x="1172.29" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="357" width="0.1" height="15.0" fill="rgb(206,36,41)" rx="2" ry="2" />
<text  x="13.05" y="367.5" ></text>
</g>
<g >
<title>do_sys_open (9,390,358 samples, 0.02%)</title><rect x="10.7" y="421" width="0.2" height="15.0" fill="rgb(250,219,0)" rx="2" ry="2" />
<text  x="13.68" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (558,316,751 samples, 0.95%)</title><rect x="10.9" y="437" width="11.2" height="15.0" fill="rgb(228,187,25)" rx="2" ry="2" />
<text  x="13.92" y="447.5" ></text>
</g>
<g >
<title>_prb_read_valid (139,170,760 samples, 0.24%)</title><rect x="1184.0" y="245" width="2.8" height="15.0" fill="rgb(227,127,46)" rx="2" ry="2" />
<text  x="1187.03" y="255.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="293" width="0.1" height="15.0" fill="rgb(216,31,18)" rx="2" ry="2" />
<text  x="13.05" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37,459,324,341 samples, 63.85%)</title><rect x="27.9" y="373" width="753.5" height="15.0" fill="rgb(226,118,18)" rx="2" ry="2" />
<text  x="30.95" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>handle_mm_fault (57,666,291,677 samples, 98.29%)</title><rect x="23.2" y="421" width="1159.8" height="15.0" fill="rgb(218,59,12)" rx="2" ry="2" />
<text  x="26.21" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>unmap_single_vma (492,285,335 samples, 0.84%)</title><rect x="12.2" y="357" width="9.9" height="15.0" fill="rgb(253,160,26)" rx="2" ry="2" />
<text  x="15.24" y="367.5" ></text>
</g>
<g >
<title>find_vma (5,029,481 samples, 0.01%)</title><rect x="23.1" y="421" width="0.1" height="15.0" fill="rgb(236,84,21)" rx="2" ry="2" />
<text  x="26.11" y="431.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="405" width="0.1" height="15.0" fill="rgb(243,184,1)" rx="2" ry="2" />
<text  x="13.05" y="415.5" ></text>
</g>
<g >
<title>console_unlock (45,145,709 samples, 0.08%)</title><rect x="1169.3" y="149" width="0.9" height="15.0" fill="rgb(224,31,23)" rx="2" ry="2" />
<text  x="1172.31" y="159.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (7,877,687 samples, 0.01%)</title><rect x="10.2" y="341" width="0.1" height="15.0" fill="rgb(217,156,22)" rx="2" ry="2" />
<text  x="13.19" y="351.5" ></text>
</g>
<g >
<title>__put_compound_page (437,180,627 samples, 0.75%)</title><rect x="13.3" y="261" width="8.8" height="15.0" fill="rgb(213,80,47)" rx="2" ry="2" />
<text  x="16.33" y="271.5" ></text>
</g>
<g >
<title>__cond_resched (85,270,848 samples, 0.15%)</title><rect x="25.4" y="373" width="1.7" height="15.0" fill="rgb(205,97,26)" rx="2" ry="2" />
<text  x="28.37" y="383.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="437" width="0.1" height="15.0" fill="rgb(206,24,51)" rx="2" ry="2" />
<text  x="13.05" y="447.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5,716,417 samples, 0.01%)</title><rect x="13.0" y="293" width="0.1" height="15.0" fill="rgb(208,30,8)" rx="2" ry="2" />
<text  x="15.98" y="303.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,365,496 samples, 0.05%)</title><rect x="1169.4" y="117" width="0.5" height="15.0" fill="rgb(245,222,15)" rx="2" ry="2" />
<text  x="1172.35" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (102,071,561 samples, 0.17%)</title><rect x="760.5" y="277" width="2.0" height="15.0" fill="rgb(224,167,17)" rx="2" ry="2" />
<text  x="763.49" y="287.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (209,138,810 samples, 0.36%)</title><rect x="1183.8" y="293" width="4.2" height="15.0" fill="rgb(233,151,18)" rx="2" ry="2" />
<text  x="1186.81" y="303.5" ></text>
</g>
<g >
<title>unmap_vmas (492,285,335 samples, 0.84%)</title><rect x="12.2" y="373" width="9.9" height="15.0" fill="rgb(241,178,12)" rx="2" ry="2" />
<text  x="15.24" y="383.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (434,964,379 samples, 0.74%)</title><rect x="762.6" y="309" width="8.7" height="15.0" fill="rgb(232,163,19)" rx="2" ry="2" />
<text  x="765.57" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (243,063,566 samples, 0.41%)</title><rect x="1183.5" y="453" width="4.8" height="15.0" fill="rgb(227,71,15)" rx="2" ry="2" />
<text  x="1186.46" y="463.5" ></text>
</g>
<g >
<title>free_transhuge_page (61,129,136 samples, 0.10%)</title><rect x="11.0" y="293" width="1.2" height="15.0" fill="rgb(221,77,9)" rx="2" ry="2" />
<text  x="14.01" y="303.5" ></text>
</g>
<g >
<title>clear_subpage (19,514,372 samples, 0.03%)</title><rect x="1179.5" y="373" width="0.4" height="15.0" fill="rgb(227,127,35)" rx="2" ry="2" />
<text  x="1182.48" y="383.5" ></text>
</g>
<g >
<title>vmacache_find (5,029,481 samples, 0.01%)</title><rect x="23.1" y="405" width="0.1" height="15.0" fill="rgb(223,99,46)" rx="2" ry="2" />
<text  x="26.11" y="415.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,265,602 samples, 0.03%)</title><rect x="10.2" y="389" width="0.3" height="15.0" fill="rgb(205,129,13)" rx="2" ry="2" />
<text  x="13.17" y="399.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="245" width="0.1" height="15.0" fill="rgb(254,79,4)" rx="2" ry="2" />
<text  x="13.05" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,524,327 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(209,24,37)" rx="2" ry="2" />
<text  x="13.17" y="447.5" ></text>
</g>
<g >
<title>irq_work_run_list (48,037,287 samples, 0.08%)</title><rect x="1169.3" y="197" width="1.0" height="15.0" fill="rgb(253,107,17)" rx="2" ry="2" />
<text  x="1172.29" y="207.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,868,048 samples, 0.02%)</title><rect x="1183.5" y="373" width="0.2" height="15.0" fill="rgb(214,12,53)" rx="2" ry="2" />
<text  x="1186.51" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37,433,989,093 samples, 63.80%)</title><rect x="28.4" y="341" width="752.9" height="15.0" fill="rgb(232,126,23)" rx="2" ry="2" />
<text  x="31.37" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>__mod_lruvec_page_state (10,058,977 samples, 0.02%)</title><rect x="1180.3" y="357" width="0.2" height="15.0" fill="rgb(209,70,40)" rx="2" ry="2" />
<text  x="1183.33" y="367.5" ></text>
</g>
<g >
<title>irq_work_run_list (209,761,700 samples, 0.36%)</title><rect x="1183.8" y="325" width="4.2" height="15.0" fill="rgb(225,169,54)" rx="2" ry="2" />
<text  x="1186.79" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (9,970,942 samples, 0.02%)</title><rect x="1183.5" y="325" width="0.2" height="15.0" fill="rgb(240,127,0)" rx="2" ry="2" />
<text  x="1186.53" y="335.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (80,215,959 samples, 0.14%)</title><rect x="760.7" y="117" width="1.6" height="15.0" fill="rgb(241,205,34)" rx="2" ry="2" />
<text  x="763.67" y="127.5" ></text>
</g>
<g >
<title>try_charge_memcg (17,122,757 samples, 0.03%)</title><rect x="1181.9" y="293" width="0.3" height="15.0" fill="rgb(246,19,37)" rx="2" ry="2" />
<text  x="1184.88" y="303.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="277" width="0.1" height="15.0" fill="rgb(248,94,3)" rx="2" ry="2" />
<text  x="13.05" y="287.5" ></text>
</g>
<g >
<title>__free_pages (22,698,031 samples, 0.04%)</title><rect x="12.3" y="309" width="0.5" height="15.0" fill="rgb(205,211,28)" rx="2" ry="2" />
<text  x="15.34" y="319.5" ></text>
</g>
<g >
<title>__GI___openat64 (10,006,987 samples, 0.02%)</title><rect x="10.7" y="485" width="0.2" height="15.0" fill="rgb(219,38,31)" rx="2" ry="2" />
<text  x="13.68" y="495.5" ></text>
</g>
<g >
<title>path_openat (15,127,155 samples, 0.03%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(227,30,29)" rx="2" ry="2" />
<text  x="13.17" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (102,071,561 samples, 0.17%)</title><rect x="760.5" y="293" width="2.0" height="15.0" fill="rgb(249,171,40)" rx="2" ry="2" />
<text  x="763.49" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,257,781 samples, 0.01%)</title><rect x="13.5" y="229" width="0.1" height="15.0" fill="rgb(233,198,40)" rx="2" ry="2" />
<text  x="16.50" y="239.5" ></text>
</g>
<g >
<title>desc_read (7,101,819 samples, 0.01%)</title><rect x="1169.7" y="85" width="0.2" height="15.0" fill="rgb(252,2,45)" rx="2" ry="2" />
<text  x="1172.73" y="95.5" ></text>
</g>
<g >
<title>prb_read_valid (195,280,532 samples, 0.33%)</title><rect x="1184.0" y="261" width="3.9" height="15.0" fill="rgb(223,130,30)" rx="2" ry="2" />
<text  x="1186.97" y="271.5" ></text>
</g>
<g >
<title>path_openat (8,954,667 samples, 0.02%)</title><rect x="10.7" y="373" width="0.2" height="15.0" fill="rgb(207,23,42)" rx="2" ry="2" />
<text  x="13.68" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (20,783,857 samples, 0.04%)</title><rect x="1179.9" y="373" width="0.4" height="15.0" fill="rgb(252,84,30)" rx="2" ry="2" />
<text  x="1182.89" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (56,537,520 samples, 0.10%)</title><rect x="1169.2" y="261" width="1.1" height="15.0" fill="rgb(208,203,39)" rx="2" ry="2" />
<text  x="1172.19" y="271.5" ></text>
</g>
<g >
<title>rmqueue_bulk (17,035,930 samples, 0.03%)</title><rect x="780.9" y="325" width="0.4" height="15.0" fill="rgb(208,41,48)" rx="2" ry="2" />
<text  x="783.93" y="335.5" ></text>
</g>
<g >
<title>update_process_times (52,418,760 samples, 0.09%)</title><rect x="1169.3" y="229" width="1.0" height="15.0" fill="rgb(233,41,6)" rx="2" ry="2" />
<text  x="1172.27" y="239.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (6,365,519 samples, 0.01%)</title><rect x="28.2" y="341" width="0.2" height="15.0" fill="rgb(212,128,52)" rx="2" ry="2" />
<text  x="31.25" y="351.5" ></text>
</g>
<g >
<title>prep_new_page (37,392,646,607 samples, 63.73%)</title><rect x="28.9" y="325" width="752.0" height="15.0" fill="rgb(227,216,39)" rx="2" ry="2" />
<text  x="31.86" y="335.5" >prep_new_page</text>
</g>
<g >
<title>prep_new_page (9,337,786 samples, 0.02%)</title><rect x="1182.5" y="309" width="0.2" height="15.0" fill="rgb(251,222,14)" rx="2" ry="2" />
<text  x="1185.49" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,647,258,732 samples, 98.26%)</title><rect x="23.5" y="405" width="1159.4" height="15.0" fill="rgb(237,45,4)" rx="2" ry="2" />
<text  x="26.50" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>prb_read_valid (43,305,068 samples, 0.07%)</title><rect x="1169.3" y="133" width="0.9" height="15.0" fill="rgb(249,74,14)" rx="2" ry="2" />
<text  x="1172.35" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,831,232 samples, 0.02%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(248,157,52)" rx="2" ry="2" />
<text  x="13.68" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (9,011,354 samples, 0.02%)</title><rect x="1180.3" y="341" width="0.2" height="15.0" fill="rgb(216,42,31)" rx="2" ry="2" />
<text  x="1183.35" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (492,106,305 samples, 0.84%)</title><rect x="12.2" y="341" width="9.9" height="15.0" fill="rgb(251,137,50)" rx="2" ry="2" />
<text  x="15.25" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (96,279,592 samples, 0.16%)</title><rect x="760.5" y="229" width="1.9" height="15.0" fill="rgb(219,218,46)" rx="2" ry="2" />
<text  x="763.51" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (57,765,397 samples, 0.10%)</title><rect x="1169.2" y="293" width="1.2" height="15.0" fill="rgb(249,192,38)" rx="2" ry="2" />
<text  x="1172.19" y="303.5" ></text>
</g>
<g >
<title>page_counter_cancel (6,329,796 samples, 0.01%)</title><rect x="14.0" y="165" width="0.2" height="15.0" fill="rgb(224,173,47)" rx="2" ry="2" />
<text  x="17.03" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (236,459,489 samples, 0.40%)</title><rect x="1183.5" y="405" width="4.7" height="15.0" fill="rgb(254,163,11)" rx="2" ry="2" />
<text  x="1186.48" y="415.5" ></text>
</g>
<g >
<title>__page_cache_release (9,885,074 samples, 0.02%)</title><rect x="13.5" y="245" width="0.2" height="15.0" fill="rgb(232,67,30)" rx="2" ry="2" />
<text  x="16.48" y="255.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (45,364,792 samples, 0.08%)</title><rect x="1185.6" y="229" width="0.9" height="15.0" fill="rgb(225,26,33)" rx="2" ry="2" />
<text  x="1188.59" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (36,463,557,405 samples, 62.15%)</title><rect x="29.2" y="309" width="733.4" height="15.0" fill="rgb(223,45,16)" rx="2" ry="2" />
<text  x="32.19" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>free_compound_page (411,435,616 samples, 0.70%)</title><rect x="13.8" y="229" width="8.3" height="15.0" fill="rgb(211,188,29)" rx="2" ry="2" />
<text  x="16.84" y="239.5" ></text>
</g>
<g >
<title>vfs_read (52,848,877 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(211,175,44)" rx="2" ry="2" />
<text  x="1191.93" y="415.5" ></text>
</g>
<g >
<title>pci_read_config (51,186,292 samples, 0.09%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(207,96,1)" rx="2" ry="2" />
<text  x="1191.96" y="351.5" ></text>
</g>
<g >
<title>__vm_munmap (558,316,751 samples, 0.95%)</title><rect x="10.9" y="421" width="11.2" height="15.0" fill="rgb(210,19,36)" rx="2" ry="2" />
<text  x="13.92" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (236,013,798 samples, 0.40%)</title><rect x="1183.5" y="389" width="4.7" height="15.0" fill="rgb(243,29,0)" rx="2" ry="2" />
<text  x="1186.48" y="399.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="325" width="0.1" height="15.0" fill="rgb(215,163,40)" rx="2" ry="2" />
<text  x="13.05" y="335.5" ></text>
</g>
<g >
<title>free_pcp_prepare (7,153,876 samples, 0.01%)</title><rect x="12.6" y="277" width="0.1" height="15.0" fill="rgb(237,99,14)" rx="2" ry="2" />
<text  x="15.58" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,524,327 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(246,59,4)" rx="2" ry="2" />
<text  x="13.17" y="463.5" ></text>
</g>
<g >
<title>[unknown] (5,086,753 samples, 0.01%)</title><rect x="10.1" y="453" width="0.1" height="15.0" fill="rgb(235,119,28)" rx="2" ry="2" />
<text  x="13.05" y="463.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="309" width="0.1" height="15.0" fill="rgb(247,12,42)" rx="2" ry="2" />
<text  x="13.05" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (52,937,108 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(210,179,35)" rx="2" ry="2" />
<text  x="1191.92" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,937,108 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(227,9,6)" rx="2" ry="2" />
<text  x="1191.92" y="463.5" ></text>
</g>
<g >
<title>memcg_check_events (8,746,286 samples, 0.01%)</title><rect x="27.2" y="341" width="0.2" height="15.0" fill="rgb(220,213,53)" rx="2" ry="2" />
<text  x="30.19" y="351.5" ></text>
</g>
<g >
<title>clear_subpage (360,307,941 samples, 0.61%)</title><rect x="1170.4" y="357" width="7.2" height="15.0" fill="rgb(228,153,17)" rx="2" ry="2" />
<text  x="1173.38" y="367.5" ></text>
</g>
<g >
<title>pte_alloc_one (114,241,900 samples, 0.19%)</title><rect x="1180.6" y="373" width="2.3" height="15.0" fill="rgb(208,55,54)" rx="2" ry="2" />
<text  x="1183.60" y="383.5" ></text>
</g>
<g >
<title>try_charge_memcg (14,065,653 samples, 0.02%)</title><rect x="27.4" y="341" width="0.3" height="15.0" fill="rgb(228,99,5)" rx="2" ry="2" />
<text  x="30.37" y="351.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="421" width="0.1" height="15.0" fill="rgb(206,36,18)" rx="2" ry="2" />
<text  x="13.05" y="431.5" ></text>
</g>
<g >
<title>get_data.isra.0 (6,320,908 samples, 0.01%)</title><rect x="761.6" y="53" width="0.1" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="764.62" y="63.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="261" width="0.1" height="15.0" fill="rgb(247,207,54)" rx="2" ry="2" />
<text  x="13.05" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (5,674,102 samples, 0.01%)</title><rect x="22.0" y="197" width="0.1" height="15.0" fill="rgb(224,164,51)" rx="2" ry="2" />
<text  x="24.99" y="207.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (64,691,789 samples, 0.11%)</title><rect x="10.9" y="341" width="1.3" height="15.0" fill="rgb(237,118,43)" rx="2" ry="2" />
<text  x="13.93" y="351.5" ></text>
</g>
<g >
<title>free_compound_page (59,880,997 samples, 0.10%)</title><rect x="11.0" y="277" width="1.2" height="15.0" fill="rgb(224,118,21)" rx="2" ry="2" />
<text  x="14.03" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (52,673,420 samples, 0.09%)</title><rect x="1188.9" y="389" width="1.1" height="15.0" fill="rgb(249,12,29)" rx="2" ry="2" />
<text  x="1191.93" y="399.5" ></text>
</g>
<g >
<title>pci_conf1_read (49,346,372 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(212,32,25)" rx="2" ry="2" />
<text  x="1191.99" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,995,214 samples, 0.01%)</title><rect x="1180.4" y="325" width="0.1" height="15.0" fill="rgb(250,5,39)" rx="2" ry="2" />
<text  x="1183.39" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (11,599,860 samples, 0.02%)</title><rect x="1180.6" y="357" width="0.2" height="15.0" fill="rgb(208,192,51)" rx="2" ry="2" />
<text  x="1183.61" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,733,887,589 samples, 98.40%)</title><rect x="22.2" y="469" width="1161.2" height="15.0" fill="rgb(206,167,2)" rx="2" ry="2" />
<text  x="25.18" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>free_transhuge_page (419,452,679 samples, 0.71%)</title><rect x="13.7" y="245" width="8.4" height="15.0" fill="rgb(206,204,46)" rx="2" ry="2" />
<text  x="16.68" y="255.5" ></text>
</g>
<g >
<title>prb_read_valid (75,302,234 samples, 0.13%)</title><rect x="760.7" y="85" width="1.5" height="15.0" fill="rgb(249,191,26)" rx="2" ry="2" />
<text  x="763.72" y="95.5" ></text>
</g>
<g >
<title>walk_component (4,996,243 samples, 0.01%)</title><rect x="10.2" y="325" width="0.1" height="15.0" fill="rgb(248,178,34)" rx="2" ry="2" />
<text  x="13.25" y="335.5" ></text>
</g>
<g >
<title>pci_user_read_config_dword (50,572,543 samples, 0.09%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(221,33,20)" rx="2" ry="2" />
<text  x="1191.97" y="335.5" ></text>
</g>
<g >
<title>_prb_read_valid (49,503,601 samples, 0.08%)</title><rect x="760.7" y="69" width="1.0" height="15.0" fill="rgb(239,143,11)" rx="2" ry="2" />
<text  x="763.75" y="79.5" ></text>
</g>
<g >
<title>desc_read (12,379,137 samples, 0.02%)</title><rect x="761.4" y="37" width="0.2" height="15.0" fill="rgb(248,44,1)" rx="2" ry="2" />
<text  x="764.37" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock (54,700,245 samples, 0.09%)</title><rect x="23.7" y="389" width="1.1" height="15.0" fill="rgb(237,31,37)" rx="2" ry="2" />
<text  x="26.66" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (558,316,751 samples, 0.95%)</title><rect x="10.9" y="469" width="11.2" height="15.0" fill="rgb(244,89,17)" rx="2" ry="2" />
<text  x="13.92" y="479.5" ></text>
</g>
<g >
<title>do_sys_openat2 (9,390,358 samples, 0.02%)</title><rect x="10.7" y="405" width="0.2" height="15.0" fill="rgb(237,121,32)" rx="2" ry="2" />
<text  x="13.68" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (53,201,278 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(233,148,52)" rx="2" ry="2" />
<text  x="1191.92" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (240,391,366 samples, 0.41%)</title><rect x="1183.5" y="437" width="4.8" height="15.0" fill="rgb(237,38,7)" rx="2" ry="2" />
<text  x="1186.46" y="447.5" ></text>
</g>
<g >
<title>irq_work_tick (210,029,565 samples, 0.36%)</title><rect x="1183.8" y="341" width="4.2" height="15.0" fill="rgb(216,216,10)" rx="2" ry="2" />
<text  x="1186.79" y="351.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (11,628,797 samples, 0.02%)</title><rect x="1180.3" y="373" width="0.2" height="15.0" fill="rgb(248,122,44)" rx="2" ry="2" />
<text  x="1183.31" y="383.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="373" width="0.1" height="15.0" fill="rgb(210,47,35)" rx="2" ry="2" />
<text  x="13.05" y="383.5" ></text>
</g>
<g >
<title>clear_huge_page (19,794,928,920 samples, 33.74%)</title><rect x="781.4" y="373" width="398.1" height="15.0" fill="rgb(205,164,23)" rx="2" ry="2" />
<text  x="784.35" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>link_path_walk.part.0 (5,183,093 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(222,88,44)" rx="2" ry="2" />
<text  x="13.70" y="367.5" ></text>
</g>
<g >
<title>do_filp_open (15,214,677 samples, 0.03%)</title><rect x="10.2" y="373" width="0.3" height="15.0" fill="rgb(234,100,6)" rx="2" ry="2" />
<text  x="13.17" y="383.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (16,416,163 samples, 0.03%)</title><rect x="761.3" y="53" width="0.3" height="15.0" fill="rgb(252,45,8)" rx="2" ry="2" />
<text  x="764.29" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (48,689,941 samples, 0.08%)</title><rect x="1186.9" y="245" width="1.0" height="15.0" fill="rgb(241,198,16)" rx="2" ry="2" />
<text  x="1189.92" y="255.5" ></text>
</g>
<g >
<title>free_unref_page (57,567,979 samples, 0.10%)</title><rect x="11.1" y="261" width="1.1" height="15.0" fill="rgb(247,188,28)" rx="2" ry="2" />
<text  x="14.08" y="271.5" ></text>
</g>
<g >
<title>desc_read (5,099,324 samples, 0.01%)</title><rect x="1185.5" y="229" width="0.1" height="15.0" fill="rgb(235,31,17)" rx="2" ry="2" />
<text  x="1188.49" y="239.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (65,224,845 samples, 0.11%)</title><rect x="10.9" y="357" width="1.3" height="15.0" fill="rgb(231,137,9)" rx="2" ry="2" />
<text  x="13.93" y="367.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (17,012,633 samples, 0.03%)</title><rect x="13.8" y="213" width="0.4" height="15.0" fill="rgb(220,28,49)" rx="2" ry="2" />
<text  x="16.85" y="223.5" ></text>
</g>
<g >
<title>PageHuge (7,396,428 samples, 0.01%)</title><rect x="13.3" y="245" width="0.2" height="15.0" fill="rgb(215,41,20)" rx="2" ry="2" />
<text  x="16.33" y="255.5" ></text>
</g>
<g >
<title>pci_read (49,522,067 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(223,134,54)" rx="2" ry="2" />
<text  x="1191.99" y="319.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (10,510,229 samples, 0.02%)</title><rect x="1183.5" y="357" width="0.2" height="15.0" fill="rgb(251,55,28)" rx="2" ry="2" />
<text  x="1186.52" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (248,147,359 samples, 0.42%)</title><rect x="1183.4" y="469" width="4.9" height="15.0" fill="rgb(211,132,17)" rx="2" ry="2" />
<text  x="1186.36" y="479.5" ></text>
</g>
<g >
<title>irq_work_run_list (80,917,844 samples, 0.14%)</title><rect x="760.7" y="149" width="1.6" height="15.0" fill="rgb(221,59,53)" rx="2" ry="2" />
<text  x="763.66" y="159.5" ></text>
</g>
<g >
<title>update_process_times (222,823,134 samples, 0.38%)</title><rect x="1183.7" y="357" width="4.5" height="15.0" fill="rgb(254,130,37)" rx="2" ry="2" />
<text  x="1186.75" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (36,906,346 samples, 0.06%)</title><rect x="782.9" y="357" width="0.8" height="15.0" fill="rgb(222,32,52)" rx="2" ry="2" />
<text  x="785.94" y="367.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (9,029,000 samples, 0.02%)</title><rect x="1169.7" y="101" width="0.2" height="15.0" fill="rgb(206,24,8)" rx="2" ry="2" />
<text  x="1172.69" y="111.5" ></text>
</g>
<g >
<title>[unknown] (4,998,351 samples, 0.01%)</title><rect x="10.1" y="389" width="0.1" height="15.0" fill="rgb(236,174,23)" rx="2" ry="2" />
<text  x="13.05" y="399.5" ></text>
</g>
<g >
<title>release_pages (64,602,372 samples, 0.11%)</title><rect x="10.9" y="325" width="1.3" height="15.0" fill="rgb(213,115,44)" rx="2" ry="2" />
<text  x="13.94" y="335.5" ></text>
</g>
<g >
<title>zap_huge_pmd (490,946,106 samples, 0.84%)</title><rect x="12.3" y="325" width="9.8" height="15.0" fill="rgb(250,98,41)" rx="2" ry="2" />
<text  x="15.27" y="335.5" ></text>
</g>
<g >
<title>free_pcp_prepare (387,232,479 samples, 0.66%)</title><rect x="14.2" y="197" width="7.8" height="15.0" fill="rgb(252,135,44)" rx="2" ry="2" />
<text  x="17.20" y="207.5" ></text>
</g>
<g >
<title>irq_work_single (80,742,777 samples, 0.14%)</title><rect x="760.7" y="133" width="1.6" height="15.0" fill="rgb(242,168,22)" rx="2" ry="2" />
<text  x="763.66" y="143.5" ></text>
</g>
<g >
<title>update_process_times (90,223,569 samples, 0.15%)</title><rect x="760.6" y="181" width="1.8" height="15.0" fill="rgb(216,164,25)" rx="2" ry="2" />
<text  x="763.63" y="191.5" ></text>
</g>
<g >
<title>update_wall_time (10,330,483 samples, 0.02%)</title><rect x="1183.5" y="341" width="0.2" height="15.0" fill="rgb(229,25,10)" rx="2" ry="2" />
<text  x="1186.52" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (99,263,212 samples, 0.17%)</title><rect x="760.5" y="245" width="2.0" height="15.0" fill="rgb(219,109,49)" rx="2" ry="2" />
<text  x="763.51" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (58,116,209 samples, 0.10%)</title><rect x="1169.2" y="309" width="1.2" height="15.0" fill="rgb(245,94,21)" rx="2" ry="2" />
<text  x="1172.18" y="319.5" ></text>
</g>
<g >
<title>page_counter_try_charge (12,581,122 samples, 0.02%)</title><rect x="27.4" y="325" width="0.2" height="15.0" fill="rgb(250,208,10)" rx="2" ry="2" />
<text  x="30.39" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (98,097,332 samples, 0.17%)</title><rect x="1180.8" y="341" width="2.0" height="15.0" fill="rgb(214,205,18)" rx="2" ry="2" />
<text  x="1183.85" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add (20,609,001 samples, 0.04%)</title><rect x="1179.9" y="357" width="0.4" height="15.0" fill="rgb(227,101,8)" rx="2" ry="2" />
<text  x="1182.90" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,784,819 samples, 0.02%)</title><rect x="28.9" y="309" width="0.3" height="15.0" fill="rgb(233,153,46)" rx="2" ry="2" />
<text  x="31.91" y="319.5" ></text>
</g>
<g >
<title>__GI___openat64 (16,524,327 samples, 0.03%)</title><rect x="10.2" y="469" width="0.3" height="15.0" fill="rgb(215,219,37)" rx="2" ry="2" />
<text  x="13.17" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (56,800,726 samples, 0.10%)</title><rect x="1169.2" y="277" width="1.1" height="15.0" fill="rgb(213,55,14)" rx="2" ry="2" />
<text  x="1172.19" y="287.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,673,420 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(250,184,19)" rx="2" ry="2" />
<text  x="1191.93" y="383.5" ></text>
</g>
<g >
<title>lock_page_memcg (8,477,919 samples, 0.01%)</title><rect x="13.1" y="293" width="0.2" height="15.0" fill="rgb(219,229,17)" rx="2" ry="2" />
<text  x="16.10" y="303.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (68,837,668 samples, 0.12%)</title><rect x="1180.9" y="325" width="1.4" height="15.0" fill="rgb(248,78,53)" rx="2" ry="2" />
<text  x="1183.89" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (92,266,190 samples, 0.16%)</title><rect x="1177.6" y="357" width="1.9" height="15.0" fill="rgb(254,48,54)" rx="2" ry="2" />
<text  x="1180.63" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (239,680,112 samples, 0.41%)</title><rect x="1183.5" y="421" width="4.8" height="15.0" fill="rgb(221,185,37)" rx="2" ry="2" />
<text  x="1186.47" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (100,228,778 samples, 0.17%)</title><rect x="760.5" y="261" width="2.0" height="15.0" fill="rgb(250,83,50)" rx="2" ry="2" />
<text  x="763.49" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (57,695,478,964 samples, 98.34%)</title><rect x="22.9" y="453" width="1160.4" height="15.0" fill="rgb(241,183,30)" rx="2" ry="2" />
<text  x="25.94" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>page_counter_uncharge (6,773,668 samples, 0.01%)</title><rect x="14.0" y="181" width="0.2" height="15.0" fill="rgb(242,220,40)" rx="2" ry="2" />
<text  x="17.03" y="191.5" ></text>
</g>
<g >
<title>gups_vanilla (58,669,668,980 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(231,11,28)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (223,714,515 samples, 0.38%)</title><rect x="1183.7" y="373" width="4.5" height="15.0" fill="rgb(236,107,29)" rx="2" ry="2" />
<text  x="1186.73" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (95,578,043 samples, 0.16%)</title><rect x="760.5" y="213" width="1.9" height="15.0" fill="rgb(252,18,8)" rx="2" ry="2" />
<text  x="763.52" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (440,826,705 samples, 0.75%)</title><rect x="13.3" y="309" width="8.8" height="15.0" fill="rgb(211,55,6)" rx="2" ry="2" />
<text  x="16.28" y="319.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (65,224,845 samples, 0.11%)</title><rect x="10.9" y="373" width="1.3" height="15.0" fill="rgb(227,191,39)" rx="2" ry="2" />
<text  x="13.93" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (19,734,697 samples, 0.03%)</title><rect x="1179.9" y="341" width="0.4" height="15.0" fill="rgb(226,104,32)" rx="2" ry="2" />
<text  x="1182.91" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,919,133 samples, 0.02%)</title><rect x="10.7" y="469" width="0.2" height="15.0" fill="rgb(254,189,21)" rx="2" ry="2" />
<text  x="13.68" y="479.5" ></text>
</g>
<g >
<title>read (53,201,278 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(205,4,29)" rx="2" ry="2" />
<text  x="1191.92" y="495.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,186,292 samples, 0.09%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(226,209,2)" rx="2" ry="2" />
<text  x="1191.96" y="367.5" ></text>
</g>
<g >
<title>memcpy_erms (22,640,211 samples, 0.04%)</title><rect x="761.8" y="69" width="0.4" height="15.0" fill="rgb(235,128,16)" rx="2" ry="2" />
<text  x="764.78" y="79.5" ></text>
</g>
<g >
<title>unmap_region (558,226,875 samples, 0.95%)</title><rect x="10.9" y="389" width="11.2" height="15.0" fill="rgb(215,181,31)" rx="2" ry="2" />
<text  x="13.92" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,522,903 samples, 0.01%)</title><rect x="783.7" y="357" width="0.1" height="15.0" fill="rgb(254,34,41)" rx="2" ry="2" />
<text  x="786.69" y="367.5" ></text>
</g>
<g >
<title>__put_compound_page (64,161,604 samples, 0.11%)</title><rect x="10.9" y="309" width="1.3" height="15.0" fill="rgb(215,31,4)" rx="2" ry="2" />
<text  x="13.94" y="319.5" ></text>
</g>
<g >
<title>prep_compound_page (477,627,172 samples, 0.81%)</title><rect x="771.3" y="309" width="9.6" height="15.0" fill="rgb(233,33,3)" rx="2" ry="2" />
<text  x="774.32" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (9,390,358 samples, 0.02%)</title><rect x="10.7" y="437" width="0.2" height="15.0" fill="rgb(241,173,45)" rx="2" ry="2" />
<text  x="13.68" y="447.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5,398,415 samples, 0.01%)</title><rect x="1180.7" y="325" width="0.1" height="15.0" fill="rgb(224,90,34)" rx="2" ry="2" />
<text  x="1183.73" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (10,471,260 samples, 0.02%)</title><rect x="1188.0" y="341" width="0.2" height="15.0" fill="rgb(231,8,25)" rx="2" ry="2" />
<text  x="1191.02" y="351.5" ></text>
</g>
<g >
<title>do_filp_open (8,954,667 samples, 0.02%)</title><rect x="10.7" y="389" width="0.2" height="15.0" fill="rgb(253,209,12)" rx="2" ry="2" />
<text  x="13.68" y="399.5" ></text>
</g>
<g >
<title>raw_pci_read (49,434,128 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(211,156,13)" rx="2" ry="2" />
<text  x="1191.99" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (8,641,752 samples, 0.01%)</title><rect x="1182.5" y="293" width="0.2" height="15.0" fill="rgb(228,152,41)" rx="2" ry="2" />
<text  x="1185.50" y="303.5" ></text>
</g>
<g >
<title>irq_work_tick (80,917,844 samples, 0.14%)</title><rect x="760.7" y="165" width="1.6" height="15.0" fill="rgb(229,170,43)" rx="2" ry="2" />
<text  x="763.66" y="175.5" ></text>
</g>
<g >
<title>free_unref_page (11,533,929 samples, 0.02%)</title><rect x="12.6" y="293" width="0.2" height="15.0" fill="rgb(212,218,44)" rx="2" ry="2" />
<text  x="15.56" y="303.5" ></text>
</g>
<g >
<title>free_pcp_prepare (56,585,855 samples, 0.10%)</title><rect x="11.1" y="245" width="1.1" height="15.0" fill="rgb(228,152,12)" rx="2" ry="2" />
<text  x="14.08" y="255.5" ></text>
</g>
<g >
<title>ksys_read (52,937,108 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(208,212,13)" rx="2" ry="2" />
<text  x="1191.92" y="431.5" ></text>
</g>
<g >
<title>alloc_pages (101,767,410 samples, 0.17%)</title><rect x="1180.8" y="357" width="2.1" height="15.0" fill="rgb(224,40,50)" rx="2" ry="2" />
<text  x="1183.84" y="367.5" ></text>
</g>
<g >
<title>console_unlock (77,320,470 samples, 0.13%)</title><rect x="760.7" y="101" width="1.5" height="15.0" fill="rgb(250,201,38)" rx="2" ry="2" />
<text  x="763.69" y="111.5" ></text>
</g>
<g >
<title>irq_work_single (209,405,286 samples, 0.36%)</title><rect x="1183.8" y="309" width="4.2" height="15.0" fill="rgb(232,166,25)" rx="2" ry="2" />
<text  x="1186.80" y="319.5" ></text>
</g>
<g >
<title>main (58,010,171,210 samples, 98.88%)</title><rect x="22.2" y="485" width="1166.7" height="15.0" fill="rgb(242,187,35)" rx="2" ry="2" />
<text  x="25.18" y="495.5" >main</text>
</g>
<g >
<title>do_user_addr_fault (57,683,374,389 samples, 98.32%)</title><rect x="23.0" y="437" width="1160.1" height="15.0" fill="rgb(226,42,36)" rx="2" ry="2" />
<text  x="25.97" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>__next_zones_zonelist (5,070,019 samples, 0.01%)</title><rect x="1182.3" y="325" width="0.1" height="15.0" fill="rgb(238,88,41)" rx="2" ry="2" />
<text  x="1185.27" y="335.5" ></text>
</g>
<g >
<title>[unknown] (30,985,561 samples, 0.05%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(212,83,3)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>console_unlock (201,630,932 samples, 0.34%)</title><rect x="1183.9" y="277" width="4.0" height="15.0" fill="rgb(227,132,20)" rx="2" ry="2" />
<text  x="1186.86" y="287.5" ></text>
</g>
<g >
<title>sync_regs (18,020,434 samples, 0.03%)</title><rect x="1188.6" y="469" width="0.3" height="15.0" fill="rgb(241,208,11)" rx="2" ry="2" />
<text  x="1191.55" y="479.5" ></text>
</g>
<g >
<title>[unknown] (5,175,890 samples, 0.01%)</title><rect x="10.1" y="469" width="0.1" height="15.0" fill="rgb(229,176,1)" rx="2" ry="2" />
<text  x="13.05" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (58,641,874 samples, 0.10%)</title><rect x="1169.2" y="341" width="1.2" height="15.0" fill="rgb(211,120,25)" rx="2" ry="2" />
<text  x="1172.18" y="351.5" ></text>
</g>
<g >
<title>irq_work_tick (48,125,019 samples, 0.08%)</title><rect x="1169.3" y="213" width="1.0" height="15.0" fill="rgb(245,148,17)" rx="2" ry="2" />
<text  x="1172.29" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (6,527,506 samples, 0.01%)</title><rect x="12.6" y="261" width="0.1" height="15.0" fill="rgb(228,104,7)" rx="2" ry="2" />
<text  x="15.59" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (90,223,569 samples, 0.15%)</title><rect x="760.6" y="197" width="1.8" height="15.0" fill="rgb(249,89,27)" rx="2" ry="2" />
<text  x="763.63" y="207.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (13,021,364 samples, 0.02%)</title><rect x="27.7" y="357" width="0.2" height="15.0" fill="rgb(226,188,39)" rx="2" ry="2" />
<text  x="30.65" y="367.5" ></text>
</g>
<g >
<title>page_counter_try_charge (27,777,980 samples, 0.05%)</title><rect x="1181.3" y="293" width="0.6" height="15.0" fill="rgb(251,48,31)" rx="2" ry="2" />
<text  x="1184.30" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (558,316,751 samples, 0.95%)</title><rect x="10.9" y="453" width="11.2" height="15.0" fill="rgb(230,132,42)" rx="2" ry="2" />
<text  x="13.92" y="463.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (6,079,992 samples, 0.01%)</title><rect x="12.6" y="245" width="0.1" height="15.0" fill="rgb(209,3,52)" rx="2" ry="2" />
<text  x="15.60" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,579,026,483 samples, 98.14%)</title><rect x="24.8" y="389" width="1158.1" height="15.0" fill="rgb(254,208,11)" rx="2" ry="2" />
<text  x="27.83" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>free_unref_page (393,620,106 samples, 0.67%)</title><rect x="14.2" y="213" width="7.9" height="15.0" fill="rgb(221,2,33)" rx="2" ry="2" />
<text  x="17.19" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (52,506,351 samples, 0.09%)</title><rect x="1169.3" y="245" width="1.0" height="15.0" fill="rgb(227,91,46)" rx="2" ry="2" />
<text  x="1172.27" y="255.5" ></text>
</g>
<g >
<title>__count_memcg_events (6,539,359 samples, 0.01%)</title><rect x="23.4" y="405" width="0.1" height="15.0" fill="rgb(229,213,8)" rx="2" ry="2" />
<text  x="26.37" y="415.5" ></text>
</g>
<g >
<title>release_pages (439,497,256 samples, 0.75%)</title><rect x="13.3" y="277" width="8.8" height="15.0" fill="rgb(210,73,35)" rx="2" ry="2" />
<text  x="16.28" y="287.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (47,686,819 samples, 0.08%)</title><rect x="1169.3" y="165" width="1.0" height="15.0" fill="rgb(226,106,51)" rx="2" ry="2" />
<text  x="1172.29" y="175.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (48,211,138 samples, 0.08%)</title><rect x="1181.3" y="309" width="0.9" height="15.0" fill="rgb(211,227,13)" rx="2" ry="2" />
<text  x="1184.25" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18,865,353 samples, 0.03%)</title><rect x="1182.4" y="325" width="0.4" height="15.0" fill="rgb(245,59,11)" rx="2" ry="2" />
<text  x="1185.37" y="335.5" ></text>
</g>
<g >
<title>all (58,669,668,980 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(231,225,45)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__do_munmap (558,316,751 samples, 0.95%)</title><rect x="10.9" y="405" width="11.2" height="15.0" fill="rgb(239,44,5)" rx="2" ry="2" />
<text  x="13.92" y="415.5" ></text>
</g>
<g >
<title>page_remove_rmap (18,844,711 samples, 0.03%)</title><rect x="12.9" y="309" width="0.4" height="15.0" fill="rgb(215,224,53)" rx="2" ry="2" />
<text  x="15.89" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (19,220,732,220 samples, 32.76%)</title><rect x="783.8" y="357" width="386.6" height="15.0" fill="rgb(225,141,37)" rx="2" ry="2" />
<text  x="786.80" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>memcpy_erms (12,800,880 samples, 0.02%)</title><rect x="1170.0" y="117" width="0.2" height="15.0" fill="rgb(245,106,6)" rx="2" ry="2" />
<text  x="1172.96" y="127.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (39,508,251 samples, 0.07%)</title><rect x="27.1" y="373" width="0.8" height="15.0" fill="rgb(249,3,13)" rx="2" ry="2" />
<text  x="30.13" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages (37,450,002,646 samples, 63.83%)</title><rect x="28.1" y="357" width="753.2" height="15.0" fill="rgb(254,110,6)" rx="2" ry="2" />
<text  x="31.05" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>free_pages_and_swap_cache (439,675,419 samples, 0.75%)</title><rect x="13.3" y="293" width="8.8" height="15.0" fill="rgb(216,14,11)" rx="2" ry="2" />
<text  x="16.28" y="303.5" ></text>
</g>
<g >
<title>desc_read (32,653,629 samples, 0.06%)</title><rect x="1185.8" y="213" width="0.7" height="15.0" fill="rgb(250,153,4)" rx="2" ry="2" />
<text  x="1188.85" y="223.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (8,207,188 samples, 0.01%)</title><rect x="1181.1" y="309" width="0.2" height="15.0" fill="rgb(237,55,24)" rx="2" ry="2" />
<text  x="1184.09" y="319.5" ></text>
</g>
<g >
<title>__munmap (558,316,751 samples, 0.95%)</title><rect x="10.9" y="485" width="11.2" height="15.0" fill="rgb(225,203,47)" rx="2" ry="2" />
<text  x="13.92" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (58,641,874 samples, 0.10%)</title><rect x="1169.2" y="325" width="1.2" height="15.0" fill="rgb(229,131,26)" rx="2" ry="2" />
<text  x="1172.18" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,834,745 samples, 0.01%)</title><rect x="1180.7" y="341" width="0.1" height="15.0" fill="rgb(230,157,15)" rx="2" ry="2" />
<text  x="1183.72" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (7,110,280 samples, 0.01%)</title><rect x="762.3" y="165" width="0.1" height="15.0" fill="rgb(235,98,45)" rx="2" ry="2" />
<text  x="765.30" y="175.5" ></text>
</g>
</g>
</svg>
