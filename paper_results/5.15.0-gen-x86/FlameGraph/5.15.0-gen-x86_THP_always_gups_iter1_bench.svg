<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>__do_munmap (558,232,600 samples, 0.44%)</title><rect x="10.5" y="405" width="5.2" height="15.0" fill="rgb(209,189,13)" rx="2" ry="2" />
<text  x="13.50" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,194,419 samples, 0.01%)</title><rect x="10.1" y="421" width="0.2" height="15.0" fill="rgb(240,169,26)" rx="2" ry="2" />
<text  x="13.13" y="431.5" ></text>
</g>
<g >
<title>irq_work_run_list (49,877,940 samples, 0.04%)</title><rect x="1180.5" y="197" width="0.5" height="15.0" fill="rgb(253,177,33)" rx="2" ry="2" />
<text  x="1183.51" y="207.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (18,074,005 samples, 0.01%)</title><rect x="11.8" y="213" width="0.2" height="15.0" fill="rgb(205,0,20)" rx="2" ry="2" />
<text  x="14.80" y="223.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (213,311,882 samples, 0.17%)</title><rect x="1187.1" y="293" width="2.0" height="15.0" fill="rgb(248,59,39)" rx="2" ry="2" />
<text  x="1190.06" y="303.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,959,924 samples, 0.04%)</title><rect x="1189.5" y="373" width="0.5" height="15.0" fill="rgb(212,102,5)" rx="2" ry="2" />
<text  x="1192.49" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,634,144 samples, 0.01%)</title><rect x="10.1" y="453" width="0.2" height="15.0" fill="rgb(236,111,52)" rx="2" ry="2" />
<text  x="13.13" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (95,930,771 samples, 0.08%)</title><rect x="989.8" y="197" width="0.9" height="15.0" fill="rgb(215,134,15)" rx="2" ry="2" />
<text  x="992.83" y="207.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,621,238,449 samples, 45.64%)</title><rect x="648.1" y="389" width="538.5" height="15.0" fill="rgb(214,67,2)" rx="2" ry="2" />
<text  x="651.09" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>hrtimer_interrupt (244,572,970 samples, 0.19%)</title><rect x="1186.9" y="421" width="2.3" height="15.0" fill="rgb(233,15,47)" rx="2" ry="2" />
<text  x="1189.91" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (57,705,615,944 samples, 45.70%)</title><rect x="647.4" y="421" width="539.3" height="15.0" fill="rgb(246,167,48)" rx="2" ry="2" />
<text  x="650.36" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>pci_user_read_config_dword (50,505,533 samples, 0.04%)</title><rect x="1189.5" y="325" width="0.5" height="15.0" fill="rgb(236,109,37)" rx="2" ry="2" />
<text  x="1192.52" y="335.5" ></text>
</g>
<g >
<title>memcpy_erms (25,280,027 samples, 0.02%)</title><rect x="990.4" y="69" width="0.2" height="15.0" fill="rgb(232,65,50)" rx="2" ry="2" />
<text  x="993.40" y="79.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (18,187,395 samples, 0.01%)</title><rect x="1185.3" y="341" width="0.1" height="15.0" fill="rgb(245,29,45)" rx="2" ry="2" />
<text  x="1188.26" y="351.5" ></text>
</g>
<g >
<title>irq_work_single (214,028,528 samples, 0.17%)</title><rect x="1187.1" y="309" width="2.0" height="15.0" fill="rgb(222,204,8)" rx="2" ry="2" />
<text  x="1190.05" y="319.5" ></text>
</g>
<g >
<title>free_transhuge_page (57,718,490 samples, 0.05%)</title><rect x="10.5" y="293" width="0.6" height="15.0" fill="rgb(221,229,31)" rx="2" ry="2" />
<text  x="13.53" y="303.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,450,898 samples, 0.02%)</title><rect x="1180.5" y="117" width="0.3" height="15.0" fill="rgb(254,108,44)" rx="2" ry="2" />
<text  x="1183.53" y="127.5" ></text>
</g>
<g >
<title>_prb_read_valid (53,537,188 samples, 0.04%)</title><rect x="989.9" y="69" width="0.5" height="15.0" fill="rgb(242,83,22)" rx="2" ry="2" />
<text  x="992.89" y="79.5" ></text>
</g>
<g >
<title>__vm_munmap (558,232,600 samples, 0.44%)</title><rect x="10.5" y="421" width="5.2" height="15.0" fill="rgb(251,135,51)" rx="2" ry="2" />
<text  x="13.50" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (60,482,106 samples, 0.05%)</title><rect x="1180.5" y="309" width="0.5" height="15.0" fill="rgb(250,220,47)" rx="2" ry="2" />
<text  x="1183.46" y="319.5" ></text>
</g>
<g >
<title>page_counter_try_charge (28,559,810 samples, 0.02%)</title><rect x="1185.9" y="293" width="0.2" height="15.0" fill="rgb(253,74,9)" rx="2" ry="2" />
<text  x="1188.86" y="303.5" ></text>
</g>
<g >
<title>irq_work_tick (49,877,940 samples, 0.04%)</title><rect x="1180.5" y="213" width="0.5" height="15.0" fill="rgb(209,7,7)" rx="2" ry="2" />
<text  x="1183.51" y="223.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (12,489,615 samples, 0.01%)</title><rect x="1185.6" y="357" width="0.1" height="15.0" fill="rgb(225,14,16)" rx="2" ry="2" />
<text  x="1188.56" y="367.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,194,419 samples, 0.01%)</title><rect x="10.1" y="389" width="0.2" height="15.0" fill="rgb(213,159,33)" rx="2" ry="2" />
<text  x="13.13" y="399.5" ></text>
</g>
<g >
<title>free_unref_page (54,781,213 samples, 0.04%)</title><rect x="10.6" y="261" width="0.5" height="15.0" fill="rgb(249,176,2)" rx="2" ry="2" />
<text  x="13.56" y="271.5" ></text>
</g>
<g >
<title>alloc_pages (100,818,119 samples, 0.08%)</title><rect x="1185.7" y="357" width="0.9" height="15.0" fill="rgb(244,220,42)" rx="2" ry="2" />
<text  x="1188.67" y="367.5" ></text>
</g>
<g >
<title>page_counter_try_charge (11,963,338 samples, 0.01%)</title><rect x="649.2" y="325" width="0.1" height="15.0" fill="rgb(208,151,2)" rx="2" ry="2" />
<text  x="652.18" y="335.5" ></text>
</g>
<g >
<title>desc_read (12,553,126 samples, 0.01%)</title><rect x="990.2" y="37" width="0.1" height="15.0" fill="rgb(215,50,18)" rx="2" ry="2" />
<text  x="993.21" y="47.5" ></text>
</g>
<g >
<title>rcu_all_qs (84,207,720 samples, 0.07%)</title><rect x="1184.3" y="357" width="0.8" height="15.0" fill="rgb(224,147,16)" rx="2" ry="2" />
<text  x="1187.28" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (240,824,398 samples, 0.19%)</title><rect x="1186.9" y="405" width="2.3" height="15.0" fill="rgb(249,220,45)" rx="2" ry="2" />
<text  x="1189.91" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (19,668,008 samples, 0.02%)</title><rect x="1186.4" y="325" width="0.2" height="15.0" fill="rgb(224,57,1)" rx="2" ry="2" />
<text  x="1189.38" y="335.5" ></text>
</g>
<g >
<title>__put_compound_page (443,184,487 samples, 0.35%)</title><rect x="11.6" y="261" width="4.1" height="15.0" fill="rgb(227,16,9)" rx="2" ry="2" />
<text  x="14.56" y="271.5" ></text>
</g>
<g >
<title>unmap_region (558,232,600 samples, 0.44%)</title><rect x="10.5" y="389" width="5.2" height="15.0" fill="rgb(221,5,26)" rx="2" ry="2" />
<text  x="13.50" y="399.5" ></text>
</g>
<g >
<title>update_process_times (95,930,771 samples, 0.08%)</title><rect x="989.8" y="181" width="0.9" height="15.0" fill="rgb(244,96,21)" rx="2" ry="2" />
<text  x="992.83" y="191.5" ></text>
</g>
<g >
<title>unmap_page_range (497,210,281 samples, 0.39%)</title><rect x="11.1" y="341" width="4.6" height="15.0" fill="rgb(218,207,52)" rx="2" ry="2" />
<text  x="14.07" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (58,466,381 samples, 0.05%)</title><rect x="1180.5" y="261" width="0.5" height="15.0" fill="rgb(238,109,25)" rx="2" ry="2" />
<text  x="1183.46" y="271.5" ></text>
</g>
<g >
<title>console_unlock (47,948,681 samples, 0.04%)</title><rect x="1180.5" y="149" width="0.5" height="15.0" fill="rgb(227,194,40)" rx="2" ry="2" />
<text  x="1183.51" y="159.5" ></text>
</g>
<g >
<title>charge_memcg (21,143,931 samples, 0.02%)</title><rect x="649.1" y="357" width="0.2" height="15.0" fill="rgb(211,1,46)" rx="2" ry="2" />
<text  x="652.10" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (444,701,300 samples, 0.35%)</title><rect x="11.5" y="293" width="4.2" height="15.0" fill="rgb(236,106,25)" rx="2" ry="2" />
<text  x="14.55" y="303.5" ></text>
</g>
<g >
<title>__free_pages (23,399,687 samples, 0.02%)</title><rect x="11.1" y="309" width="0.2" height="15.0" fill="rgb(233,141,24)" rx="2" ry="2" />
<text  x="14.13" y="319.5" ></text>
</g>
<g >
<title>release_pages (444,611,998 samples, 0.35%)</title><rect x="11.5" y="277" width="4.2" height="15.0" fill="rgb(247,10,25)" rx="2" ry="2" />
<text  x="14.55" y="287.5" ></text>
</g>
<g >
<title>uncharge_batch (16,206,043 samples, 0.01%)</title><rect x="11.8" y="197" width="0.2" height="15.0" fill="rgb(248,94,36)" rx="2" ry="2" />
<text  x="14.81" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (16,131,547 samples, 0.01%)</title><rect x="1180.8" y="117" width="0.2" height="15.0" fill="rgb(232,150,24)" rx="2" ry="2" />
<text  x="1183.81" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (107,257,690 samples, 0.08%)</title><rect x="989.8" y="245" width="1.0" height="15.0" fill="rgb(230,95,36)" rx="2" ry="2" />
<text  x="992.76" y="255.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (49,703,153 samples, 0.04%)</title><rect x="1180.5" y="165" width="0.5" height="15.0" fill="rgb(244,100,42)" rx="2" ry="2" />
<text  x="1183.51" y="175.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (32,933,054 samples, 0.03%)</title><rect x="649.1" y="373" width="0.3" height="15.0" fill="rgb(209,106,34)" rx="2" ry="2" />
<text  x="652.10" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (245,465,430 samples, 0.19%)</title><rect x="1186.9" y="437" width="2.3" height="15.0" fill="rgb(234,58,24)" rx="2" ry="2" />
<text  x="1189.90" y="447.5" ></text>
</g>
<g >
<title>unmap_single_vma (497,389,206 samples, 0.39%)</title><rect x="11.1" y="357" width="4.6" height="15.0" fill="rgb(226,134,6)" rx="2" ry="2" />
<text  x="14.07" y="367.5" ></text>
</g>
<g >
<title>__munmap (558,321,877 samples, 0.44%)</title><rect x="10.5" y="485" width="5.2" height="15.0" fill="rgb(217,137,34)" rx="2" ry="2" />
<text  x="13.50" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages (37,457,307,175 samples, 29.67%)</title><rect x="649.5" y="357" width="350.0" height="15.0" fill="rgb(219,187,54)" rx="2" ry="2" />
<text  x="652.46" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>irq_work_single (49,703,153 samples, 0.04%)</title><rect x="1180.5" y="181" width="0.5" height="15.0" fill="rgb(248,207,2)" rx="2" ry="2" />
<text  x="1183.51" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (97,410,955 samples, 0.08%)</title><rect x="1185.7" y="341" width="0.9" height="15.0" fill="rgb(235,229,20)" rx="2" ry="2" />
<text  x="1188.68" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,223,291 samples, 0.04%)</title><rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(207,77,10)" rx="2" ry="2" />
<text  x="1192.49" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (247,784,180 samples, 0.20%)</title><rect x="1186.9" y="453" width="2.3" height="15.0" fill="rgb(219,229,24)" rx="2" ry="2" />
<text  x="1189.90" y="463.5" ></text>
</g>
<g >
<title>prb_read_valid (81,451,248 samples, 0.06%)</title><rect x="989.9" y="85" width="0.7" height="15.0" fill="rgb(227,196,50)" rx="2" ry="2" />
<text  x="992.88" y="95.5" ></text>
</g>
<g >
<title>console_unlock (83,822,206 samples, 0.07%)</title><rect x="989.9" y="101" width="0.7" height="15.0" fill="rgb(209,72,39)" rx="2" ry="2" />
<text  x="992.86" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (61,008,109 samples, 0.05%)</title><rect x="1180.5" y="341" width="0.5" height="15.0" fill="rgb(243,99,13)" rx="2" ry="2" />
<text  x="1183.46" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (10,921,648 samples, 0.01%)</title><rect x="1189.1" y="341" width="0.1" height="15.0" fill="rgb(206,200,28)" rx="2" ry="2" />
<text  x="1192.06" y="351.5" ></text>
</g>
<g >
<title>irq_work_tick (86,454,301 samples, 0.07%)</title><rect x="989.8" y="165" width="0.9" height="15.0" fill="rgb(221,56,44)" rx="2" ry="2" />
<text  x="992.84" y="175.5" ></text>
</g>
<g >
<title>pci_read (49,292,036 samples, 0.04%)</title><rect x="1189.5" y="309" width="0.5" height="15.0" fill="rgb(216,131,7)" rx="2" ry="2" />
<text  x="1192.53" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (36,465,495,027 samples, 28.88%)</title><rect x="650.0" y="309" width="340.8" height="15.0" fill="rgb(239,7,15)" rx="2" ry="2" />
<text  x="652.98" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>tlb_finish_mmu (60,215,784 samples, 0.05%)</title><rect x="10.5" y="373" width="0.6" height="15.0" fill="rgb(236,190,32)" rx="2" ry="2" />
<text  x="13.51" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,704,156 samples, 0.01%)</title><rect x="10.4" y="469" width="0.1" height="15.0" fill="rgb(251,91,46)" rx="2" ry="2" />
<text  x="13.39" y="479.5" ></text>
</g>
<g >
<title>free_pcp_prepare (388,797,763 samples, 0.31%)</title><rect x="12.0" y="197" width="3.6" height="15.0" fill="rgb(238,28,12)" rx="2" ry="2" />
<text  x="14.98" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (54,436,017 samples, 0.04%)</title><rect x="1180.5" y="245" width="0.5" height="15.0" fill="rgb(243,191,6)" rx="2" ry="2" />
<text  x="1183.50" y="255.5" ></text>
</g>
<g >
<title>__cond_resched (81,054,884 samples, 0.06%)</title><rect x="648.3" y="373" width="0.8" height="15.0" fill="rgb(232,36,17)" rx="2" ry="2" />
<text  x="651.32" y="383.5" ></text>
</g>
<g >
<title>free_unref_page (398,153,879 samples, 0.32%)</title><rect x="12.0" y="213" width="3.7" height="15.0" fill="rgb(230,47,18)" rx="2" ry="2" />
<text  x="14.97" y="223.5" ></text>
</g>
<g >
<title>[unknown] (38,025,791 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(249,210,6)" rx="2" ry="2" />
<text  x="13.02" y="495.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (86,191,217 samples, 0.07%)</title><rect x="989.8" y="117" width="0.9" height="15.0" fill="rgb(226,44,38)" rx="2" ry="2" />
<text  x="992.85" y="127.5" ></text>
</g>
<g >
<title>get_data.isra.0 (16,372,131 samples, 0.01%)</title><rect x="1188.3" y="229" width="0.2" height="15.0" fill="rgb(222,54,49)" rx="2" ry="2" />
<text  x="1191.32" y="239.5" ></text>
</g>
<g >
<title>update_process_times (54,436,017 samples, 0.04%)</title><rect x="1180.5" y="229" width="0.5" height="15.0" fill="rgb(225,206,6)" rx="2" ry="2" />
<text  x="1183.50" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (60,215,784 samples, 0.05%)</title><rect x="10.5" y="341" width="0.6" height="15.0" fill="rgb(241,77,0)" rx="2" ry="2" />
<text  x="13.51" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (108,045,475 samples, 0.09%)</title><rect x="989.8" y="261" width="1.0" height="15.0" fill="rgb(243,35,41)" rx="2" ry="2" />
<text  x="992.75" y="271.5" ></text>
</g>
<g >
<title>irq_work_tick (214,385,352 samples, 0.17%)</title><rect x="1187.1" y="341" width="2.0" height="15.0" fill="rgb(245,205,6)" rx="2" ry="2" />
<text  x="1190.05" y="351.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (449,059,877 samples, 0.36%)</title><rect x="990.8" y="309" width="4.2" height="15.0" fill="rgb(213,82,33)" rx="2" ry="2" />
<text  x="993.78" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,684,222,668 samples, 45.69%)</title><rect x="647.5" y="405" width="539.1" height="15.0" fill="rgb(252,199,54)" rx="2" ry="2" />
<text  x="650.52" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>vfs_read (53,047,462 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(219,137,38)" rx="2" ry="2" />
<text  x="1192.49" y="415.5" ></text>
</g>
<g >
<title>pci_read_config (51,029,330 samples, 0.04%)</title><rect x="1189.5" y="341" width="0.5" height="15.0" fill="rgb(221,178,37)" rx="2" ry="2" />
<text  x="1192.51" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (61,008,109 samples, 0.05%)</title><rect x="1180.5" y="325" width="0.5" height="15.0" fill="rgb(243,136,40)" rx="2" ry="2" />
<text  x="1183.46" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (109,099,342 samples, 0.09%)</title><rect x="989.8" y="293" width="1.0" height="15.0" fill="rgb(224,166,42)" rx="2" ry="2" />
<text  x="992.75" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (57,724,943,348 samples, 45.72%)</title><rect x="647.2" y="437" width="539.5" height="15.0" fill="rgb(248,220,5)" rx="2" ry="2" />
<text  x="650.25" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>hrtimer_interrupt (60,044,156 samples, 0.05%)</title><rect x="1180.5" y="293" width="0.5" height="15.0" fill="rgb(211,116,33)" rx="2" ry="2" />
<text  x="1183.46" y="303.5" ></text>
</g>
<g >
<title>do_sys_open (16,194,419 samples, 0.01%)</title><rect x="10.1" y="405" width="0.2" height="15.0" fill="rgb(242,21,42)" rx="2" ry="2" />
<text  x="13.13" y="415.5" ></text>
</g>
<g >
<title>pci_conf1_read (49,117,436 samples, 0.04%)</title><rect x="1189.5" y="277" width="0.5" height="15.0" fill="rgb(209,19,6)" rx="2" ry="2" />
<text  x="1192.53" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (558,321,877 samples, 0.44%)</title><rect x="10.5" y="469" width="5.2" height="15.0" fill="rgb(222,226,54)" rx="2" ry="2" />
<text  x="13.50" y="479.5" ></text>
</g>
<g >
<title>__GI___openat64 (16,634,144 samples, 0.01%)</title><rect x="10.1" y="469" width="0.2" height="15.0" fill="rgb(247,101,1)" rx="2" ry="2" />
<text  x="13.13" y="479.5" ></text>
</g>
<g >
<title>path_openat (15,493,612 samples, 0.01%)</title><rect x="10.1" y="357" width="0.2" height="15.0" fill="rgb(228,68,34)" rx="2" ry="2" />
<text  x="13.13" y="367.5" ></text>
</g>
<g >
<title>raw_pci_read (49,203,828 samples, 0.04%)</title><rect x="1189.5" y="293" width="0.5" height="15.0" fill="rgb(248,177,13)" rx="2" ry="2" />
<text  x="1192.53" y="303.5" ></text>
</g>
<g >
<title>all (126,256,935,390 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(246,8,43)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>unmap_vmas (497,389,206 samples, 0.39%)</title><rect x="11.1" y="373" width="4.6" height="15.0" fill="rgb(215,31,25)" rx="2" ry="2" />
<text  x="14.07" y="383.5" ></text>
</g>
<g >
<title>read (53,916,296 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(210,128,18)" rx="2" ry="2" />
<text  x="1192.49" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (57,736,169,963 samples, 45.73%)</title><rect x="647.2" y="453" width="539.6" height="15.0" fill="rgb(239,32,16)" rx="2" ry="2" />
<text  x="650.24" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>alloc_pages_vma (37,466,257,013 samples, 29.67%)</title><rect x="649.4" y="373" width="350.2" height="15.0" fill="rgb(244,188,30)" rx="2" ry="2" />
<text  x="652.41" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>ksys_read (53,047,462 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(212,26,12)" rx="2" ry="2" />
<text  x="1192.49" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37,444,293,851 samples, 29.66%)</title><rect x="649.6" y="341" width="349.9" height="15.0" fill="rgb(210,33,54)" rx="2" ry="2" />
<text  x="652.58" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>clear_subpage (346,519,664 samples, 0.27%)</title><rect x="1181.0" y="357" width="3.3" height="15.0" fill="rgb(218,186,24)" rx="2" ry="2" />
<text  x="1184.04" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (19,585,877 samples, 0.02%)</title><rect x="1185.3" y="373" width="0.1" height="15.0" fill="rgb(226,11,19)" rx="2" ry="2" />
<text  x="1188.25" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (103,921,805 samples, 0.08%)</title><rect x="989.8" y="229" width="0.9" height="15.0" fill="rgb(235,70,3)" rx="2" ry="2" />
<text  x="992.76" y="239.5" ></text>
</g>
<g >
<title>free_pcp_prepare (53,887,786 samples, 0.04%)</title><rect x="10.6" y="245" width="0.5" height="15.0" fill="rgb(252,164,4)" rx="2" ry="2" />
<text  x="13.56" y="255.5" ></text>
</g>
<g >
<title>irq_work_run_list (214,206,821 samples, 0.17%)</title><rect x="1187.1" y="325" width="2.0" height="15.0" fill="rgb(230,165,39)" rx="2" ry="2" />
<text  x="1190.05" y="335.5" ></text>
</g>
<g >
<title>do_filp_open (15,493,612 samples, 0.01%)</title><rect x="10.1" y="373" width="0.2" height="15.0" fill="rgb(237,51,28)" rx="2" ry="2" />
<text  x="13.13" y="383.5" ></text>
</g>
<g >
<title>irq_work_run_list (86,366,633 samples, 0.07%)</title><rect x="989.8" y="149" width="0.9" height="15.0" fill="rgb(254,205,25)" rx="2" ry="2" />
<text  x="992.84" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,249,741 samples, 0.01%)</title><rect x="649.8" y="309" width="0.2" height="15.0" fill="rgb(234,43,2)" rx="2" ry="2" />
<text  x="652.82" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,370,186 samples, 0.01%)</title><rect x="10.1" y="437" width="0.2" height="15.0" fill="rgb(234,170,32)" rx="2" ry="2" />
<text  x="13.13" y="447.5" ></text>
</g>
<g >
<title>clear_huge_page (19,847,070,856 samples, 15.72%)</title><rect x="999.6" y="373" width="185.5" height="15.0" fill="rgb(251,121,20)" rx="2" ry="2" />
<text  x="1002.57" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>_prb_read_valid (141,062,091 samples, 0.11%)</title><rect x="1187.2" y="245" width="1.3" height="15.0" fill="rgb(224,38,15)" rx="2" ry="2" />
<text  x="1190.16" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (86,279,203 samples, 0.07%)</title><rect x="989.8" y="133" width="0.9" height="15.0" fill="rgb(244,229,22)" rx="2" ry="2" />
<text  x="992.84" y="143.5" ></text>
</g>
<g >
<title>free_compound_page (56,740,184 samples, 0.04%)</title><rect x="10.5" y="277" width="0.6" height="15.0" fill="rgb(217,30,38)" rx="2" ry="2" />
<text  x="13.54" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (102,692,008 samples, 0.08%)</title><rect x="989.8" y="213" width="0.9" height="15.0" fill="rgb(215,22,52)" rx="2" ry="2" />
<text  x="992.77" y="223.5" ></text>
</g>
<g >
<title>prb_read_valid (200,090,843 samples, 0.16%)</title><rect x="1187.1" y="261" width="1.9" height="15.0" fill="rgb(207,227,32)" rx="2" ry="2" />
<text  x="1190.13" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (53,135,511 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(248,213,31)" rx="2" ry="2" />
<text  x="1192.49" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,774,556,140 samples, 45.76%)</title><rect x="646.9" y="469" width="539.9" height="15.0" fill="rgb(248,86,9)" rx="2" ry="2" />
<text  x="649.89" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__hrtimer_run_queues (58,641,767 samples, 0.05%)</title><rect x="1180.5" y="277" width="0.5" height="15.0" fill="rgb(215,33,31)" rx="2" ry="2" />
<text  x="1183.46" y="287.5" ></text>
</g>
<g >
<title>clear_subpage (19,332,904 samples, 0.02%)</title><rect x="1185.1" y="373" width="0.1" height="15.0" fill="rgb(216,49,43)" rx="2" ry="2" />
<text  x="1188.06" y="383.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (17,994,321 samples, 0.01%)</title><rect x="990.2" y="53" width="0.1" height="15.0" fill="rgb(245,106,15)" rx="2" ry="2" />
<text  x="993.16" y="63.5" ></text>
</g>
<g >
<title>new_sync_read (53,047,462 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(240,111,3)" rx="2" ry="2" />
<text  x="1192.49" y="399.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (66,635,655 samples, 0.05%)</title><rect x="1185.7" y="325" width="0.6" height="15.0" fill="rgb(238,23,46)" rx="2" ry="2" />
<text  x="1188.70" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (109,011,476 samples, 0.09%)</title><rect x="989.8" y="277" width="1.0" height="15.0" fill="rgb(224,89,41)" rx="2" ry="2" />
<text  x="992.75" y="287.5" ></text>
</g>
<g >
<title>__put_compound_page (59,768,933 samples, 0.05%)</title><rect x="10.5" y="309" width="0.6" height="15.0" fill="rgb(248,201,12)" rx="2" ry="2" />
<text  x="13.51" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,013,147 samples, 0.04%)</title><rect x="647.6" y="389" width="0.5" height="15.0" fill="rgb(232,212,50)" rx="2" ry="2" />
<text  x="650.58" y="399.5" ></text>
</g>
<g >
<title>free_compound_page (417,117,545 samples, 0.33%)</title><rect x="11.8" y="229" width="3.9" height="15.0" fill="rgb(211,79,46)" rx="2" ry="2" />
<text  x="14.80" y="239.5" ></text>
</g>
<g >
<title>try_charge_memcg (17,206,501 samples, 0.01%)</title><rect x="1186.1" y="293" width="0.2" height="15.0" fill="rgb(241,196,42)" rx="2" ry="2" />
<text  x="1189.14" y="303.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (47,098,719 samples, 0.04%)</title><rect x="1187.9" y="229" width="0.4" height="15.0" fill="rgb(233,188,50)" rx="2" ry="2" />
<text  x="1190.88" y="239.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (60,215,784 samples, 0.05%)</title><rect x="10.5" y="357" width="0.6" height="15.0" fill="rgb(229,2,11)" rx="2" ry="2" />
<text  x="13.51" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (34,966,702 samples, 0.03%)</title><rect x="1000.3" y="357" width="0.4" height="15.0" fill="rgb(208,115,45)" rx="2" ry="2" />
<text  x="1003.34" y="367.5" ></text>
</g>
<g >
<title>console_unlock (207,149,877 samples, 0.16%)</title><rect x="1187.1" y="277" width="1.9" height="15.0" fill="rgb(241,194,41)" rx="2" ry="2" />
<text  x="1190.07" y="287.5" ></text>
</g>
<g >
<title>free_transhuge_page (426,198,621 samples, 0.34%)</title><rect x="11.7" y="245" width="4.0" height="15.0" fill="rgb(253,201,50)" rx="2" ry="2" />
<text  x="14.72" y="255.5" ></text>
</g>
<g >
<title>gups_vanilla (126,256,935,390 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(237,226,33)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (253,758,209 samples, 0.20%)</title><rect x="1186.8" y="469" width="2.4" height="15.0" fill="rgb(247,29,29)" rx="2" ry="2" />
<text  x="1189.85" y="479.5" ></text>
</g>
<g >
<title>pte_alloc_one (114,182,065 samples, 0.09%)</title><rect x="1185.6" y="373" width="1.0" height="15.0" fill="rgb(223,199,27)" rx="2" ry="2" />
<text  x="1188.55" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (240,023,979 samples, 0.19%)</title><rect x="1186.9" y="389" width="2.3" height="15.0" fill="rgb(231,221,21)" rx="2" ry="2" />
<text  x="1189.92" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (53,740,304 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(233,0,47)" rx="2" ry="2" />
<text  x="1192.49" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (558,321,877 samples, 0.44%)</title><rect x="10.5" y="453" width="5.2" height="15.0" fill="rgb(234,213,32)" rx="2" ry="2" />
<text  x="13.50" y="463.5" ></text>
</g>
<g >
<title>sync_regs (18,733,583 samples, 0.01%)</title><rect x="1189.3" y="469" width="0.2" height="15.0" fill="rgb(230,57,25)" rx="2" ry="2" />
<text  x="1192.31" y="479.5" ></text>
</g>
<g >
<title>__GI___openat64 (10,790,841 samples, 0.01%)</title><rect x="10.4" y="485" width="0.1" height="15.0" fill="rgb(211,161,34)" rx="2" ry="2" />
<text  x="13.39" y="495.5" ></text>
</g>
<g >
<title>prb_read_valid (46,282,081 samples, 0.04%)</title><rect x="1180.5" y="133" width="0.5" height="15.0" fill="rgb(241,170,45)" rx="2" ry="2" />
<text  x="1183.53" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (19,293,844,189 samples, 15.28%)</title><rect x="1000.7" y="357" width="180.3" height="15.0" fill="rgb(224,94,10)" rx="2" ry="2" />
<text  x="1003.72" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>desc_read_finalized_seq (11,046,400 samples, 0.01%)</title><rect x="1180.7" y="101" width="0.1" height="15.0" fill="rgb(225,114,9)" rx="2" ry="2" />
<text  x="1183.67" y="111.5" ></text>
</g>
<g >
<title>rmqueue_bulk (21,204,793 samples, 0.02%)</title><rect x="999.3" y="325" width="0.2" height="15.0" fill="rgb(254,44,25)" rx="2" ry="2" />
<text  x="1002.34" y="335.5" ></text>
</g>
<g >
<title>prep_new_page (37,400,397,234 samples, 29.62%)</title><rect x="649.8" y="325" width="349.5" height="15.0" fill="rgb(210,96,33)" rx="2" ry="2" />
<text  x="652.79" y="335.5" >prep_new_page</text>
</g>
<g >
<title>memcpy_erms (52,152,683 samples, 0.04%)</title><rect x="1188.5" y="245" width="0.5" height="15.0" fill="rgb(250,167,46)" rx="2" ry="2" />
<text  x="1191.51" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (228,612,586 samples, 0.18%)</title><rect x="1187.0" y="373" width="2.2" height="15.0" fill="rgb(233,60,6)" rx="2" ry="2" />
<text  x="1190.03" y="383.5" ></text>
</g>
<g >
<title>prep_compound_page (465,831,156 samples, 0.37%)</title><rect x="995.0" y="309" width="4.3" height="15.0" fill="rgb(230,54,25)" rx="2" ry="2" />
<text  x="997.98" y="319.5" ></text>
</g>
<g >
<title>update_process_times (227,987,816 samples, 0.18%)</title><rect x="1187.0" y="357" width="2.2" height="15.0" fill="rgb(246,97,6)" rx="2" ry="2" />
<text  x="1190.03" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (558,321,877 samples, 0.44%)</title><rect x="10.5" y="437" width="5.2" height="15.0" fill="rgb(253,132,52)" rx="2" ry="2" />
<text  x="13.50" y="447.5" ></text>
</g>
<g >
<title>try_charge_memcg (13,275,019 samples, 0.01%)</title><rect x="649.2" y="341" width="0.1" height="15.0" fill="rgb(220,164,22)" rx="2" ry="2" />
<text  x="652.17" y="351.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (48,900,667 samples, 0.04%)</title><rect x="1185.8" y="309" width="0.5" height="15.0" fill="rgb(219,96,7)" rx="2" ry="2" />
<text  x="1188.85" y="319.5" ></text>
</g>
<g >
<title>lru_cache_add (19,323,185 samples, 0.02%)</title><rect x="1185.3" y="357" width="0.1" height="15.0" fill="rgb(212,21,21)" rx="2" ry="2" />
<text  x="1188.25" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (446,477,859 samples, 0.35%)</title><rect x="11.5" y="309" width="4.2" height="15.0" fill="rgb(236,68,20)" rx="2" ry="2" />
<text  x="14.55" y="319.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,113,416 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(221,127,5)" rx="2" ry="2" />
<text  x="1192.51" y="367.5" ></text>
</g>
<g >
<title>page_remove_rmap (18,672,357 samples, 0.01%)</title><rect x="11.4" y="309" width="0.1" height="15.0" fill="rgb(237,15,37)" rx="2" ry="2" />
<text  x="14.37" y="319.5" ></text>
</g>
<g >
<title>zap_huge_pmd (495,513,659 samples, 0.39%)</title><rect x="11.1" y="325" width="4.6" height="15.0" fill="rgb(232,56,42)" rx="2" ry="2" />
<text  x="14.09" y="335.5" ></text>
</g>
<g >
<title>desc_read (33,860,795 samples, 0.03%)</title><rect x="1188.0" y="213" width="0.3" height="15.0" fill="rgb(254,171,50)" rx="2" ry="2" />
<text  x="1191.01" y="223.5" ></text>
</g>
<g >
<title>main (125,586,676,913 samples, 99.47%)</title><rect x="15.7" y="485" width="1173.8" height="15.0" fill="rgb(238,10,51)" rx="2" ry="2" />
<text  x="18.75" y="495.5" >main</text>
</g>
<g >
<title>release_pages (60,126,445 samples, 0.05%)</title><rect x="10.5" y="325" width="0.6" height="15.0" fill="rgb(222,43,34)" rx="2" ry="2" />
<text  x="13.51" y="335.5" ></text>
</g>
</g>
</svg>
