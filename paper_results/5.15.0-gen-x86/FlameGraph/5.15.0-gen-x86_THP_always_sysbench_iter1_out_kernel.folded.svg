<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>__mod_lruvec_page_state (9,018,535 samples, 0.01%)</title><rect x="1170.2" y="357" width="0.1" height="15.0" fill="rgb(240,193,54)" rx="2" ry="2" />
<text  x="1173.15" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (59,710,218,874 samples, 98.67%)</title><rect x="10.0" y="469" width="1164.3" height="15.0" fill="rgb(216,218,52)" rx="2" ry="2" />
<text  x="13.01" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>console_unlock (11,108,158 samples, 0.02%)</title><rect x="1176.1" y="277" width="0.2" height="15.0" fill="rgb(248,229,20)" rx="2" ry="2" />
<text  x="1179.09" y="287.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5,702,596 samples, 0.01%)</title><rect x="1187.3" y="213" width="0.1" height="15.0" fill="rgb(253,13,42)" rx="2" ry="2" />
<text  x="1190.33" y="223.5" ></text>
</g>
<g >
<title>desc_read (17,433,860 samples, 0.03%)</title><rect x="1188.8" y="229" width="0.3" height="15.0" fill="rgb(229,150,26)" rx="2" ry="2" />
<text  x="1191.80" y="239.5" ></text>
</g>
<g >
<title>unmap_single_vma (496,416,167 samples, 0.82%)</title><rect x="1177.8" y="389" width="9.7" height="15.0" fill="rgb(211,56,0)" rx="2" ry="2" />
<text  x="1180.82" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (78,409,855 samples, 0.13%)</title><rect x="1158.3" y="309" width="1.5" height="15.0" fill="rgb(209,121,30)" rx="2" ry="2" />
<text  x="1161.26" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (62,553,331 samples, 0.10%)</title><rect x="1176.6" y="373" width="1.2" height="15.0" fill="rgb(244,83,1)" rx="2" ry="2" />
<text  x="1179.60" y="383.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (15,057,639 samples, 0.02%)</title><rect x="1179.4" y="245" width="0.3" height="15.0" fill="rgb(215,90,29)" rx="2" ry="2" />
<text  x="1182.38" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (79,431,555 samples, 0.13%)</title><rect x="1158.3" y="325" width="1.5" height="15.0" fill="rgb(220,144,26)" rx="2" ry="2" />
<text  x="1161.26" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (55,150,247 samples, 0.09%)</title><rect x="1176.7" y="293" width="1.1" height="15.0" fill="rgb(210,161,43)" rx="2" ry="2" />
<text  x="1179.74" y="303.5" ></text>
</g>
<g >
<title>irq_work_tick (11,195,272 samples, 0.02%)</title><rect x="1176.1" y="341" width="0.2" height="15.0" fill="rgb(224,198,41)" rx="2" ry="2" />
<text  x="1179.09" y="351.5" ></text>
</g>
<g >
<title>update_process_times (111,803,168 samples, 0.18%)</title><rect x="1187.7" y="373" width="2.2" height="15.0" fill="rgb(250,197,11)" rx="2" ry="2" />
<text  x="1190.73" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (79,431,555 samples, 0.13%)</title><rect x="1158.3" y="341" width="1.5" height="15.0" fill="rgb(206,210,4)" rx="2" ry="2" />
<text  x="1161.26" y="351.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (5,146,048 samples, 0.01%)</title><rect x="754.7" y="197" width="0.1" height="15.0" fill="rgb(245,219,39)" rx="2" ry="2" />
<text  x="757.74" y="207.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (6,582,521 samples, 0.01%)</title><rect x="1187.6" y="389" width="0.1" height="15.0" fill="rgb(206,181,18)" rx="2" ry="2" />
<text  x="1190.59" y="399.5" ></text>
</g>
<g >
<title>page_counter_try_charge (41,855,319 samples, 0.07%)</title><rect x="1171.5" y="293" width="0.9" height="15.0" fill="rgb(227,26,35)" rx="2" ry="2" />
<text  x="1174.55" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (560,311,937 samples, 0.93%)</title><rect x="1176.6" y="421" width="10.9" height="15.0" fill="rgb(243,217,7)" rx="2" ry="2" />
<text  x="1179.57" y="431.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (6,231,870 samples, 0.01%)</title><rect x="1179.0" y="261" width="0.1" height="15.0" fill="rgb(209,12,23)" rx="2" ry="2" />
<text  x="1182.01" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (13,419,990 samples, 0.02%)</title><rect x="1176.1" y="373" width="0.3" height="15.0" fill="rgb(225,38,3)" rx="2" ry="2" />
<text  x="1179.09" y="383.5" ></text>
</g>
<g >
<title>free_compound_page (57,739,219 samples, 0.10%)</title><rect x="1176.7" y="309" width="1.1" height="15.0" fill="rgb(221,10,25)" rx="2" ry="2" />
<text  x="1179.69" y="319.5" ></text>
</g>
<g >
<title>all (60,517,764,834 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(209,171,23)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (65,222,135 samples, 0.11%)</title><rect x="1158.4" y="165" width="1.2" height="15.0" fill="rgb(209,21,7)" rx="2" ry="2" />
<text  x="1161.36" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56,849,316,811 samples, 93.94%)</title><rect x="65.5" y="405" width="1108.5" height="15.0" fill="rgb(230,4,7)" rx="2" ry="2" />
<text  x="68.48" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>free_pcp_prepare (53,720,305 samples, 0.09%)</title><rect x="1176.7" y="277" width="1.1" height="15.0" fill="rgb(220,94,26)" rx="2" ry="2" />
<text  x="1179.74" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (75,415,749 samples, 0.12%)</title><rect x="1158.3" y="261" width="1.5" height="15.0" fill="rgb(207,211,1)" rx="2" ry="2" />
<text  x="1161.28" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (31,576,105 samples, 0.05%)</title><rect x="1173.1" y="325" width="0.6" height="15.0" fill="rgb(241,28,15)" rx="2" ry="2" />
<text  x="1176.12" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (36,365,399,569 samples, 60.09%)</title><rect x="70.3" y="357" width="709.0" height="15.0" fill="rgb(247,8,19)" rx="2" ry="2" />
<text  x="73.25" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>obj_cgroup_charge_pages (74,557,440 samples, 0.12%)</title><rect x="1171.5" y="309" width="1.4" height="15.0" fill="rgb(206,33,44)" rx="2" ry="2" />
<text  x="1174.48" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5,165,212 samples, 0.01%)</title><rect x="1179.0" y="245" width="0.1" height="15.0" fill="rgb(221,195,41)" rx="2" ry="2" />
<text  x="1182.03" y="255.5" ></text>
</g>
<g >
<title>irq_work_tick (105,488,526 samples, 0.17%)</title><rect x="1187.7" y="357" width="2.1" height="15.0" fill="rgb(247,162,10)" rx="2" ry="2" />
<text  x="1190.75" y="367.5" ></text>
</g>
<g >
<title>_prb_read_valid (61,281,215 samples, 0.10%)</title><rect x="755.0" y="69" width="1.2" height="15.0" fill="rgb(216,220,50)" rx="2" ry="2" />
<text  x="757.98" y="79.5" ></text>
</g>
<g >
<title>__cond_resched (43,382,478 samples, 0.07%)</title><rect x="68.2" y="373" width="0.8" height="15.0" fill="rgb(210,210,28)" rx="2" ry="2" />
<text  x="71.16" y="383.5" ></text>
</g>
<g >
<title>alloc_pages (155,804,471 samples, 0.26%)</title><rect x="1170.9" y="357" width="3.0" height="15.0" fill="rgb(209,78,27)" rx="2" ry="2" />
<text  x="1173.89" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (444,515,218 samples, 0.73%)</title><rect x="1178.8" y="341" width="8.7" height="15.0" fill="rgb(227,2,8)" rx="2" ry="2" />
<text  x="1181.83" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (126,567,061 samples, 0.21%)</title><rect x="1187.5" y="485" width="2.5" height="15.0" fill="rgb(210,63,40)" rx="2" ry="2" />
<text  x="1190.50" y="495.5" ></text>
</g>
<g >
<title>get_data.isra.0 (7,292,737 samples, 0.01%)</title><rect x="1189.1" y="245" width="0.2" height="15.0" fill="rgb(234,162,41)" rx="2" ry="2" />
<text  x="1192.14" y="255.5" ></text>
</g>
<g >
<title>charge_memcg (33,124,882 samples, 0.05%)</title><rect x="69.1" y="357" width="0.6" height="15.0" fill="rgb(247,132,9)" rx="2" ry="2" />
<text  x="72.09" y="367.5" ></text>
</g>
<g >
<title>clear_subpage (348,347,000 samples, 0.58%)</title><rect x="1159.8" y="357" width="6.8" height="15.0" fill="rgb(220,116,25)" rx="2" ry="2" />
<text  x="1162.82" y="367.5" ></text>
</g>
<g >
<title>__page_cache_release (11,137,462 samples, 0.02%)</title><rect x="1179.0" y="277" width="0.2" height="15.0" fill="rgb(247,206,12)" rx="2" ry="2" />
<text  x="1181.98" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (53,232,314 samples, 0.09%)</title><rect x="69.1" y="373" width="1.0" height="15.0" fill="rgb(230,20,5)" rx="2" ry="2" />
<text  x="72.08" y="383.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (22,065,718 samples, 0.04%)</title><rect x="755.6" y="53" width="0.4" height="15.0" fill="rgb(229,23,9)" rx="2" ry="2" />
<text  x="758.61" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (560,575,117 samples, 0.93%)</title><rect x="1176.6" y="501" width="10.9" height="15.0" fill="rgb(232,61,27)" rx="2" ry="2" />
<text  x="1179.57" y="511.5" ></text>
</g>
<g >
<title>update_process_times (106,578,230 samples, 0.18%)</title><rect x="754.8" y="181" width="2.1" height="15.0" fill="rgb(231,11,18)" rx="2" ry="2" />
<text  x="757.84" y="191.5" ></text>
</g>
<g >
<title>prb_read_valid (60,637,713 samples, 0.10%)</title><rect x="1158.4" y="133" width="1.2" height="15.0" fill="rgb(228,164,14)" rx="2" ry="2" />
<text  x="1161.41" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (56,860,767,296 samples, 93.96%)</title><rect x="65.3" y="421" width="1108.7" height="15.0" fill="rgb(212,36,38)" rx="2" ry="2" />
<text  x="68.26" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>__mod_lruvec_state (11,983,520 samples, 0.02%)</title><rect x="1170.6" y="341" width="0.3" height="15.0" fill="rgb(209,186,21)" rx="2" ry="2" />
<text  x="1173.65" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (18,652,811 samples, 0.03%)</title><rect x="69.7" y="357" width="0.4" height="15.0" fill="rgb(249,9,28)" rx="2" ry="2" />
<text  x="72.74" y="367.5" ></text>
</g>
<g >
<title>page_counter_uncharge (6,945,803 samples, 0.01%)</title><rect x="1179.5" y="213" width="0.2" height="15.0" fill="rgb(216,165,30)" rx="2" ry="2" />
<text  x="1182.53" y="223.5" ></text>
</g>
<g >
<title>prep_new_page (36,329,233,468 samples, 60.03%)</title><rect x="71.0" y="325" width="708.3" height="15.0" fill="rgb(215,70,13)" rx="2" ry="2" />
<text  x="73.95" y="335.5" >prep_new_page</text>
</g>
<g >
<title>tick_sched_timer (119,719,588 samples, 0.20%)</title><rect x="1187.6" y="405" width="2.3" height="15.0" fill="rgb(211,76,51)" rx="2" ry="2" />
<text  x="1190.57" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (560,575,117 samples, 0.93%)</title><rect x="1176.6" y="485" width="10.9" height="15.0" fill="rgb(226,188,8)" rx="2" ry="2" />
<text  x="1179.57" y="495.5" ></text>
</g>
<g >
<title>clear_subpage (20,314,677 samples, 0.03%)</title><rect x="1169.2" y="373" width="0.4" height="15.0" fill="rgb(240,215,27)" rx="2" ry="2" />
<text  x="1172.24" y="383.5" ></text>
</g>
<g >
<title>free_transhuge_page (59,078,830 samples, 0.10%)</title><rect x="1176.7" y="325" width="1.1" height="15.0" fill="rgb(243,34,4)" rx="2" ry="2" />
<text  x="1179.66" y="335.5" ></text>
</g>
<g >
<title>clear_huge_page (19,996,864,963 samples, 33.04%)</title><rect x="779.3" y="373" width="389.9" height="15.0" fill="rgb(216,32,38)" rx="2" ry="2" />
<text  x="782.33" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>page_add_new_anon_rmap (10,404,478 samples, 0.02%)</title><rect x="1170.1" y="373" width="0.2" height="15.0" fill="rgb(250,38,31)" rx="2" ry="2" />
<text  x="1173.15" y="383.5" ></text>
</g>
<g >
<title>desc_read (17,288,553 samples, 0.03%)</title><rect x="755.7" y="37" width="0.3" height="15.0" fill="rgb(209,11,47)" rx="2" ry="2" />
<text  x="758.70" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (21,702,878 samples, 0.04%)</title><rect x="1189.3" y="261" width="0.4" height="15.0" fill="rgb(240,210,4)" rx="2" ry="2" />
<text  x="1192.32" y="271.5" ></text>
</g>
<g >
<title>prb_read_valid (10,601,788 samples, 0.02%)</title><rect x="1176.1" y="261" width="0.2" height="15.0" fill="rgb(254,34,5)" rx="2" ry="2" />
<text  x="1179.10" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,238,609 samples, 0.02%)</title><rect x="71.0" y="309" width="0.3" height="15.0" fill="rgb(246,10,31)" rx="2" ry="2" />
<text  x="74.02" y="319.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (62,821,573 samples, 0.10%)</title><rect x="1176.6" y="405" width="1.2" height="15.0" fill="rgb(206,85,49)" rx="2" ry="2" />
<text  x="1179.60" y="415.5" ></text>
</g>
<g >
<title>__cond_resched (35,961,907 samples, 0.06%)</title><rect x="780.8" y="357" width="0.7" height="15.0" fill="rgb(222,69,5)" rx="2" ry="2" />
<text  x="783.81" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (7,040,548 samples, 0.01%)</title><rect x="1187.3" y="229" width="0.1" height="15.0" fill="rgb(235,79,42)" rx="2" ry="2" />
<text  x="1190.31" y="239.5" ></text>
</g>
<g >
<title>__mod_node_page_state (10,014,283 samples, 0.02%)</title><rect x="1170.7" y="325" width="0.2" height="15.0" fill="rgb(250,94,44)" rx="2" ry="2" />
<text  x="1173.68" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (12,335,979 samples, 0.02%)</title><rect x="1171.2" y="309" width="0.3" height="15.0" fill="rgb(206,191,0)" rx="2" ry="2" />
<text  x="1174.24" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (65,222,135 samples, 0.11%)</title><rect x="1158.4" y="197" width="1.2" height="15.0" fill="rgb(227,155,32)" rx="2" ry="2" />
<text  x="1161.36" y="207.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (5,354,139 samples, 0.01%)</title><rect x="1178.2" y="277" width="0.1" height="15.0" fill="rgb(244,155,30)" rx="2" ry="2" />
<text  x="1181.23" y="287.5" ></text>
</g>
<g >
<title>memcpy_erms (17,650,726 samples, 0.03%)</title><rect x="1159.2" y="117" width="0.4" height="15.0" fill="rgb(246,80,45)" rx="2" ry="2" />
<text  x="1162.25" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (118,636,948 samples, 0.20%)</title><rect x="754.7" y="277" width="2.3" height="15.0" fill="rgb(250,144,7)" rx="2" ry="2" />
<text  x="757.70" y="287.5" ></text>
</g>
<g >
<title>prb_read_valid (88,489,117 samples, 0.15%)</title><rect x="755.0" y="85" width="1.7" height="15.0" fill="rgb(223,77,30)" rx="2" ry="2" />
<text  x="757.96" y="95.5" ></text>
</g>
<g >
<title>_prb_read_valid (40,740,571 samples, 0.07%)</title><rect x="1158.4" y="117" width="0.8" height="15.0" fill="rgb(235,229,30)" rx="2" ry="2" />
<text  x="1161.42" y="127.5" ></text>
</g>
<g >
<title>irq_work_tick (95,569,662 samples, 0.16%)</title><rect x="754.9" y="165" width="1.8" height="15.0" fill="rgb(215,144,21)" rx="2" ry="2" />
<text  x="757.87" y="175.5" ></text>
</g>
<g >
<title>try_charge_memcg (27,568,920 samples, 0.05%)</title><rect x="1172.4" y="293" width="0.5" height="15.0" fill="rgb(214,212,20)" rx="2" ry="2" />
<text  x="1175.40" y="303.5" ></text>
</g>
<g >
<title>rcu_all_qs (134,479,244 samples, 0.22%)</title><rect x="1166.6" y="357" width="2.6" height="15.0" fill="rgb(225,217,49)" rx="2" ry="2" />
<text  x="1169.61" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,169,587 samples, 0.02%)</title><rect x="1176.1" y="421" width="0.3" height="15.0" fill="rgb(232,153,43)" rx="2" ry="2" />
<text  x="1179.08" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (13,593,949 samples, 0.02%)</title><rect x="1176.1" y="389" width="0.3" height="15.0" fill="rgb(208,173,18)" rx="2" ry="2" />
<text  x="1179.09" y="399.5" ></text>
</g>
<g >
<title>memcg_check_events (10,104,276 samples, 0.02%)</title><rect x="69.1" y="341" width="0.2" height="15.0" fill="rgb(240,43,28)" rx="2" ry="2" />
<text  x="72.15" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (112,878,120 samples, 0.19%)</title><rect x="754.7" y="213" width="2.2" height="15.0" fill="rgb(229,204,19)" rx="2" ry="2" />
<text  x="757.72" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (62,821,573 samples, 0.10%)</title><rect x="1176.6" y="389" width="1.2" height="15.0" fill="rgb(231,157,9)" rx="2" ry="2" />
<text  x="1179.60" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,636,748 samples, 0.03%)</title><rect x="1176.1" y="453" width="0.3" height="15.0" fill="rgb(251,159,47)" rx="2" ry="2" />
<text  x="1179.08" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (22,344,204 samples, 0.04%)</title><rect x="1170.4" y="357" width="0.5" height="15.0" fill="rgb(240,224,52)" rx="2" ry="2" />
<text  x="1173.45" y="367.5" ></text>
</g>
<g >
<title>timekeeping_advance (6,315,596 samples, 0.01%)</title><rect x="1187.6" y="341" width="0.1" height="15.0" fill="rgb(230,49,44)" rx="2" ry="2" />
<text  x="1190.59" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (496,416,167 samples, 0.82%)</title><rect x="1177.8" y="405" width="9.7" height="15.0" fill="rgb(252,141,40)" rx="2" ry="2" />
<text  x="1180.82" y="415.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (6,676,230 samples, 0.01%)</title><rect x="1173.0" y="325" width="0.1" height="15.0" fill="rgb(249,125,37)" rx="2" ry="2" />
<text  x="1175.99" y="335.5" ></text>
</g>
<g >
<title>update_process_times (71,610,054 samples, 0.12%)</title><rect x="1158.4" y="229" width="1.3" height="15.0" fill="rgb(213,6,47)" rx="2" ry="2" />
<text  x="1161.35" y="239.5" ></text>
</g>
<g >
<title>prb_read_valid (97,750,384 samples, 0.16%)</title><rect x="1187.8" y="277" width="1.9" height="15.0" fill="rgb(249,199,11)" rx="2" ry="2" />
<text  x="1190.84" y="287.5" ></text>
</g>
<g >
<title>free_pcp_prepare (390,529,254 samples, 0.65%)</title><rect x="1179.7" y="229" width="7.6" height="15.0" fill="rgb(211,171,43)" rx="2" ry="2" />
<text  x="1182.69" y="239.5" ></text>
</g>
<g >
<title>get_data.isra.0 (6,913,276 samples, 0.01%)</title><rect x="756.0" y="53" width="0.2" height="15.0" fill="rgb(215,33,0)" rx="2" ry="2" />
<text  x="759.04" y="63.5" ></text>
</g>
<g >
<title>__free_pages (22,950,236 samples, 0.04%)</title><rect x="1178.0" y="341" width="0.4" height="15.0" fill="rgb(239,116,43)" rx="2" ry="2" />
<text  x="1180.96" y="351.5" ></text>
</g>
<g >
<title>prep_compound_page (770,778,441 samples, 1.27%)</title><rect x="764.3" y="309" width="15.0" height="15.0" fill="rgb(229,24,41)" rx="2" ry="2" />
<text  x="767.28" y="319.5" ></text>
</g>
<g >
<title>zap_huge_pmd (493,736,422 samples, 0.82%)</title><rect x="1177.9" y="357" width="9.6" height="15.0" fill="rgb(245,84,11)" rx="2" ry="2" />
<text  x="1180.87" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,221,205 samples, 0.01%)</title><rect x="781.5" y="357" width="0.2" height="15.0" fill="rgb(228,226,48)" rx="2" ry="2" />
<text  x="784.51" y="367.5" ></text>
</g>
<g >
<title>irq_work_run_list (11,195,272 samples, 0.02%)</title><rect x="1176.1" y="325" width="0.2" height="15.0" fill="rgb(237,159,31)" rx="2" ry="2" />
<text  x="1179.09" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (112,336,916 samples, 0.19%)</title><rect x="1187.7" y="389" width="2.2" height="15.0" fill="rgb(252,161,15)" rx="2" ry="2" />
<text  x="1190.72" y="399.5" ></text>
</g>
<g >
<title>try_charge_memcg (19,766,689 samples, 0.03%)</title><rect x="69.4" y="341" width="0.3" height="15.0" fill="rgb(248,225,22)" rx="2" ry="2" />
<text  x="72.35" y="351.5" ></text>
</g>
<g >
<title>pte_alloc_one (179,859,951 samples, 0.30%)</title><rect x="1170.4" y="373" width="3.5" height="15.0" fill="rgb(221,38,39)" rx="2" ry="2" />
<text  x="1173.43" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (12,922,880 samples, 0.02%)</title><rect x="1173.3" y="293" width="0.3" height="15.0" fill="rgb(206,11,48)" rx="2" ry="2" />
<text  x="1176.33" y="303.5" ></text>
</g>
<g >
<title>console_unlock (100,596,726 samples, 0.17%)</title><rect x="1187.8" y="293" width="1.9" height="15.0" fill="rgb(236,9,35)" rx="2" ry="2" />
<text  x="1190.79" y="303.5" ></text>
</g>
<g >
<title>free_unref_page (10,628,391 samples, 0.02%)</title><rect x="1178.2" y="325" width="0.2" height="15.0" fill="rgb(227,81,28)" rx="2" ry="2" />
<text  x="1181.19" y="335.5" ></text>
</g>
<g >
<title>__put_compound_page (440,948,652 samples, 0.73%)</title><rect x="1178.9" y="293" width="8.6" height="15.0" fill="rgb(211,139,16)" rx="2" ry="2" />
<text  x="1181.86" y="303.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (56,746,812,912 samples, 93.77%)</title><rect x="67.5" y="389" width="1106.4" height="15.0" fill="rgb(228,6,24)" rx="2" ry="2" />
<text  x="70.47" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>irq_work_tick (65,222,135 samples, 0.11%)</title><rect x="1158.4" y="213" width="1.2" height="15.0" fill="rgb(232,196,14)" rx="2" ry="2" />
<text  x="1161.36" y="223.5" ></text>
</g>
<g >
<title>sysbench (60,517,764,834 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(225,144,34)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >sysbench</text>
</g>
<g >
<title>lru_cache_add (25,405,787 samples, 0.04%)</title><rect x="1169.6" y="357" width="0.5" height="15.0" fill="rgb(217,154,10)" rx="2" ry="2" />
<text  x="1172.65" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (118,636,948 samples, 0.20%)</title><rect x="754.7" y="293" width="2.3" height="15.0" fill="rgb(246,61,11)" rx="2" ry="2" />
<text  x="757.70" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (8,411,371 samples, 0.01%)</title><rect x="1170.2" y="341" width="0.1" height="15.0" fill="rgb(222,217,33)" rx="2" ry="2" />
<text  x="1173.16" y="351.5" ></text>
</g>
<g >
<title>memcpy_erms (24,495,027 samples, 0.04%)</title><rect x="756.2" y="69" width="0.5" height="15.0" fill="rgb(218,207,9)" rx="2" ry="2" />
<text  x="759.21" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (108,814,460 samples, 0.18%)</title><rect x="1174.3" y="469" width="2.1" height="15.0" fill="rgb(252,81,36)" rx="2" ry="2" />
<text  x="1177.27" y="479.5" ></text>
</g>
<g >
<title>desc_read (10,724,126 samples, 0.02%)</title><rect x="1158.9" y="85" width="0.2" height="15.0" fill="rgb(233,133,40)" rx="2" ry="2" />
<text  x="1161.91" y="95.5" ></text>
</g>
<g >
<title>irq_work_single (95,317,068 samples, 0.16%)</title><rect x="754.9" y="133" width="1.8" height="15.0" fill="rgb(221,110,16)" rx="2" ry="2" />
<text  x="757.87" y="143.5" ></text>
</g>
<g >
<title>prep_new_page (14,548,664 samples, 0.02%)</title><rect x="1173.3" y="309" width="0.3" height="15.0" fill="rgb(214,193,36)" rx="2" ry="2" />
<text  x="1176.31" y="319.5" ></text>
</g>
<g >
<title>console_unlock (91,702,513 samples, 0.15%)</title><rect x="754.9" y="101" width="1.8" height="15.0" fill="rgb(217,112,32)" rx="2" ry="2" />
<text  x="757.90" y="111.5" ></text>
</g>
<g >
<title>free_compound_page (414,318,478 samples, 0.68%)</title><rect x="1179.4" y="261" width="8.1" height="15.0" fill="rgb(246,164,38)" rx="2" ry="2" />
<text  x="1182.38" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (6,493,542 samples, 0.01%)</title><rect x="1187.6" y="373" width="0.1" height="15.0" fill="rgb(238,224,31)" rx="2" ry="2" />
<text  x="1190.59" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (71,782,986 samples, 0.12%)</title><rect x="1158.3" y="245" width="1.4" height="15.0" fill="rgb(233,136,22)" rx="2" ry="2" />
<text  x="1161.35" y="255.5" ></text>
</g>
<g >
<title>rmqueue_bulk (7,366,280 samples, 0.01%)</title><rect x="1173.6" y="309" width="0.1" height="15.0" fill="rgb(211,194,29)" rx="2" ry="2" />
<text  x="1176.59" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit (6,594,592 samples, 0.01%)</title><rect x="1174.0" y="437" width="0.1" height="15.0" fill="rgb(243,90,2)" rx="2" ry="2" />
<text  x="1176.96" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (56,883,346,446 samples, 93.99%)</title><rect x="65.1" y="453" width="1109.1" height="15.0" fill="rgb(253,69,7)" rx="2" ry="2" />
<text  x="68.10" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>__hrtimer_run_queues (75,847,048 samples, 0.13%)</title><rect x="1158.3" y="277" width="1.5" height="15.0" fill="rgb(234,155,34)" rx="2" ry="2" />
<text  x="1161.27" y="287.5" ></text>
</g>
<g >
<title>release_pages (442,733,837 samples, 0.73%)</title><rect x="1178.8" y="309" width="8.7" height="15.0" fill="rgb(244,54,13)" rx="2" ry="2" />
<text  x="1181.83" y="319.5" ></text>
</g>
<g >
<title>mmput (560,311,937 samples, 0.93%)</title><rect x="1176.6" y="437" width="10.9" height="15.0" fill="rgb(246,125,7)" rx="2" ry="2" />
<text  x="1179.57" y="447.5" ></text>
</g>
<g >
<title>irq_work_run_list (105,221,647 samples, 0.17%)</title><rect x="1187.8" y="341" width="2.0" height="15.0" fill="rgb(224,124,36)" rx="2" ry="2" />
<text  x="1190.75" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (35,170,711,959 samples, 58.12%)</title><rect x="71.3" y="309" width="685.7" height="15.0" fill="rgb(251,212,8)" rx="2" ry="2" />
<text  x="74.26" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>clear_page_erms (19,393,857,394 samples, 32.05%)</title><rect x="781.7" y="357" width="378.1" height="15.0" fill="rgb(206,75,36)" rx="2" ry="2" />
<text  x="784.67" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (106,735,270 samples, 0.18%)</title><rect x="754.8" y="197" width="2.1" height="15.0" fill="rgb(253,33,22)" rx="2" ry="2" />
<text  x="757.84" y="207.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (24,460,084 samples, 0.04%)</title><rect x="1188.7" y="245" width="0.4" height="15.0" fill="rgb(231,80,28)" rx="2" ry="2" />
<text  x="1191.66" y="255.5" ></text>
</g>
<g >
<title>[unknown] (59,828,493,747 samples, 98.86%)</title><rect x="10.0" y="501" width="1166.6" height="15.0" fill="rgb(218,72,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>hrtimer_interrupt (116,261,607 samples, 0.19%)</title><rect x="754.7" y="245" width="2.3" height="15.0" fill="rgb(209,38,0)" rx="2" ry="2" />
<text  x="757.71" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (65,222,135 samples, 0.11%)</title><rect x="1158.4" y="181" width="1.2" height="15.0" fill="rgb(222,187,14)" rx="2" ry="2" />
<text  x="1161.36" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (123,809,790 samples, 0.20%)</title><rect x="1187.6" y="469" width="2.4" height="15.0" fill="rgb(221,181,12)" rx="2" ry="2" />
<text  x="1190.56" y="479.5" ></text>
</g>
<g >
<title>uncharge_batch (13,721,169 samples, 0.02%)</title><rect x="1179.4" y="229" width="0.3" height="15.0" fill="rgb(239,8,24)" rx="2" ry="2" />
<text  x="1182.39" y="239.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (24,188,782 samples, 0.04%)</title><rect x="1169.7" y="341" width="0.4" height="15.0" fill="rgb(250,160,39)" rx="2" ry="2" />
<text  x="1172.66" y="351.5" ></text>
</g>
<g >
<title>[vmlinux] (560,575,117 samples, 0.93%)</title><rect x="1176.6" y="469" width="10.9" height="15.0" fill="rgb(205,160,34)" rx="2" ry="2" />
<text  x="1179.57" y="479.5" ></text>
</g>
<g >
<title>release_pages (62,553,331 samples, 0.10%)</title><rect x="1176.6" y="357" width="1.2" height="15.0" fill="rgb(208,131,8)" rx="2" ry="2" />
<text  x="1179.60" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (116,752,914 samples, 0.19%)</title><rect x="754.7" y="261" width="2.3" height="15.0" fill="rgb(231,25,19)" rx="2" ry="2" />
<text  x="757.70" y="271.5" ></text>
</g>
<g >
<title>lock_page_memcg (7,150,295 samples, 0.01%)</title><rect x="1178.7" y="325" width="0.1" height="15.0" fill="rgb(241,157,21)" rx="2" ry="2" />
<text  x="1181.68" y="335.5" ></text>
</g>
<g >
<title>_prb_read_valid (6,652,854 samples, 0.01%)</title><rect x="1176.1" y="245" width="0.1" height="15.0" fill="rgb(213,213,25)" rx="2" ry="2" />
<text  x="1179.10" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (36,355,646,404 samples, 60.07%)</title><rect x="70.4" y="341" width="708.9" height="15.0" fill="rgb(210,30,17)" rx="2" ry="2" />
<text  x="73.44" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>scheduler_tick (5,263,777 samples, 0.01%)</title><rect x="1159.6" y="213" width="0.1" height="15.0" fill="rgb(225,137,21)" rx="2" ry="2" />
<text  x="1162.64" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (113,540,305 samples, 0.19%)</title><rect x="754.7" y="229" width="2.2" height="15.0" fill="rgb(205,173,11)" rx="2" ry="2" />
<text  x="757.71" y="239.5" ></text>
</g>
<g >
<title>_prb_read_valid (71,777,690 samples, 0.12%)</title><rect x="1187.9" y="261" width="1.4" height="15.0" fill="rgb(214,175,22)" rx="2" ry="2" />
<text  x="1190.88" y="271.5" ></text>
</g>
<g >
<title>irq_work_single (104,687,896 samples, 0.17%)</title><rect x="1187.8" y="325" width="2.0" height="15.0" fill="rgb(226,42,2)" rx="2" ry="2" />
<text  x="1190.76" y="335.5" ></text>
</g>
<g >
<title>free_pcp_prepare (6,517,099 samples, 0.01%)</title><rect x="1178.2" y="309" width="0.1" height="15.0" fill="rgb(245,148,5)" rx="2" ry="2" />
<text  x="1181.21" y="319.5" ></text>
</g>
<g >
<title>page_counter_try_charge (17,967,459 samples, 0.03%)</title><rect x="69.4" y="325" width="0.3" height="15.0" fill="rgb(248,165,8)" rx="2" ry="2" />
<text  x="72.38" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (150,923,365 samples, 0.25%)</title><rect x="1170.9" y="341" width="2.9" height="15.0" fill="rgb(206,161,45)" rx="2" ry="2" />
<text  x="1173.89" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (25,927,077 samples, 0.04%)</title><rect x="1169.6" y="373" width="0.5" height="15.0" fill="rgb(207,123,33)" rx="2" ry="2" />
<text  x="1172.64" y="383.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (95,152,643 samples, 0.16%)</title><rect x="754.9" y="117" width="1.8" height="15.0" fill="rgb(215,46,28)" rx="2" ry="2" />
<text  x="757.88" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (122,031,626 samples, 0.20%)</title><rect x="1187.6" y="437" width="2.3" height="15.0" fill="rgb(229,107,0)" rx="2" ry="2" />
<text  x="1190.56" y="447.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (442,733,837 samples, 0.73%)</title><rect x="1178.8" y="325" width="8.7" height="15.0" fill="rgb(230,3,27)" rx="2" ry="2" />
<text  x="1181.83" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (59,826,372,247 samples, 98.86%)</title><rect x="10.0" y="485" width="1166.5" height="15.0" fill="rgb(209,35,46)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >__memset_avx2_erms</text>
</g>
<g >
<title>__hrtimer_run_queues (13,681,043 samples, 0.02%)</title><rect x="1176.1" y="405" width="0.3" height="15.0" fill="rgb(206,187,17)" rx="2" ry="2" />
<text  x="1179.08" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (495,968,670 samples, 0.82%)</title><rect x="1177.8" y="373" width="9.7" height="15.0" fill="rgb(205,227,28)" rx="2" ry="2" />
<text  x="1180.83" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (9,525,864 samples, 0.02%)</title><rect x="756.7" y="165" width="0.2" height="15.0" fill="rgb(233,159,36)" rx="2" ry="2" />
<text  x="759.74" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (120,342,098 samples, 0.20%)</title><rect x="1187.6" y="421" width="2.3" height="15.0" fill="rgb(245,187,47)" rx="2" ry="2" />
<text  x="1190.56" y="431.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (14,269,475 samples, 0.02%)</title><rect x="1158.8" y="101" width="0.3" height="15.0" fill="rgb(244,5,0)" rx="2" ry="2" />
<text  x="1161.84" y="111.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (8,901,869 samples, 0.01%)</title><rect x="68.0" y="373" width="0.2" height="15.0" fill="rgb(230,113,14)" rx="2" ry="2" />
<text  x="70.98" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (56,866,954,832 samples, 93.97%)</title><rect x="65.1" y="437" width="1108.9" height="15.0" fill="rgb(227,7,42)" rx="2" ry="2" />
<text  x="68.14" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>hrtimer_interrupt (78,150,317 samples, 0.13%)</title><rect x="1158.3" y="293" width="1.5" height="15.0" fill="rgb(231,37,3)" rx="2" ry="2" />
<text  x="1161.27" y="303.5" ></text>
</g>
<g >
<title>free_transhuge_page (423,392,828 samples, 0.70%)</title><rect x="1179.2" y="277" width="8.3" height="15.0" fill="rgb(242,88,11)" rx="2" ry="2" />
<text  x="1182.20" y="287.5" ></text>
</g>
<g >
<title>__put_compound_page (62,197,066 samples, 0.10%)</title><rect x="1176.6" y="341" width="1.2" height="15.0" fill="rgb(219,125,49)" rx="2" ry="2" />
<text  x="1179.60" y="351.5" ></text>
</g>
<g >
<title>update_process_times (13,333,384 samples, 0.02%)</title><rect x="1176.1" y="357" width="0.3" height="15.0" fill="rgb(245,4,24)" rx="2" ry="2" />
<text  x="1179.09" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (398,636,368 samples, 0.66%)</title><rect x="1179.7" y="245" width="7.7" height="15.0" fill="rgb(246,126,46)" rx="2" ry="2" />
<text  x="1182.67" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (11,195,272 samples, 0.02%)</title><rect x="1176.1" y="309" width="0.2" height="15.0" fill="rgb(232,142,48)" rx="2" ry="2" />
<text  x="1179.09" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (7,024,461 samples, 0.01%)</title><rect x="1170.2" y="325" width="0.1" height="15.0" fill="rgb(218,111,14)" rx="2" ry="2" />
<text  x="1173.19" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (122,120,510 samples, 0.20%)</title><rect x="1187.6" y="453" width="2.3" height="15.0" fill="rgb(253,112,36)" rx="2" ry="2" />
<text  x="1190.56" y="463.5" ></text>
</g>
<g >
<title>irq_work_run_list (95,485,732 samples, 0.16%)</title><rect x="754.9" y="149" width="1.8" height="15.0" fill="rgb(219,55,32)" rx="2" ry="2" />
<text  x="757.87" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,169,587 samples, 0.02%)</title><rect x="1176.1" y="437" width="0.3" height="15.0" fill="rgb(225,79,2)" rx="2" ry="2" />
<text  x="1179.08" y="447.5" ></text>
</g>
<g >
<title>event_seq_write (127,812,268 samples, 0.21%)</title><rect x="1187.5" y="501" width="2.5" height="15.0" fill="rgb(206,113,25)" rx="2" ry="2" />
<text  x="1190.50" y="511.5" ></text>
</g>
<g >
<title>alloc_pages_vma (36,372,067,604 samples, 60.10%)</title><rect x="70.1" y="373" width="709.2" height="15.0" fill="rgb(230,72,50)" rx="2" ry="2" />
<text  x="73.12" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>__mod_lruvec_page_state (5,364,639 samples, 0.01%)</title><rect x="1178.6" y="325" width="0.1" height="15.0" fill="rgb(251,224,36)" rx="2" ry="2" />
<text  x="1181.57" y="335.5" ></text>
</g>
<g >
<title>do_exit (560,311,937 samples, 0.93%)</title><rect x="1176.6" y="453" width="10.9" height="15.0" fill="rgb(236,39,15)" rx="2" ry="2" />
<text  x="1179.57" y="463.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (371,746,928 samples, 0.61%)</title><rect x="757.0" y="309" width="7.3" height="15.0" fill="rgb(205,191,47)" rx="2" ry="2" />
<text  x="760.04" y="319.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (5,980,254 samples, 0.01%)</title><rect x="1178.2" y="293" width="0.1" height="15.0" fill="rgb(239,111,10)" rx="2" ry="2" />
<text  x="1181.22" y="303.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (103,425,281 samples, 0.17%)</title><rect x="1171.0" y="325" width="2.0" height="15.0" fill="rgb(222,72,35)" rx="2" ry="2" />
<text  x="1173.98" y="335.5" ></text>
</g>
<g >
<title>PageHuge (5,972,070 samples, 0.01%)</title><rect x="1178.9" y="277" width="0.1" height="15.0" fill="rgb(207,187,42)" rx="2" ry="2" />
<text  x="1181.87" y="287.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (104,598,948 samples, 0.17%)</title><rect x="1187.8" y="309" width="2.0" height="15.0" fill="rgb(241,187,33)" rx="2" ry="2" />
<text  x="1190.76" y="319.5" ></text>
</g>
<g >
<title>page_remove_rmap (17,787,465 samples, 0.03%)</title><rect x="1178.5" y="341" width="0.3" height="15.0" fill="rgb(214,124,6)" rx="2" ry="2" />
<text  x="1181.47" y="351.5" ></text>
</g>
<g >
<title>update_wall_time (6,315,596 samples, 0.01%)</title><rect x="1187.6" y="357" width="0.1" height="15.0" fill="rgb(206,166,42)" rx="2" ry="2" />
<text  x="1190.59" y="367.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (11,195,272 samples, 0.02%)</title><rect x="1176.1" y="293" width="0.2" height="15.0" fill="rgb(225,105,12)" rx="2" ry="2" />
<text  x="1179.09" y="303.5" ></text>
</g>
<g >
<title>page_counter_cancel (6,500,565 samples, 0.01%)</title><rect x="1179.5" y="197" width="0.2" height="15.0" fill="rgb(227,126,44)" rx="2" ry="2" />
<text  x="1182.54" y="207.5" ></text>
</g>
<g >
<title>up_read (7,543,496 samples, 0.01%)</title><rect x="1174.1" y="437" width="0.1" height="15.0" fill="rgb(240,101,11)" rx="2" ry="2" />
<text  x="1177.09" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (85,824,659 samples, 0.14%)</title><rect x="65.7" y="389" width="1.7" height="15.0" fill="rgb(244,219,22)" rx="2" ry="2" />
<text  x="68.70" y="399.5" ></text>
</g>
<g >
<title>console_unlock (62,540,992 samples, 0.10%)</title><rect x="1158.4" y="149" width="1.2" height="15.0" fill="rgb(247,185,50)" rx="2" ry="2" />
<text  x="1161.38" y="159.5" ></text>
</g>
</g>
</svg>
