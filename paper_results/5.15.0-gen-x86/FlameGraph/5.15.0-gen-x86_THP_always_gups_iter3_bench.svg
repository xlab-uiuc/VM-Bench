<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>irq_work_run_list (48,037,287 samples, 0.04%)</title><rect x="1180.4" y="197" width="0.4" height="15.0" fill="rgb(228,202,45)" rx="2" ry="2" />
<text  x="1183.38" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (11,599,860 samples, 0.01%)</title><rect x="1185.6" y="357" width="0.1" height="15.0" fill="rgb(214,117,53)" rx="2" ry="2" />
<text  x="1188.64" y="367.5" ></text>
</g>
<g >
<title>read (53,201,278 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(234,2,13)" rx="2" ry="2" />
<text  x="1192.50" y="495.5" ></text>
</g>
<g >
<title>try_charge_memcg (14,065,653 samples, 0.01%)</title><rect x="649.9" y="341" width="0.1" height="15.0" fill="rgb(239,6,31)" rx="2" ry="2" />
<text  x="652.85" y="351.5" ></text>
</g>
<g >
<title>main (125,613,150,354 samples, 99.47%)</title><rect x="15.7" y="485" width="1173.8" height="15.0" fill="rgb(238,198,9)" rx="2" ry="2" />
<text  x="18.75" y="495.5" >main</text>
</g>
<g >
<title>charge_memcg (25,435,292 samples, 0.02%)</title><rect x="649.7" y="357" width="0.3" height="15.0" fill="rgb(213,36,12)" rx="2" ry="2" />
<text  x="652.74" y="367.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,365,496 samples, 0.02%)</title><rect x="1180.4" y="117" width="0.3" height="15.0" fill="rgb(254,92,10)" rx="2" ry="2" />
<text  x="1183.41" y="127.5" ></text>
</g>
<g >
<title>vfs_read (52,848,877 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(230,42,4)" rx="2" ry="2" />
<text  x="1192.50" y="415.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (45,364,792 samples, 0.04%)</title><rect x="1188.0" y="229" width="0.4" height="15.0" fill="rgb(215,26,1)" rx="2" ry="2" />
<text  x="1190.95" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (57,683,374,389 samples, 45.68%)</title><rect x="647.8" y="437" width="539.0" height="15.0" fill="rgb(252,23,7)" rx="2" ry="2" />
<text  x="650.81" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>prb_read_valid (43,305,068 samples, 0.03%)</title><rect x="1180.4" y="133" width="0.4" height="15.0" fill="rgb(230,123,24)" rx="2" ry="2" />
<text  x="1183.40" y="143.5" ></text>
</g>
<g >
<title>ksys_read (52,937,108 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(248,195,1)" rx="2" ry="2" />
<text  x="1192.50" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18,865,353 samples, 0.01%)</title><rect x="1186.5" y="325" width="0.1" height="15.0" fill="rgb(218,118,40)" rx="2" ry="2" />
<text  x="1189.45" y="335.5" ></text>
</g>
<g >
<title>irq_work_run_list (209,761,700 samples, 0.17%)</title><rect x="1187.1" y="325" width="2.0" height="15.0" fill="rgb(225,24,29)" rx="2" ry="2" />
<text  x="1190.12" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (57,666,291,677 samples, 45.66%)</title><rect x="647.9" y="421" width="538.9" height="15.0" fill="rgb(217,137,32)" rx="2" ry="2" />
<text  x="650.92" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,579,026,483 samples, 45.60%)</title><rect x="648.7" y="389" width="538.0" height="15.0" fill="rgb(219,17,7)" rx="2" ry="2" />
<text  x="651.67" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (90,223,569 samples, 0.07%)</title><rect x="990.5" y="197" width="0.9" height="15.0" fill="rgb(242,4,50)" rx="2" ry="2" />
<text  x="993.52" y="207.5" ></text>
</g>
<g >
<title>update_process_times (222,823,134 samples, 0.18%)</title><rect x="1187.1" y="357" width="2.1" height="15.0" fill="rgb(253,70,48)" rx="2" ry="2" />
<text  x="1190.09" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,733,887,589 samples, 45.72%)</title><rect x="647.4" y="469" width="539.5" height="15.0" fill="rgb(216,44,35)" rx="2" ry="2" />
<text  x="650.44" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>sync_regs (18,020,434 samples, 0.01%)</title><rect x="1189.3" y="469" width="0.2" height="15.0" fill="rgb(215,209,3)" rx="2" ry="2" />
<text  x="1192.33" y="479.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (47,686,819 samples, 0.04%)</title><rect x="1180.4" y="165" width="0.4" height="15.0" fill="rgb(224,207,21)" rx="2" ry="2" />
<text  x="1183.38" y="175.5" ></text>
</g>
<g >
<title>prb_read_valid (75,302,234 samples, 0.06%)</title><rect x="990.6" y="85" width="0.7" height="15.0" fill="rgb(224,95,37)" rx="2" ry="2" />
<text  x="993.56" y="95.5" ></text>
</g>
<g >
<title>update_process_times (52,418,760 samples, 0.04%)</title><rect x="1180.4" y="229" width="0.5" height="15.0" fill="rgb(249,35,11)" rx="2" ry="2" />
<text  x="1183.37" y="239.5" ></text>
</g>
<g >
<title>free_pcp_prepare (56,585,855 samples, 0.04%)</title><rect x="10.6" y="245" width="0.5" height="15.0" fill="rgb(228,3,8)" rx="2" ry="2" />
<text  x="13.58" y="255.5" ></text>
</g>
<g >
<title>uncharge_batch (15,138,873 samples, 0.01%)</title><rect x="11.9" y="197" width="0.1" height="15.0" fill="rgb(223,113,23)" rx="2" ry="2" />
<text  x="14.87" y="207.5" ></text>
</g>
<g >
<title>__free_pages (22,698,031 samples, 0.02%)</title><rect x="11.2" y="309" width="0.2" height="15.0" fill="rgb(219,10,16)" rx="2" ry="2" />
<text  x="14.17" y="319.5" ></text>
</g>
<g >
<title>unmap_region (558,226,875 samples, 0.44%)</title><rect x="10.5" y="389" width="5.2" height="15.0" fill="rgb(241,195,41)" rx="2" ry="2" />
<text  x="13.51" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (52,673,420 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(230,2,37)" rx="2" ry="2" />
<text  x="1192.50" y="399.5" ></text>
</g>
<g >
<title>try_charge_memcg (17,122,757 samples, 0.01%)</title><rect x="1186.2" y="293" width="0.2" height="15.0" fill="rgb(236,118,34)" rx="2" ry="2" />
<text  x="1189.23" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,647,258,732 samples, 45.65%)</title><rect x="648.1" y="405" width="538.6" height="15.0" fill="rgb(235,99,12)" rx="2" ry="2" />
<text  x="651.05" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>get_page_from_freelist (37,433,989,093 samples, 29.64%)</title><rect x="650.3" y="341" width="349.8" height="15.0" fill="rgb(243,216,31)" rx="2" ry="2" />
<text  x="653.32" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>irq_work_tick (80,917,844 samples, 0.06%)</title><rect x="990.5" y="165" width="0.8" height="15.0" fill="rgb(244,3,39)" rx="2" ry="2" />
<text  x="993.53" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (52,506,351 samples, 0.04%)</title><rect x="1180.4" y="245" width="0.5" height="15.0" fill="rgb(218,76,8)" rx="2" ry="2" />
<text  x="1183.37" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (20,783,857 samples, 0.02%)</title><rect x="1185.3" y="373" width="0.2" height="15.0" fill="rgb(213,142,11)" rx="2" ry="2" />
<text  x="1188.30" y="383.5" ></text>
</g>
<g >
<title>raw_pci_read (49,434,128 samples, 0.04%)</title><rect x="1189.5" y="293" width="0.5" height="15.0" fill="rgb(235,52,6)" rx="2" ry="2" />
<text  x="1192.53" y="303.5" ></text>
</g>
<g >
<title>memcpy_erms (12,800,880 samples, 0.01%)</title><rect x="1180.7" y="117" width="0.1" height="15.0" fill="rgb(234,217,52)" rx="2" ry="2" />
<text  x="1183.69" y="127.5" ></text>
</g>
<g >
<title>pci_conf1_read (49,346,372 samples, 0.04%)</title><rect x="1189.5" y="277" width="0.5" height="15.0" fill="rgb(233,40,45)" rx="2" ry="2" />
<text  x="1192.53" y="287.5" ></text>
</g>
<g >
<title>get_data.isra.0 (15,915,093 samples, 0.01%)</title><rect x="1188.4" y="229" width="0.1" height="15.0" fill="rgb(227,131,25)" rx="2" ry="2" />
<text  x="1191.37" y="239.5" ></text>
</g>
<g >
<title>free_pcp_prepare (387,232,479 samples, 0.31%)</title><rect x="12.0" y="197" width="3.7" height="15.0" fill="rgb(244,55,17)" rx="2" ry="2" />
<text  x="15.03" y="207.5" ></text>
</g>
<g >
<title>__do_munmap (558,316,751 samples, 0.44%)</title><rect x="10.5" y="405" width="5.2" height="15.0" fill="rgb(221,83,2)" rx="2" ry="2" />
<text  x="13.50" y="415.5" ></text>
</g>
<g >
<title>unmap_vmas (492,285,335 samples, 0.39%)</title><rect x="11.1" y="373" width="4.6" height="15.0" fill="rgb(209,83,37)" rx="2" ry="2" />
<text  x="14.12" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (102,071,561 samples, 0.08%)</title><rect x="990.5" y="277" width="0.9" height="15.0" fill="rgb(212,139,11)" rx="2" ry="2" />
<text  x="993.45" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (58,641,874 samples, 0.05%)</title><rect x="1180.3" y="325" width="0.6" height="15.0" fill="rgb(215,129,8)" rx="2" ry="2" />
<text  x="1183.33" y="335.5" ></text>
</g>
<g >
<title>free_transhuge_page (61,129,136 samples, 0.05%)</title><rect x="10.5" y="293" width="0.6" height="15.0" fill="rgb(223,28,22)" rx="2" ry="2" />
<text  x="13.55" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (558,316,751 samples, 0.44%)</title><rect x="10.5" y="453" width="5.2" height="15.0" fill="rgb(206,66,52)" rx="2" ry="2" />
<text  x="13.50" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37,459,324,341 samples, 29.66%)</title><rect x="650.1" y="373" width="350.0" height="15.0" fill="rgb(245,194,47)" rx="2" ry="2" />
<text  x="653.12" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>pci_read (49,522,067 samples, 0.04%)</title><rect x="1189.5" y="309" width="0.5" height="15.0" fill="rgb(244,120,49)" rx="2" ry="2" />
<text  x="1192.53" y="319.5" ></text>
</g>
<g >
<title>path_openat (15,127,155 samples, 0.01%)</title><rect x="10.1" y="357" width="0.2" height="15.0" fill="rgb(249,128,29)" rx="2" ry="2" />
<text  x="13.13" y="367.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,186,292 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(253,58,19)" rx="2" ry="2" />
<text  x="1192.52" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (240,391,366 samples, 0.19%)</title><rect x="1187.0" y="437" width="2.2" height="15.0" fill="rgb(223,71,0)" rx="2" ry="2" />
<text  x="1189.96" y="447.5" ></text>
</g>
<g >
<title>irq_work_single (209,405,286 samples, 0.17%)</title><rect x="1187.1" y="309" width="2.0" height="15.0" fill="rgb(212,228,6)" rx="2" ry="2" />
<text  x="1190.12" y="319.5" ></text>
</g>
<g >
<title>prb_read_valid (195,280,532 samples, 0.15%)</title><rect x="1187.2" y="261" width="1.8" height="15.0" fill="rgb(233,54,29)" rx="2" ry="2" />
<text  x="1190.20" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (57,765,397 samples, 0.05%)</title><rect x="1180.3" y="293" width="0.6" height="15.0" fill="rgb(252,73,1)" rx="2" ry="2" />
<text  x="1183.33" y="303.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,673,420 samples, 0.04%)</title><rect x="1189.5" y="373" width="0.5" height="15.0" fill="rgb(238,8,42)" rx="2" ry="2" />
<text  x="1192.50" y="383.5" ></text>
</g>
<g >
<title>free_unref_page (11,533,929 samples, 0.01%)</title><rect x="11.3" y="293" width="0.1" height="15.0" fill="rgb(243,200,46)" rx="2" ry="2" />
<text  x="14.27" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (102,071,561 samples, 0.08%)</title><rect x="990.5" y="293" width="0.9" height="15.0" fill="rgb(214,18,36)" rx="2" ry="2" />
<text  x="993.45" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (100,228,778 samples, 0.08%)</title><rect x="990.5" y="261" width="0.9" height="15.0" fill="rgb(239,145,2)" rx="2" ry="2" />
<text  x="993.45" y="271.5" ></text>
</g>
<g >
<title>do_filp_open (15,214,677 samples, 0.01%)</title><rect x="10.1" y="373" width="0.2" height="15.0" fill="rgb(213,103,35)" rx="2" ry="2" />
<text  x="13.13" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (95,578,043 samples, 0.08%)</title><rect x="990.5" y="213" width="0.9" height="15.0" fill="rgb(224,212,20)" rx="2" ry="2" />
<text  x="993.47" y="223.5" ></text>
</g>
<g >
<title>lru_cache_add (20,609,001 samples, 0.02%)</title><rect x="1185.3" y="357" width="0.2" height="15.0" fill="rgb(238,120,32)" rx="2" ry="2" />
<text  x="1188.30" y="367.5" ></text>
</g>
<g >
<title>__put_compound_page (437,180,627 samples, 0.35%)</title><rect x="11.6" y="261" width="4.1" height="15.0" fill="rgb(226,42,1)" rx="2" ry="2" />
<text  x="14.63" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (58,641,874 samples, 0.05%)</title><rect x="1180.3" y="341" width="0.6" height="15.0" fill="rgb(205,5,9)" rx="2" ry="2" />
<text  x="1183.33" y="351.5" ></text>
</g>
<g >
<title>clear_subpage (19,514,372 samples, 0.02%)</title><rect x="1185.1" y="373" width="0.2" height="15.0" fill="rgb(238,168,39)" rx="2" ry="2" />
<text  x="1188.11" y="383.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,868,048 samples, 0.01%)</title><rect x="1187.0" y="373" width="0.1" height="15.0" fill="rgb(249,16,31)" rx="2" ry="2" />
<text  x="1189.98" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (558,316,751 samples, 0.44%)</title><rect x="10.5" y="437" width="5.2" height="15.0" fill="rgb(231,226,30)" rx="2" ry="2" />
<text  x="13.50" y="447.5" ></text>
</g>
<g >
<title>update_process_times (90,223,569 samples, 0.07%)</title><rect x="990.5" y="181" width="0.9" height="15.0" fill="rgb(230,211,14)" rx="2" ry="2" />
<text  x="993.52" y="191.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (19,734,697 samples, 0.02%)</title><rect x="1185.3" y="341" width="0.2" height="15.0" fill="rgb(233,229,6)" rx="2" ry="2" />
<text  x="1188.31" y="351.5" ></text>
</g>
<g >
<title>clear_huge_page (19,794,928,920 samples, 15.68%)</title><rect x="1000.1" y="373" width="185.0" height="15.0" fill="rgb(224,30,12)" rx="2" ry="2" />
<text  x="1003.15" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>exc_page_fault (57,695,478,964 samples, 45.69%)</title><rect x="647.8" y="453" width="539.1" height="15.0" fill="rgb(230,66,4)" rx="2" ry="2" />
<text  x="650.79" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>alloc_pages (101,767,410 samples, 0.08%)</title><rect x="1185.7" y="357" width="1.0" height="15.0" fill="rgb(205,166,2)" rx="2" ry="2" />
<text  x="1188.74" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (99,263,212 samples, 0.08%)</title><rect x="990.5" y="245" width="0.9" height="15.0" fill="rgb(243,149,18)" rx="2" ry="2" />
<text  x="993.46" y="255.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (209,138,810 samples, 0.17%)</title><rect x="1187.1" y="293" width="2.0" height="15.0" fill="rgb(254,75,6)" rx="2" ry="2" />
<text  x="1190.12" y="303.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (16,416,163 samples, 0.01%)</title><rect x="990.8" y="53" width="0.2" height="15.0" fill="rgb(254,171,42)" rx="2" ry="2" />
<text  x="993.82" y="63.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (439,675,419 samples, 0.35%)</title><rect x="11.6" y="293" width="4.1" height="15.0" fill="rgb(236,40,53)" rx="2" ry="2" />
<text  x="14.60" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (58,116,209 samples, 0.05%)</title><rect x="1180.3" y="309" width="0.6" height="15.0" fill="rgb(213,30,3)" rx="2" ry="2" />
<text  x="1183.33" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (52,937,108 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(254,93,31)" rx="2" ry="2" />
<text  x="1192.50" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (36,463,557,405 samples, 28.87%)</title><rect x="650.7" y="309" width="340.7" height="15.0" fill="rgb(248,44,5)" rx="2" ry="2" />
<text  x="653.70" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>clear_page_erms (19,220,732,220 samples, 15.22%)</title><rect x="1001.3" y="357" width="179.6" height="15.0" fill="rgb(235,227,21)" rx="2" ry="2" />
<text  x="1004.28" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>obj_cgroup_charge_pages (48,211,138 samples, 0.04%)</title><rect x="1185.9" y="309" width="0.5" height="15.0" fill="rgb(254,152,23)" rx="2" ry="2" />
<text  x="1188.94" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (243,063,566 samples, 0.19%)</title><rect x="1187.0" y="453" width="2.2" height="15.0" fill="rgb(226,227,8)" rx="2" ry="2" />
<text  x="1189.96" y="463.5" ></text>
</g>
<g >
<title>release_pages (439,497,256 samples, 0.35%)</title><rect x="11.6" y="277" width="4.1" height="15.0" fill="rgb(248,74,26)" rx="2" ry="2" />
<text  x="14.60" y="287.5" ></text>
</g>
<g >
<title>release_pages (64,602,372 samples, 0.05%)</title><rect x="10.5" y="325" width="0.6" height="15.0" fill="rgb(254,26,7)" rx="2" ry="2" />
<text  x="13.51" y="335.5" ></text>
</g>
<g >
<title>__vm_munmap (558,316,751 samples, 0.44%)</title><rect x="10.5" y="421" width="5.2" height="15.0" fill="rgb(229,92,25)" rx="2" ry="2" />
<text  x="13.50" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (558,316,751 samples, 0.44%)</title><rect x="10.5" y="469" width="5.2" height="15.0" fill="rgb(251,113,51)" rx="2" ry="2" />
<text  x="13.50" y="479.5" ></text>
</g>
<g >
<title>page_counter_try_charge (27,777,980 samples, 0.02%)</title><rect x="1186.0" y="293" width="0.2" height="15.0" fill="rgb(229,93,25)" rx="2" ry="2" />
<text  x="1188.95" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (236,013,798 samples, 0.19%)</title><rect x="1187.0" y="389" width="2.2" height="15.0" fill="rgb(251,157,46)" rx="2" ry="2" />
<text  x="1189.97" y="399.5" ></text>
</g>
<g >
<title>console_unlock (201,630,932 samples, 0.16%)</title><rect x="1187.1" y="277" width="1.9" height="15.0" fill="rgb(234,205,19)" rx="2" ry="2" />
<text  x="1190.14" y="287.5" ></text>
</g>
<g >
<title>pci_user_read_config_dword (50,572,543 samples, 0.04%)</title><rect x="1189.5" y="325" width="0.5" height="15.0" fill="rgb(220,68,54)" rx="2" ry="2" />
<text  x="1192.52" y="335.5" ></text>
</g>
<g >
<title>zap_huge_pmd (490,946,106 samples, 0.39%)</title><rect x="11.1" y="325" width="4.6" height="15.0" fill="rgb(225,33,48)" rx="2" ry="2" />
<text  x="14.13" y="335.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (80,215,959 samples, 0.06%)</title><rect x="990.5" y="117" width="0.8" height="15.0" fill="rgb(227,20,8)" rx="2" ry="2" />
<text  x="993.54" y="127.5" ></text>
</g>
<g >
<title>memcpy_erms (48,689,941 samples, 0.04%)</title><rect x="1188.6" y="245" width="0.4" height="15.0" fill="rgb(219,93,40)" rx="2" ry="2" />
<text  x="1191.57" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (56,537,520 samples, 0.04%)</title><rect x="1180.3" y="261" width="0.6" height="15.0" fill="rgb(229,127,22)" rx="2" ry="2" />
<text  x="1183.33" y="271.5" ></text>
</g>
<g >
<title>page_counter_try_charge (12,581,122 samples, 0.01%)</title><rect x="649.9" y="325" width="0.1" height="15.0" fill="rgb(246,85,42)" rx="2" ry="2" />
<text  x="652.86" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (54,700,245 samples, 0.04%)</title><rect x="648.1" y="389" width="0.5" height="15.0" fill="rgb(239,78,41)" rx="2" ry="2" />
<text  x="651.13" y="399.5" ></text>
</g>
<g >
<title>pci_read_config (51,186,292 samples, 0.04%)</title><rect x="1189.5" y="341" width="0.5" height="15.0" fill="rgb(243,195,26)" rx="2" ry="2" />
<text  x="1192.52" y="351.5" ></text>
</g>
<g >
<title>free_transhuge_page (419,452,679 samples, 0.33%)</title><rect x="11.8" y="245" width="3.9" height="15.0" fill="rgb(238,111,27)" rx="2" ry="2" />
<text  x="14.79" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (223,714,515 samples, 0.18%)</title><rect x="1187.1" y="373" width="2.1" height="15.0" fill="rgb(253,156,35)" rx="2" ry="2" />
<text  x="1190.09" y="383.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (434,964,379 samples, 0.34%)</title><rect x="991.4" y="309" width="4.1" height="15.0" fill="rgb(217,98,31)" rx="2" ry="2" />
<text  x="994.42" y="319.5" ></text>
</g>
<g >
<title>__put_compound_page (64,161,604 samples, 0.05%)</title><rect x="10.5" y="309" width="0.6" height="15.0" fill="rgb(216,218,0)" rx="2" ry="2" />
<text  x="13.52" y="319.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (68,837,668 samples, 0.05%)</title><rect x="1185.8" y="325" width="0.6" height="15.0" fill="rgb(252,79,39)" rx="2" ry="2" />
<text  x="1188.76" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (239,680,112 samples, 0.19%)</title><rect x="1187.0" y="421" width="2.2" height="15.0" fill="rgb(205,200,54)" rx="2" ry="2" />
<text  x="1189.97" y="431.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (11,628,797 samples, 0.01%)</title><rect x="1185.5" y="373" width="0.1" height="15.0" fill="rgb(250,207,31)" rx="2" ry="2" />
<text  x="1188.50" y="383.5" ></text>
</g>
<g >
<title>prep_compound_page (477,627,172 samples, 0.38%)</title><rect x="995.5" y="309" width="4.4" height="15.0" fill="rgb(254,174,12)" rx="2" ry="2" />
<text  x="998.48" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (96,279,592 samples, 0.08%)</title><rect x="990.5" y="229" width="0.9" height="15.0" fill="rgb(230,105,7)" rx="2" ry="2" />
<text  x="993.46" y="239.5" ></text>
</g>
<g >
<title>irq_work_single (47,862,125 samples, 0.04%)</title><rect x="1180.4" y="181" width="0.4" height="15.0" fill="rgb(251,0,34)" rx="2" ry="2" />
<text  x="1183.38" y="191.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (65,224,845 samples, 0.05%)</title><rect x="10.5" y="357" width="0.6" height="15.0" fill="rgb(229,163,5)" rx="2" ry="2" />
<text  x="13.51" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (64,691,789 samples, 0.05%)</title><rect x="10.5" y="341" width="0.6" height="15.0" fill="rgb(218,145,25)" rx="2" ry="2" />
<text  x="13.51" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (13,021,364 samples, 0.01%)</title><rect x="650.0" y="357" width="0.1" height="15.0" fill="rgb(210,74,20)" rx="2" ry="2" />
<text  x="652.98" y="367.5" ></text>
</g>
<g >
<title>__GI___openat64 (16,700,404 samples, 0.01%)</title><rect x="10.1" y="469" width="0.2" height="15.0" fill="rgb(245,190,41)" rx="2" ry="2" />
<text  x="13.13" y="479.5" ></text>
</g>
<g >
<title>rmqueue_bulk (17,035,930 samples, 0.01%)</title><rect x="999.9" y="325" width="0.2" height="15.0" fill="rgb(236,68,48)" rx="2" ry="2" />
<text  x="1002.95" y="335.5" ></text>
</g>
<g >
<title>irq_work_single (80,742,777 samples, 0.06%)</title><rect x="990.5" y="133" width="0.8" height="15.0" fill="rgb(219,38,8)" rx="2" ry="2" />
<text  x="993.53" y="143.5" ></text>
</g>
<g >
<title>__cond_resched (36,906,346 samples, 0.03%)</title><rect x="1000.9" y="357" width="0.3" height="15.0" fill="rgb(233,97,26)" rx="2" ry="2" />
<text  x="1003.88" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (236,459,489 samples, 0.19%)</title><rect x="1187.0" y="405" width="2.2" height="15.0" fill="rgb(238,210,22)" rx="2" ry="2" />
<text  x="1189.97" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,524,327 samples, 0.01%)</title><rect x="10.1" y="453" width="0.2" height="15.0" fill="rgb(209,185,51)" rx="2" ry="2" />
<text  x="13.13" y="463.5" ></text>
</g>
<g >
<title>desc_read (12,379,137 samples, 0.01%)</title><rect x="990.9" y="37" width="0.1" height="15.0" fill="rgb(206,25,23)" rx="2" ry="2" />
<text  x="993.86" y="47.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (39,508,251 samples, 0.03%)</title><rect x="649.7" y="373" width="0.4" height="15.0" fill="rgb(219,162,26)" rx="2" ry="2" />
<text  x="652.74" y="383.5" ></text>
</g>
<g >
<title>memcpy_erms (22,640,211 samples, 0.02%)</title><rect x="991.1" y="69" width="0.2" height="15.0" fill="rgb(218,61,0)" rx="2" ry="2" />
<text  x="994.05" y="79.5" ></text>
</g>
<g >
<title>clear_subpage (360,307,941 samples, 0.29%)</title><rect x="1180.9" y="357" width="3.3" height="15.0" fill="rgb(207,11,13)" rx="2" ry="2" />
<text  x="1183.88" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (492,106,305 samples, 0.39%)</title><rect x="11.1" y="341" width="4.6" height="15.0" fill="rgb(242,168,1)" rx="2" ry="2" />
<text  x="14.12" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (92,266,190 samples, 0.07%)</title><rect x="1184.2" y="357" width="0.9" height="15.0" fill="rgb(215,188,45)" rx="2" ry="2" />
<text  x="1187.25" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (57,567,979 samples, 0.05%)</title><rect x="10.6" y="261" width="0.5" height="15.0" fill="rgb(250,150,20)" rx="2" ry="2" />
<text  x="13.58" y="271.5" ></text>
</g>
<g >
<title>page_remove_rmap (18,844,711 samples, 0.01%)</title><rect x="11.4" y="309" width="0.2" height="15.0" fill="rgb(231,221,5)" rx="2" ry="2" />
<text  x="14.42" y="319.5" ></text>
</g>
<g >
<title>prep_new_page (37,392,646,607 samples, 29.61%)</title><rect x="650.5" y="325" width="349.4" height="15.0" fill="rgb(224,126,25)" rx="2" ry="2" />
<text  x="653.54" y="335.5" >prep_new_page</text>
</g>
<g >
<title>_prb_read_valid (49,503,601 samples, 0.04%)</title><rect x="990.6" y="69" width="0.4" height="15.0" fill="rgb(232,209,33)" rx="2" ry="2" />
<text  x="993.57" y="79.5" ></text>
</g>
<g >
<title>irq_work_run_list (80,917,844 samples, 0.06%)</title><rect x="990.5" y="149" width="0.8" height="15.0" fill="rgb(243,88,43)" rx="2" ry="2" />
<text  x="993.53" y="159.5" ></text>
</g>
<g >
<title>free_compound_page (59,880,997 samples, 0.05%)</title><rect x="10.6" y="277" width="0.5" height="15.0" fill="rgb(235,93,10)" rx="2" ry="2" />
<text  x="13.56" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (56,800,726 samples, 0.04%)</title><rect x="1180.3" y="277" width="0.6" height="15.0" fill="rgb(209,21,22)" rx="2" ry="2" />
<text  x="1183.33" y="287.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,265,602 samples, 0.01%)</title><rect x="10.1" y="389" width="0.2" height="15.0" fill="rgb(235,23,45)" rx="2" ry="2" />
<text  x="13.13" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (492,285,335 samples, 0.39%)</title><rect x="11.1" y="357" width="4.6" height="15.0" fill="rgb(220,229,49)" rx="2" ry="2" />
<text  x="14.12" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,937,108 samples, 0.04%)</title><rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(206,28,33)" rx="2" ry="2" />
<text  x="1192.50" y="463.5" ></text>
</g>
<g >
<title>[unknown] (38,768,631 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(207,183,36)" rx="2" ry="2" />
<text  x="13.02" y="495.5" ></text>
</g>
<g >
<title>gups_vanilla (126,282,461,903 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(238,196,28)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>_prb_read_valid (139,170,760 samples, 0.11%)</title><rect x="1187.2" y="245" width="1.3" height="15.0" fill="rgb(241,167,52)" rx="2" ry="2" />
<text  x="1190.22" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (440,826,705 samples, 0.35%)</title><rect x="11.6" y="309" width="4.1" height="15.0" fill="rgb(216,45,23)" rx="2" ry="2" />
<text  x="14.60" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,784,819 samples, 0.01%)</title><rect x="650.6" y="309" width="0.1" height="15.0" fill="rgb(249,56,34)" rx="2" ry="2" />
<text  x="653.57" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (17,012,633 samples, 0.01%)</title><rect x="11.9" y="213" width="0.1" height="15.0" fill="rgb(250,201,28)" rx="2" ry="2" />
<text  x="14.87" y="223.5" ></text>
</g>
<g >
<title>__munmap (558,316,751 samples, 0.44%)</title><rect x="10.5" y="485" width="5.2" height="15.0" fill="rgb(234,58,40)" rx="2" ry="2" />
<text  x="13.50" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (248,147,359 samples, 0.20%)</title><rect x="1186.9" y="469" width="2.3" height="15.0" fill="rgb(227,6,13)" rx="2" ry="2" />
<text  x="1189.91" y="479.5" ></text>
</g>
<g >
<title>irq_work_tick (48,125,019 samples, 0.04%)</title><rect x="1180.4" y="213" width="0.4" height="15.0" fill="rgb(248,115,27)" rx="2" ry="2" />
<text  x="1183.37" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (98,097,332 samples, 0.08%)</title><rect x="1185.7" y="341" width="1.0" height="15.0" fill="rgb(246,43,3)" rx="2" ry="2" />
<text  x="1188.75" y="351.5" ></text>
</g>
<g >
<title>console_unlock (77,320,470 samples, 0.06%)</title><rect x="990.5" y="101" width="0.8" height="15.0" fill="rgb(230,71,22)" rx="2" ry="2" />
<text  x="993.54" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (53,201,278 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(219,22,17)" rx="2" ry="2" />
<text  x="1192.50" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages (37,450,002,646 samples, 29.66%)</title><rect x="650.2" y="357" width="349.9" height="15.0" fill="rgb(244,162,21)" rx="2" ry="2" />
<text  x="653.17" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>__cond_resched (85,270,848 samples, 0.07%)</title><rect x="648.9" y="373" width="0.8" height="15.0" fill="rgb(229,150,41)" rx="2" ry="2" />
<text  x="651.92" y="383.5" ></text>
</g>
<g >
<title>desc_read (32,653,629 samples, 0.03%)</title><rect x="1188.1" y="213" width="0.3" height="15.0" fill="rgb(235,136,33)" rx="2" ry="2" />
<text  x="1191.07" y="223.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (65,224,845 samples, 0.05%)</title><rect x="10.5" y="373" width="0.6" height="15.0" fill="rgb(234,182,23)" rx="2" ry="2" />
<text  x="13.51" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,265,602 samples, 0.01%)</title><rect x="10.1" y="421" width="0.2" height="15.0" fill="rgb(233,111,23)" rx="2" ry="2" />
<text  x="13.13" y="431.5" ></text>
</g>
<g >
<title>all (126,282,461,903 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(222,76,8)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>pte_alloc_one (114,241,900 samples, 0.09%)</title><rect x="1185.6" y="373" width="1.1" height="15.0" fill="rgb(250,199,9)" rx="2" ry="2" />
<text  x="1188.63" y="383.5" ></text>
</g>
<g >
<title>console_unlock (45,145,709 samples, 0.04%)</title><rect x="1180.4" y="149" width="0.4" height="15.0" fill="rgb(230,191,49)" rx="2" ry="2" />
<text  x="1183.39" y="159.5" ></text>
</g>
<g >
<title>free_compound_page (411,435,616 samples, 0.33%)</title><rect x="11.9" y="229" width="3.8" height="15.0" fill="rgb(217,102,40)" rx="2" ry="2" />
<text  x="14.87" y="239.5" ></text>
</g>
<g >
<title>irq_work_tick (210,029,565 samples, 0.17%)</title><rect x="1187.1" y="341" width="2.0" height="15.0" fill="rgb(247,54,41)" rx="2" ry="2" />
<text  x="1190.11" y="351.5" ></text>
</g>
<g >
<title>free_unref_page (393,620,106 samples, 0.31%)</title><rect x="12.0" y="213" width="3.7" height="15.0" fill="rgb(224,104,2)" rx="2" ry="2" />
<text  x="15.03" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,524,327 samples, 0.01%)</title><rect x="10.1" y="437" width="0.2" height="15.0" fill="rgb(222,70,12)" rx="2" ry="2" />
<text  x="13.13" y="447.5" ></text>
</g>
<g >
<title>do_sys_open (16,265,602 samples, 0.01%)</title><rect x="10.1" y="405" width="0.2" height="15.0" fill="rgb(213,24,19)" rx="2" ry="2" />
<text  x="13.13" y="415.5" ></text>
</g>
</g>
</svg>
