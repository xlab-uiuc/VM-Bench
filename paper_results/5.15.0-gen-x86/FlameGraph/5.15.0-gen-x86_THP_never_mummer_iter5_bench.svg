<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>insertleaf (155,494,688 samples, 0.06%)</title><rect x="55.8" y="309" width="0.7" height="15.0" fill="rgb(229,172,31)" rx="2" ry="2" />
<text  x="58.75" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (28,482,558 samples, 0.01%)</title><rect x="1130.7" y="165" width="0.2" height="15.0" fill="rgb(242,0,8)" rx="2" ry="2" />
<text  x="1133.75" y="175.5" ></text>
</g>
<g >
<title>scanprefix (315,708,461 samples, 0.12%)</title><rect x="1130.9" y="325" width="1.5" height="15.0" fill="rgb(215,223,52)" rx="2" ry="2" />
<text  x="1133.91" y="335.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (50,001,345 samples, 0.02%)</title><rect x="18.2" y="85" width="0.2" height="15.0" fill="rgb(254,49,2)" rx="2" ry="2" />
<text  x="21.16" y="95.5" ></text>
</g>
<g >
<title>get_page_from_freelist (51,238,684 samples, 0.02%)</title><rect x="32.8" y="181" width="0.3" height="15.0" fill="rgb(211,98,45)" rx="2" ry="2" />
<text  x="35.84" y="191.5" ></text>
</g>
<g >
<title>linklocstree (474,971,342 samples, 0.19%)</title><rect x="1089.2" y="325" width="2.2" height="15.0" fill="rgb(217,187,37)" rx="2" ry="2" />
<text  x="1092.22" y="335.5" ></text>
</g>
<g >
<title>copy_page (66,633,168 samples, 0.03%)</title><rect x="523.1" y="181" width="0.3" height="15.0" fill="rgb(233,55,22)" rx="2" ry="2" />
<text  x="526.10" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (150,859,886 samples, 0.06%)</title><rect x="522.9" y="277" width="0.7" height="15.0" fill="rgb(219,120,29)" rx="2" ry="2" />
<text  x="525.94" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (62,730,785 samples, 0.02%)</title><rect x="32.8" y="213" width="0.3" height="15.0" fill="rgb(233,227,3)" rx="2" ry="2" />
<text  x="35.80" y="223.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (26,632,854 samples, 0.01%)</title><rect x="16.8" y="117" width="0.1" height="15.0" fill="rgb(224,181,48)" rx="2" ry="2" />
<text  x="19.76" y="127.5" ></text>
</g>
<g >
<title>do_user_addr_fault (349,978,674 samples, 0.14%)</title><rect x="31.8" y="261" width="1.6" height="15.0" fill="rgb(214,158,7)" rx="2" ry="2" />
<text  x="34.80" y="271.5" ></text>
</g>
<g >
<title>ext4_write_checks (67,382,875 samples, 0.03%)</title><rect x="16.1" y="165" width="0.3" height="15.0" fill="rgb(242,110,44)" rx="2" ry="2" />
<text  x="19.08" y="175.5" ></text>
</g>
<g >
<title>update_process_times (43,576,857 samples, 0.02%)</title><rect x="575.4" y="181" width="0.2" height="15.0" fill="rgb(229,146,17)" rx="2" ry="2" />
<text  x="578.35" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (148,523,238 samples, 0.06%)</title><rect x="522.9" y="261" width="0.7" height="15.0" fill="rgb(253,84,28)" rx="2" ry="2" />
<text  x="525.94" y="271.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (28,482,558 samples, 0.01%)</title><rect x="1130.7" y="133" width="0.2" height="15.0" fill="rgb(235,94,51)" rx="2" ry="2" />
<text  x="1133.75" y="143.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (142,916,439 samples, 0.06%)</title><rect x="32.1" y="213" width="0.7" height="15.0" fill="rgb(238,101,24)" rx="2" ry="2" />
<text  x="35.13" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (45,541,259 samples, 0.02%)</title><rect x="575.3" y="213" width="0.3" height="15.0" fill="rgb(222,29,45)" rx="2" ry="2" />
<text  x="578.34" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (43,665,454 samples, 0.02%)</title><rect x="1181.2" y="293" width="0.2" height="15.0" fill="rgb(232,2,20)" rx="2" ry="2" />
<text  x="1184.21" y="303.5" ></text>
</g>
<g >
<title>scanprefixstree (1,432,342,177 samples, 0.56%)</title><rect x="1181.4" y="325" width="6.6" height="15.0" fill="rgb(245,124,13)" rx="2" ry="2" />
<text  x="1184.41" y="335.5" ></text>
</g>
<g >
<title>pos2pospair (43,292,380 samples, 0.02%)</title><rect x="12.5" y="293" width="0.2" height="15.0" fill="rgb(231,22,8)" rx="2" ry="2" />
<text  x="15.50" y="303.5" ></text>
</g>
<g >
<title>prb_read_valid (26,517,993 samples, 0.01%)</title><rect x="1130.8" y="101" width="0.1" height="15.0" fill="rgb(233,200,42)" rx="2" ry="2" />
<text  x="1133.75" y="111.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (31,196,560 samples, 0.01%)</title><rect x="18.2" y="69" width="0.1" height="15.0" fill="rgb(210,37,39)" rx="2" ry="2" />
<text  x="21.17" y="79.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (329,871,871 samples, 0.13%)</title><rect x="516.2" y="117" width="1.5" height="15.0" fill="rgb(227,155,11)" rx="2" ry="2" />
<text  x="519.18" y="127.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (59,190,802 samples, 0.02%)</title><rect x="16.1" y="69" width="0.3" height="15.0" fill="rgb(217,111,0)" rx="2" ry="2" />
<text  x="19.12" y="79.5" ></text>
</g>
<g >
<title>tick_sched_timer (419,197,069 samples, 0.16%)</title><rect x="1071.5" y="213" width="2.0" height="15.0" fill="rgb(217,135,6)" rx="2" ry="2" />
<text  x="1074.53" y="223.5" ></text>
</g>
<g >
<title>wp_page_copy (114,671,800 samples, 0.04%)</title><rect x="523.0" y="197" width="0.5" height="15.0" fill="rgb(234,175,35)" rx="2" ry="2" />
<text  x="526.01" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (385,933,793 samples, 0.15%)</title><rect x="516.1" y="293" width="1.7" height="15.0" fill="rgb(212,215,5)" rx="2" ry="2" />
<text  x="519.06" y="303.5" ></text>
</g>
<g >
<title>irq_work_tick (28,482,558 samples, 0.01%)</title><rect x="1130.7" y="181" width="0.2" height="15.0" fill="rgb(240,77,51)" rx="2" ry="2" />
<text  x="1133.75" y="191.5" ></text>
</g>
<g >
<title>irq_work_run_list (38,131,750 samples, 0.01%)</title><rect x="1181.2" y="165" width="0.2" height="15.0" fill="rgb(223,229,45)" rx="2" ry="2" />
<text  x="1184.22" y="175.5" ></text>
</g>
<g >
<title>getrecordnum.part.0 (58,874,913 samples, 0.02%)</title><rect x="12.2" y="293" width="0.3" height="15.0" fill="rgb(244,209,46)" rx="2" ry="2" />
<text  x="15.23" y="303.5" ></text>
</g>
<g >
<title>_IO_putc (367,045,929 samples, 0.14%)</title><rect x="14.1" y="309" width="1.7" height="15.0" fill="rgb(213,73,17)" rx="2" ry="2" />
<text  x="17.10" y="319.5" ></text>
</g>
<g >
<title>create_empty_buffers (37,508,593 samples, 0.01%)</title><rect x="16.6" y="117" width="0.2" height="15.0" fill="rgb(211,168,52)" rx="2" ry="2" />
<text  x="19.59" y="127.5" ></text>
</g>
<g >
<title>get_data.isra.0 (24,109,627 samples, 0.01%)</title><rect x="517.2" y="53" width="0.2" height="15.0" fill="rgb(216,87,21)" rx="2" ry="2" />
<text  x="520.24" y="63.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,027,797,254 samples, 0.40%)</title><rect x="1076.3" y="309" width="4.8" height="15.0" fill="rgb(244,95,42)" rx="2" ry="2" />
<text  x="1079.34" y="319.5" ></text>
</g>
<g >
<title>exc_page_fault (359,422,463 samples, 0.14%)</title><rect x="31.8" y="277" width="1.7" height="15.0" fill="rgb(233,50,0)" rx="2" ry="2" />
<text  x="34.80" y="287.5" ></text>
</g>
<g >
<title>_prb_read_valid (27,505,827 samples, 0.01%)</title><rect x="1181.2" y="85" width="0.2" height="15.0" fill="rgb(219,17,10)" rx="2" ry="2" />
<text  x="1184.23" y="95.5" ></text>
</g>
<g >
<title>rescanstree (96,502,652,778 samples, 37.74%)</title><rect x="72.6" y="309" width="445.3" height="15.0" fill="rgb(225,136,54)" rx="2" ry="2" />
<text  x="75.60" y="319.5" >rescanstree</text>
</g>
<g >
<title>irq_work_tick (40,271,278 samples, 0.02%)</title><rect x="575.4" y="165" width="0.1" height="15.0" fill="rgb(243,16,42)" rx="2" ry="2" />
<text  x="578.35" y="175.5" ></text>
</g>
<g >
<title>irq_work_tick (38,131,750 samples, 0.01%)</title><rect x="1181.2" y="181" width="0.2" height="15.0" fill="rgb(213,124,38)" rx="2" ry="2" />
<text  x="1184.22" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (32,142,559 samples, 0.01%)</title><rect x="1130.7" y="229" width="0.2" height="15.0" fill="rgb(211,163,31)" rx="2" ry="2" />
<text  x="1133.74" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (634,376,631 samples, 0.25%)</title><rect x="15.8" y="293" width="2.9" height="15.0" fill="rgb(238,13,1)" rx="2" ry="2" />
<text  x="18.81" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.isra.0 (37,786,715 samples, 0.01%)</title><rect x="32.2" y="181" width="0.2" height="15.0" fill="rgb(211,139,52)" rx="2" ry="2" />
<text  x="35.24" y="191.5" ></text>
</g>
<g >
<title>ksys_write (612,566,193 samples, 0.24%)</title><rect x="15.9" y="245" width="2.8" height="15.0" fill="rgb(232,150,18)" rx="2" ry="2" />
<text  x="18.88" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (427,142,459 samples, 0.17%)</title><rect x="1071.5" y="245" width="2.0" height="15.0" fill="rgb(206,223,41)" rx="2" ry="2" />
<text  x="1074.52" y="255.5" ></text>
</g>
<g >
<title>__printf_chk (1,655,860,256 samples, 0.65%)</title><rect x="1074.3" y="325" width="7.6" height="15.0" fill="rgb(220,223,46)" rx="2" ry="2" />
<text  x="1077.29" y="335.5" ></text>
</g>
<g >
<title>get_data.isra.0 (31,706,138 samples, 0.01%)</title><rect x="1072.8" y="53" width="0.2" height="15.0" fill="rgb(243,111,51)" rx="2" ry="2" />
<text  x="1075.81" y="63.5" ></text>
</g>
<g >
<title>rescan (8,544,793,438 samples, 3.34%)</title><rect x="1091.5" y="325" width="39.4" height="15.0" fill="rgb(247,121,0)" rx="2" ry="2" />
<text  x="1094.47" y="335.5" >res..</text>
</g>
<g >
<title>getbranchinfostree (3,457,933,616 samples, 1.35%)</title><rect x="39.8" y="309" width="16.0" height="15.0" fill="rgb(216,192,35)" rx="2" ry="2" />
<text  x="42.80" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (47,058,074 samples, 0.02%)</title><rect x="575.3" y="293" width="0.3" height="15.0" fill="rgb(237,77,39)" rx="2" ry="2" />
<text  x="578.34" y="303.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (542,391,385 samples, 0.21%)</title><rect x="16.1" y="181" width="2.5" height="15.0" fill="rgb(205,167,26)" rx="2" ry="2" />
<text  x="19.06" y="191.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (28,794,636 samples, 0.01%)</title><rect x="16.3" y="53" width="0.1" height="15.0" fill="rgb(216,28,28)" rx="2" ry="2" />
<text  x="19.26" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,686,396 samples, 0.01%)</title><rect x="56.3" y="229" width="0.1" height="15.0" fill="rgb(215,168,4)" rx="2" ry="2" />
<text  x="59.33" y="239.5" ></text>
</g>
<g >
<title>__count_memcg_events (29,145,364 samples, 0.01%)</title><rect x="32.3" y="165" width="0.1" height="15.0" fill="rgb(253,113,8)" rx="2" ry="2" />
<text  x="35.27" y="175.5" ></text>
</g>
<g >
<title>charge_memcg (92,307,065 samples, 0.04%)</title><rect x="32.1" y="197" width="0.5" height="15.0" fill="rgb(226,128,46)" rx="2" ry="2" />
<text  x="35.14" y="207.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (33,006,754 samples, 0.01%)</title><rect x="1074.1" y="165" width="0.2" height="15.0" fill="rgb(241,50,20)" rx="2" ry="2" />
<text  x="1077.13" y="175.5" ></text>
</g>
<g >
<title>scanprefixfromnodestree (107,923,948,132 samples, 42.20%)</title><rect x="575.6" y="309" width="497.9" height="15.0" fill="rgb(248,185,31)" rx="2" ry="2" />
<text  x="578.57" y="319.5" >scanprefixfromnodestree</text>
</g>
<g >
<title>__hrtimer_run_queues (32,410,579 samples, 0.01%)</title><rect x="1130.7" y="245" width="0.2" height="15.0" fill="rgb(227,10,44)" rx="2" ry="2" />
<text  x="1133.74" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (50,481,762 samples, 0.02%)</title><rect x="16.9" y="69" width="0.3" height="15.0" fill="rgb(232,157,45)" rx="2" ry="2" />
<text  x="19.93" y="79.5" ></text>
</g>
<g >
<title>linklocstree (1,610,479,499 samples, 0.63%)</title><rect x="56.5" y="309" width="7.4" height="15.0" fill="rgb(206,187,12)" rx="2" ry="2" />
<text  x="59.47" y="319.5" ></text>
</g>
<g >
<title>vfs_write (587,886,522 samples, 0.23%)</title><rect x="16.0" y="229" width="2.7" height="15.0" fill="rgb(237,202,25)" rx="2" ry="2" />
<text  x="18.99" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_end (127,116,808 samples, 0.05%)</title><rect x="18.0" y="149" width="0.6" height="15.0" fill="rgb(247,176,13)" rx="2" ry="2" />
<text  x="20.97" y="159.5" ></text>
</g>
<g >
<title>__munmap (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="325" width="0.3" height="15.0" fill="rgb(253,156,37)" rx="2" ry="2" />
<text  x="1076.95" y="335.5" ></text>
</g>
<g >
<title>unmap_vmas (65,917,283 samples, 0.03%)</title><rect x="1074.0" y="213" width="0.3" height="15.0" fill="rgb(205,79,22)" rx="2" ry="2" />
<text  x="1076.98" y="223.5" ></text>
</g>
<g >
<title>prep_new_page (24,691,279 samples, 0.01%)</title><rect x="32.9" y="165" width="0.1" height="15.0" fill="rgb(252,183,20)" rx="2" ry="2" />
<text  x="35.90" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (32,946,114 samples, 0.01%)</title><rect x="1130.7" y="277" width="0.2" height="15.0" fill="rgb(242,187,14)" rx="2" ry="2" />
<text  x="1133.74" y="287.5" ></text>
</g>
<g >
<title>irq_work_tick (378,121,889 samples, 0.15%)</title><rect x="1071.6" y="165" width="1.8" height="15.0" fill="rgb(228,165,13)" rx="2" ry="2" />
<text  x="1074.61" y="175.5" ></text>
</g>
<g >
<title>scanprefixfromnodestree (10,628,159,409 samples, 4.16%)</title><rect x="1132.4" y="325" width="49.0" height="15.0" fill="rgb(207,111,12)" rx="2" ry="2" />
<text  x="1135.37" y="335.5" >scan..</text>
</g>
<g >
<title>scanmultiplefastafile (1,266,604,912 samples, 0.50%)</title><rect x="517.9" y="309" width="5.8" height="15.0" fill="rgb(217,170,44)" rx="2" ry="2" />
<text  x="520.87" y="319.5" ></text>
</g>
<g >
<title>irq_work_single (38,131,750 samples, 0.01%)</title><rect x="1181.2" y="149" width="0.2" height="15.0" fill="rgb(217,116,44)" rx="2" ry="2" />
<text  x="1184.22" y="159.5" ></text>
</g>
<g >
<title>unmap_page_range (64,768,540 samples, 0.03%)</title><rect x="1074.0" y="181" width="0.3" height="15.0" fill="rgb(244,52,22)" rx="2" ry="2" />
<text  x="1076.98" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (40,006,287 samples, 0.02%)</title><rect x="1181.2" y="213" width="0.2" height="15.0" fill="rgb(244,109,29)" rx="2" ry="2" />
<text  x="1184.22" y="223.5" ></text>
</g>
<g >
<title>[mummer] (114,158,067 samples, 0.04%)</title><rect x="10.0" y="325" width="0.5" height="15.0" fill="rgb(225,10,52)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (30,700,611 samples, 0.01%)</title><rect x="18.4" y="85" width="0.2" height="15.0" fill="rgb(234,225,19)" rx="2" ry="2" />
<text  x="21.41" y="95.5" ></text>
</g>
<g >
<title>console_unlock (27,767,631 samples, 0.01%)</title><rect x="1130.7" y="117" width="0.2" height="15.0" fill="rgb(225,201,24)" rx="2" ry="2" />
<text  x="1133.75" y="127.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (59,902,811 samples, 0.02%)</title><rect x="16.1" y="85" width="0.3" height="15.0" fill="rgb(250,189,7)" rx="2" ry="2" />
<text  x="19.11" y="95.5" ></text>
</g>
<g >
<title>[mummer] (341,494,453 samples, 0.13%)</title><rect x="10.7" y="309" width="1.5" height="15.0" fill="rgb(224,58,11)" rx="2" ry="2" />
<text  x="13.66" y="319.5" ></text>
</g>
<g >
<title>file_update_time (64,007,494 samples, 0.03%)</title><rect x="16.1" y="133" width="0.3" height="15.0" fill="rgb(207,224,6)" rx="2" ry="2" />
<text  x="19.10" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (32,856,577 samples, 0.01%)</title><rect x="1130.7" y="261" width="0.2" height="15.0" fill="rgb(239,117,38)" rx="2" ry="2" />
<text  x="1133.74" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (367,544,163 samples, 0.14%)</title><rect x="516.1" y="213" width="1.7" height="15.0" fill="rgb(209,170,37)" rx="2" ry="2" />
<text  x="519.10" y="223.5" ></text>
</g>
<g >
<title>showsequencedescription.isra.0 (371,491,789 samples, 0.15%)</title><rect x="1188.3" y="325" width="1.7" height="15.0" fill="rgb(240,17,43)" rx="2" ry="2" />
<text  x="1191.29" y="335.5" ></text>
</g>
<g >
<title>desc_read (57,688,180 samples, 0.02%)</title><rect x="517.0" y="37" width="0.2" height="15.0" fill="rgb(249,100,2)" rx="2" ry="2" />
<text  x="519.97" y="47.5" ></text>
</g>
<g >
<title>irq_work_single (330,496,327 samples, 0.13%)</title><rect x="516.2" y="133" width="1.5" height="15.0" fill="rgb(218,207,39)" rx="2" ry="2" />
<text  x="519.18" y="143.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (25,389,944 samples, 0.01%)</title><rect x="33.1" y="181" width="0.1" height="15.0" fill="rgb(229,148,26)" rx="2" ry="2" />
<text  x="36.13" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="293" width="0.3" height="15.0" fill="rgb(237,33,44)" rx="2" ry="2" />
<text  x="1076.95" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="309" width="0.3" height="15.0" fill="rgb(254,148,12)" rx="2" ry="2" />
<text  x="1076.95" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (236,732,862 samples, 0.09%)</title><rect x="516.3" y="69" width="1.1" height="15.0" fill="rgb(246,213,14)" rx="2" ry="2" />
<text  x="519.26" y="79.5" ></text>
</g>
<g >
<title>new_sync_write (545,866,385 samples, 0.21%)</title><rect x="16.1" y="213" width="2.5" height="15.0" fill="rgb(231,168,6)" rx="2" ry="2" />
<text  x="19.06" y="223.5" ></text>
</g>
<g >
<title>findmaxmatchesonbothstrands (1,325,594,946 samples, 0.52%)</title><rect x="33.7" y="309" width="6.1" height="15.0" fill="rgb(222,13,36)" rx="2" ry="2" />
<text  x="36.68" y="319.5" ></text>
</g>
<g >
<title>generic_write_end (124,180,412 samples, 0.05%)</title><rect x="18.0" y="133" width="0.6" height="15.0" fill="rgb(241,111,5)" rx="2" ry="2" />
<text  x="20.98" y="143.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (35,160,792 samples, 0.01%)</title><rect x="18.4" y="101" width="0.2" height="15.0" fill="rgb(213,83,23)" rx="2" ry="2" />
<text  x="21.39" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (30,215,853 samples, 0.01%)</title><rect x="56.3" y="293" width="0.2" height="15.0" fill="rgb(232,131,21)" rx="2" ry="2" />
<text  x="59.31" y="303.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (85,903,266 samples, 0.03%)</title><rect x="18.0" y="101" width="0.4" height="15.0" fill="rgb(223,165,44)" rx="2" ry="2" />
<text  x="21.00" y="111.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (77,768,543 samples, 0.03%)</title><rect x="16.5" y="133" width="0.4" height="15.0" fill="rgb(249,220,17)" rx="2" ry="2" />
<text  x="19.53" y="143.5" ></text>
</g>
<g >
<title>__set_page_dirty (23,583,214 samples, 0.01%)</title><rect x="18.4" y="69" width="0.1" height="15.0" fill="rgb(240,154,44)" rx="2" ry="2" />
<text  x="21.44" y="79.5" ></text>
</g>
<g >
<title>lru_cache_add (29,316,122 samples, 0.01%)</title><rect x="33.1" y="197" width="0.1" height="15.0" fill="rgb(233,22,42)" rx="2" ry="2" />
<text  x="36.11" y="207.5" ></text>
</g>
<g >
<title>generic_update_time (60,170,512 samples, 0.02%)</title><rect x="16.1" y="101" width="0.3" height="15.0" fill="rgb(229,49,54)" rx="2" ry="2" />
<text  x="19.11" y="111.5" ></text>
</g>
<g >
<title>get_page_from_freelist (45,413,587 samples, 0.02%)</title><rect x="17.0" y="53" width="0.2" height="15.0" fill="rgb(230,152,37)" rx="2" ry="2" />
<text  x="19.96" y="63.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (46,433,373 samples, 0.02%)</title><rect x="575.3" y="261" width="0.3" height="15.0" fill="rgb(246,50,3)" rx="2" ry="2" />
<text  x="578.34" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (44,558,124 samples, 0.02%)</title><rect x="1181.2" y="309" width="0.2" height="15.0" fill="rgb(245,2,13)" rx="2" ry="2" />
<text  x="1184.20" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,464,587 samples, 0.01%)</title><rect x="575.4" y="69" width="0.1" height="15.0" fill="rgb(210,225,35)" rx="2" ry="2" />
<text  x="578.36" y="79.5" ></text>
</g>
<g >
<title>block_write_end (35,518,089 samples, 0.01%)</title><rect x="18.4" y="117" width="0.2" height="15.0" fill="rgb(221,123,21)" rx="2" ry="2" />
<text  x="21.39" y="127.5" ></text>
</g>
<g >
<title>[unknown] (230,383,391,787 samples, 90.09%)</title><rect x="10.5" y="325" width="1063.0" height="15.0" fill="rgb(227,123,12)" rx="2" ry="2" />
<text  x="13.53" y="335.5" >[unknown]</text>
</g>
<g >
<title>tick_sched_timer (41,881,436 samples, 0.02%)</title><rect x="1181.2" y="229" width="0.2" height="15.0" fill="rgb(246,52,23)" rx="2" ry="2" />
<text  x="1184.21" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (21,923,337 samples, 0.01%)</title><rect x="32.9" y="149" width="0.1" height="15.0" fill="rgb(215,24,19)" rx="2" ry="2" />
<text  x="35.91" y="159.5" ></text>
</g>
<g >
<title>unmap_region (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="229" width="0.3" height="15.0" fill="rgb(205,32,34)" rx="2" ry="2" />
<text  x="1076.95" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (30,447,028 samples, 0.01%)</title><rect x="1130.7" y="213" width="0.2" height="15.0" fill="rgb(237,33,53)" rx="2" ry="2" />
<text  x="1133.75" y="223.5" ></text>
</g>
<g >
<title>showmaximalmatch (57,751,952 samples, 0.02%)</title><rect x="1188.0" y="325" width="0.3" height="15.0" fill="rgb(222,18,0)" rx="2" ry="2" />
<text  x="1191.02" y="335.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (87,327,816 samples, 0.03%)</title><rect x="18.0" y="117" width="0.4" height="15.0" fill="rgb(205,73,17)" rx="2" ry="2" />
<text  x="20.99" y="127.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (233,413,422 samples, 0.09%)</title><rect x="16.9" y="133" width="1.1" height="15.0" fill="rgb(247,193,6)" rx="2" ry="2" />
<text  x="19.90" y="143.5" ></text>
</g>
<g >
<title>prb_read_valid (35,722,039 samples, 0.01%)</title><rect x="1181.2" y="101" width="0.2" height="15.0" fill="rgb(206,128,25)" rx="2" ry="2" />
<text  x="1184.22" y="111.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (40,271,278 samples, 0.02%)</title><rect x="575.4" y="117" width="0.1" height="15.0" fill="rgb(205,27,47)" rx="2" ry="2" />
<text  x="578.35" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (29,847,187 samples, 0.01%)</title><rect x="16.6" y="69" width="0.2" height="15.0" fill="rgb(216,180,7)" rx="2" ry="2" />
<text  x="19.62" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_write (613,899,921 samples, 0.24%)</title><rect x="15.9" y="261" width="2.8" height="15.0" fill="rgb(246,144,29)" rx="2" ry="2" />
<text  x="18.87" y="271.5" ></text>
</g>
<g >
<title>irq_work_run_list (377,407,253 samples, 0.15%)</title><rect x="1071.6" y="149" width="1.8" height="15.0" fill="rgb(220,148,32)" rx="2" ry="2" />
<text  x="1074.61" y="159.5" ></text>
</g>
<g >
<title>__vm_munmap (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="261" width="0.3" height="15.0" fill="rgb(231,38,23)" rx="2" ry="2" />
<text  x="1076.95" y="271.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (130,052,512 samples, 0.05%)</title><rect x="1074.9" y="309" width="0.6" height="15.0" fill="rgb(205,28,38)" rx="2" ry="2" />
<text  x="1077.86" y="319.5" ></text>
</g>
<g >
<title>prb_read_valid (309,784,428 samples, 0.12%)</title><rect x="516.2" y="85" width="1.5" height="15.0" fill="rgb(250,205,6)" rx="2" ry="2" />
<text  x="519.24" y="95.5" ></text>
</g>
<g >
<title>__do_munmap (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="245" width="0.3" height="15.0" fill="rgb(205,159,2)" rx="2" ry="2" />
<text  x="1076.95" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (28,482,558 samples, 0.01%)</title><rect x="1130.7" y="149" width="0.2" height="15.0" fill="rgb(220,117,2)" rx="2" ry="2" />
<text  x="1133.75" y="159.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (37,152,714 samples, 0.01%)</title><rect x="32.0" y="213" width="0.1" height="15.0" fill="rgb(249,75,31)" rx="2" ry="2" />
<text  x="34.96" y="223.5" ></text>
</g>
<g >
<title>findmumcandidates (1,567,831,538 samples, 0.61%)</title><rect x="1082.0" y="325" width="7.2" height="15.0" fill="rgb(250,209,23)" rx="2" ry="2" />
<text  x="1084.99" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (42,684,104 samples, 0.02%)</title><rect x="1181.2" y="261" width="0.2" height="15.0" fill="rgb(250,48,24)" rx="2" ry="2" />
<text  x="1184.21" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (432,319,107 samples, 0.17%)</title><rect x="1071.5" y="277" width="2.0" height="15.0" fill="rgb(237,160,11)" rx="2" ry="2" />
<text  x="1074.52" y="287.5" ></text>
</g>
<g >
<title>memcpy_erms (69,032,123 samples, 0.03%)</title><rect x="1073.0" y="69" width="0.3" height="15.0" fill="rgb(208,182,29)" rx="2" ry="2" />
<text  x="1075.99" y="79.5" ></text>
</g>
<g >
<title>__alloc_pages (58,980,473 samples, 0.02%)</title><rect x="32.8" y="197" width="0.3" height="15.0" fill="rgb(220,44,10)" rx="2" ry="2" />
<text  x="35.81" y="207.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (544,442,291 samples, 0.21%)</title><rect x="16.1" y="197" width="2.5" height="15.0" fill="rgb(215,229,4)" rx="2" ry="2" />
<text  x="19.06" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (42,059,569 samples, 0.02%)</title><rect x="1181.2" y="245" width="0.2" height="15.0" fill="rgb(246,14,33)" rx="2" ry="2" />
<text  x="1184.21" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (377,228,554 samples, 0.15%)</title><rect x="1071.6" y="133" width="1.8" height="15.0" fill="rgb(227,33,36)" rx="2" ry="2" />
<text  x="1074.62" y="143.5" ></text>
</g>
<g >
<title>constructprogressstree (2,847,757,666 samples, 1.11%)</title><rect x="20.5" y="309" width="13.2" height="15.0" fill="rgb(233,178,28)" rx="2" ry="2" />
<text  x="23.54" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (46,433,373 samples, 0.02%)</title><rect x="575.3" y="245" width="0.3" height="15.0" fill="rgb(250,155,16)" rx="2" ry="2" />
<text  x="578.34" y="255.5" ></text>
</g>
<g >
<title>console_unlock (319,694,686 samples, 0.13%)</title><rect x="516.2" y="101" width="1.5" height="15.0" fill="rgb(215,143,16)" rx="2" ry="2" />
<text  x="519.19" y="111.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (29,762,532 samples, 0.01%)</title><rect x="33.1" y="213" width="0.2" height="15.0" fill="rgb(215,130,38)" rx="2" ry="2" />
<text  x="36.11" y="223.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (46,326,644 samples, 0.02%)</title><rect x="32.6" y="197" width="0.2" height="15.0" fill="rgb(210,161,37)" rx="2" ry="2" />
<text  x="35.56" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (337,155,663 samples, 0.13%)</title><rect x="31.8" y="245" width="1.6" height="15.0" fill="rgb(228,127,7)" rx="2" ry="2" />
<text  x="34.84" y="255.5" ></text>
</g>
<g >
<title>console_unlock (36,524,736 samples, 0.01%)</title><rect x="1181.2" y="117" width="0.2" height="15.0" fill="rgb(232,6,0)" rx="2" ry="2" />
<text  x="1184.22" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (370,223,128 samples, 0.14%)</title><rect x="516.1" y="229" width="1.7" height="15.0" fill="rgb(215,161,29)" rx="2" ry="2" />
<text  x="519.09" y="239.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (257,365,095 samples, 0.10%)</title><rect x="12.7" y="309" width="1.2" height="15.0" fill="rgb(244,184,5)" rx="2" ry="2" />
<text  x="15.74" y="319.5" ></text>
</g>
<g >
<title>alloc_page_buffers (33,675,707 samples, 0.01%)</title><rect x="16.6" y="101" width="0.2" height="15.0" fill="rgb(226,92,35)" rx="2" ry="2" />
<text  x="19.61" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (406,694,997 samples, 0.16%)</title><rect x="1071.6" y="197" width="1.9" height="15.0" fill="rgb(205,194,47)" rx="2" ry="2" />
<text  x="1074.59" y="207.5" ></text>
</g>
<g >
<title>release_pages (31,242,159 samples, 0.01%)</title><rect x="1074.1" y="133" width="0.2" height="15.0" fill="rgb(217,85,8)" rx="2" ry="2" />
<text  x="1077.13" y="143.5" ></text>
</g>
<g >
<title>desc_read (60,994,105 samples, 0.02%)</title><rect x="1072.5" y="37" width="0.3" height="15.0" fill="rgb(252,174,16)" rx="2" ry="2" />
<text  x="1075.52" y="47.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (43,844,400 samples, 0.02%)</title><rect x="575.3" y="197" width="0.3" height="15.0" fill="rgb(215,183,32)" rx="2" ry="2" />
<text  x="578.35" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (375,937,508 samples, 0.15%)</title><rect x="516.1" y="245" width="1.7" height="15.0" fill="rgb(222,175,14)" rx="2" ry="2" />
<text  x="519.09" y="255.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (75,460,808 samples, 0.03%)</title><rect x="516.9" y="53" width="0.3" height="15.0" fill="rgb(253,188,4)" rx="2" ry="2" />
<text  x="519.89" y="63.5" ></text>
</g>
<g >
<title>console_unlock (364,815,559 samples, 0.14%)</title><rect x="1071.6" y="101" width="1.7" height="15.0" fill="rgb(243,113,43)" rx="2" ry="2" />
<text  x="1074.63" y="111.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (30,612,555 samples, 0.01%)</title><rect x="20.3" y="309" width="0.1" height="15.0" fill="rgb(216,210,23)" rx="2" ry="2" />
<text  x="23.30" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (33,213,471 samples, 0.01%)</title><rect x="1130.7" y="293" width="0.2" height="15.0" fill="rgb(244,208,50)" rx="2" ry="2" />
<text  x="1133.74" y="303.5" ></text>
</g>
<g >
<title>_itoa_word (185,393,438 samples, 0.07%)</title><rect x="1081.1" y="309" width="0.8" height="15.0" fill="rgb(238,88,21)" rx="2" ry="2" />
<text  x="1084.08" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (330,853,304 samples, 0.13%)</title><rect x="516.2" y="149" width="1.5" height="15.0" fill="rgb(245,35,35)" rx="2" ry="2" />
<text  x="519.18" y="159.5" ></text>
</g>
<g >
<title>generic_perform_write (471,086,293 samples, 0.18%)</title><rect x="16.4" y="165" width="2.2" height="15.0" fill="rgb(247,177,22)" rx="2" ry="2" />
<text  x="19.39" y="175.5" ></text>
</g>
<g >
<title>update_time (60,348,929 samples, 0.02%)</title><rect x="16.1" y="117" width="0.3" height="15.0" fill="rgb(238,212,43)" rx="2" ry="2" />
<text  x="19.11" y="127.5" ></text>
</g>
<g >
<title>__ctype_tolower_loc (113,005,631 samples, 0.04%)</title><rect x="19.3" y="309" width="0.5" height="15.0" fill="rgb(246,149,54)" rx="2" ry="2" />
<text  x="22.26" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (376,920,594 samples, 0.15%)</title><rect x="516.1" y="261" width="1.7" height="15.0" fill="rgb(210,119,45)" rx="2" ry="2" />
<text  x="519.08" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (22,455,457 samples, 0.01%)</title><rect x="17.8" y="85" width="0.1" height="15.0" fill="rgb(219,86,42)" rx="2" ry="2" />
<text  x="20.78" y="95.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (24,329,672 samples, 0.01%)</title><rect x="575.2" y="293" width="0.1" height="15.0" fill="rgb(224,156,51)" rx="2" ry="2" />
<text  x="578.23" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (22,540,497 samples, 0.01%)</title><rect x="18.0" y="85" width="0.1" height="15.0" fill="rgb(245,150,8)" rx="2" ry="2" />
<text  x="21.00" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (146,281,262 samples, 0.06%)</title><rect x="523.0" y="245" width="0.6" height="15.0" fill="rgb(208,191,29)" rx="2" ry="2" />
<text  x="525.95" y="255.5" ></text>
</g>
<g >
<title>rescan (1,885,193,641 samples, 0.74%)</title><rect x="63.9" y="309" width="8.7" height="15.0" fill="rgb(227,137,45)" rx="2" ry="2" />
<text  x="66.90" y="319.5" ></text>
</g>
<g >
<title>update_process_times (405,980,269 samples, 0.16%)</title><rect x="1071.6" y="181" width="1.9" height="15.0" fill="rgb(225,224,28)" rx="2" ry="2" />
<text  x="1074.59" y="191.5" ></text>
</g>
<g >
<title>[unknown] (102,256,063 samples, 0.04%)</title><rect x="12.2" y="309" width="0.5" height="15.0" fill="rgb(214,147,3)" rx="2" ry="2" />
<text  x="15.23" y="319.5" ></text>
</g>
<g >
<title>__ctype_b_loc (111,457,649 samples, 0.04%)</title><rect x="18.8" y="309" width="0.5" height="15.0" fill="rgb(232,19,26)" rx="2" ry="2" />
<text  x="21.75" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (42,862,265 samples, 0.02%)</title><rect x="1181.2" y="277" width="0.2" height="15.0" fill="rgb(209,74,21)" rx="2" ry="2" />
<text  x="1184.21" y="287.5" ></text>
</g>
<g >
<title>prb_read_valid (37,948,458 samples, 0.01%)</title><rect x="575.4" y="85" width="0.1" height="15.0" fill="rgb(240,223,0)" rx="2" ry="2" />
<text  x="578.36" y="95.5" ></text>
</g>
<g >
<title>_prb_read_valid (267,739,242 samples, 0.10%)</title><rect x="1071.7" y="69" width="1.3" height="15.0" fill="rgb(217,40,28)" rx="2" ry="2" />
<text  x="1074.72" y="79.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (154,080,627 samples, 0.06%)</title><rect x="17.2" y="101" width="0.7" height="15.0" fill="rgb(233,114,21)" rx="2" ry="2" />
<text  x="20.17" y="111.5" ></text>
</g>
<g >
<title>irq_work_run_list (40,271,278 samples, 0.02%)</title><rect x="575.4" y="149" width="0.1" height="15.0" fill="rgb(250,81,50)" rx="2" ry="2" />
<text  x="578.35" y="159.5" ></text>
</g>
<g >
<title>alloc_pages (52,260,351 samples, 0.02%)</title><rect x="16.9" y="85" width="0.3" height="15.0" fill="rgb(213,50,40)" rx="2" ry="2" />
<text  x="19.93" y="95.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (79,660,393 samples, 0.03%)</title><rect x="1072.4" y="53" width="0.4" height="15.0" fill="rgb(247,113,50)" rx="2" ry="2" />
<text  x="1075.44" y="63.5" ></text>
</g>
<g >
<title>unmap_single_vma (65,917,283 samples, 0.03%)</title><rect x="1074.0" y="197" width="0.3" height="15.0" fill="rgb(215,59,35)" rx="2" ry="2" />
<text  x="1076.98" y="207.5" ></text>
</g>
<g >
<title>irq_work_single (40,271,278 samples, 0.02%)</title><rect x="575.4" y="133" width="0.1" height="15.0" fill="rgb(229,60,39)" rx="2" ry="2" />
<text  x="578.35" y="143.5" ></text>
</g>
<g >
<title>security_file_permission (22,435,700 samples, 0.01%)</title><rect x="18.6" y="197" width="0.1" height="15.0" fill="rgb(223,68,47)" rx="2" ry="2" />
<text  x="21.58" y="207.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (31,771,891 samples, 0.01%)</title><rect x="1074.1" y="149" width="0.2" height="15.0" fill="rgb(230,61,37)" rx="2" ry="2" />
<text  x="1077.13" y="159.5" ></text>
</g>
<g >
<title>_IO_padn (38,643,498 samples, 0.02%)</title><rect x="13.9" y="309" width="0.2" height="15.0" fill="rgb(233,53,49)" rx="2" ry="2" />
<text  x="16.92" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (23,216,140 samples, 0.01%)</title><rect x="1073.4" y="165" width="0.1" height="15.0" fill="rgb(215,148,25)" rx="2" ry="2" />
<text  x="1076.36" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (354,600,094 samples, 0.14%)</title><rect x="516.2" y="197" width="1.6" height="15.0" fill="rgb(218,15,46)" rx="2" ry="2" />
<text  x="519.16" y="207.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (28,050,921 samples, 0.01%)</title><rect x="10.5" y="309" width="0.2" height="15.0" fill="rgb(218,201,33)" rx="2" ry="2" />
<text  x="13.53" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,557,732 samples, 0.01%)</title><rect x="56.3" y="245" width="0.1" height="15.0" fill="rgb(220,205,49)" rx="2" ry="2" />
<text  x="59.32" y="255.5" ></text>
</g>
<g >
<title>mummer (255,736,420,263 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(244,169,39)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >mummer</text>
</g>
<g >
<title>try_charge_memcg (32,518,682 samples, 0.01%)</title><rect x="32.4" y="181" width="0.2" height="15.0" fill="rgb(230,26,12)" rx="2" ry="2" />
<text  x="35.41" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (33,481,231 samples, 0.01%)</title><rect x="1130.7" y="309" width="0.2" height="15.0" fill="rgb(218,166,53)" rx="2" ry="2" />
<text  x="1133.74" y="319.5" ></text>
</g>
<g >
<title>sync_regs (31,893,767 samples, 0.01%)</title><rect x="33.5" y="293" width="0.2" height="15.0" fill="rgb(210,80,46)" rx="2" ry="2" />
<text  x="36.53" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (72,033,659 samples, 0.03%)</title><rect x="1074.0" y="277" width="0.3" height="15.0" fill="rgb(229,24,5)" rx="2" ry="2" />
<text  x="1076.95" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (313,942,356 samples, 0.12%)</title><rect x="16.5" y="149" width="1.5" height="15.0" fill="rgb(232,3,6)" rx="2" ry="2" />
<text  x="19.53" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (112,224,992 samples, 0.04%)</title><rect x="19.8" y="309" width="0.5" height="15.0" fill="rgb(244,44,47)" rx="2" ry="2" />
<text  x="22.79" y="319.5" ></text>
</g>
<g >
<title>prb_read_valid (349,453,818 samples, 0.14%)</title><rect x="1071.7" y="85" width="1.6" height="15.0" fill="rgb(227,192,12)" rx="2" ry="2" />
<text  x="1074.69" y="95.5" ></text>
</g>
<g >
<title>irq_work_tick (331,477,845 samples, 0.13%)</title><rect x="516.2" y="165" width="1.5" height="15.0" fill="rgb(235,198,16)" rx="2" ry="2" />
<text  x="519.18" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (61,442,488 samples, 0.02%)</title><rect x="517.4" y="69" width="0.3" height="15.0" fill="rgb(230,55,49)" rx="2" ry="2" />
<text  x="520.38" y="79.5" ></text>
</g>
<g >
<title>__page_cache_alloc (52,707,165 samples, 0.02%)</title><rect x="16.9" y="101" width="0.3" height="15.0" fill="rgb(247,85,21)" rx="2" ry="2" />
<text  x="19.93" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_write (640,520,100 samples, 0.25%)</title><rect x="15.8" y="309" width="3.0" height="15.0" fill="rgb(206,211,32)" rx="2" ry="2" />
<text  x="18.80" y="319.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (140,598,035 samples, 0.05%)</title><rect x="1075.7" y="309" width="0.6" height="15.0" fill="rgb(205,102,37)" rx="2" ry="2" />
<text  x="1078.69" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (316,114,130 samples, 0.12%)</title><rect x="31.9" y="229" width="1.5" height="15.0" fill="rgb(252,26,8)" rx="2" ry="2" />
<text  x="34.89" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (46,879,786 samples, 0.02%)</title><rect x="575.3" y="277" width="0.3" height="15.0" fill="rgb(221,4,33)" rx="2" ry="2" />
<text  x="578.34" y="287.5" ></text>
</g>
<g >
<title>update_process_times (30,447,028 samples, 0.01%)</title><rect x="1130.7" y="197" width="0.2" height="15.0" fill="rgb(226,96,11)" rx="2" ry="2" />
<text  x="1133.75" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (165,929,887 samples, 0.06%)</title><rect x="522.9" y="293" width="0.7" height="15.0" fill="rgb(223,172,46)" rx="2" ry="2" />
<text  x="525.87" y="303.5" ></text>
</g>
<g >
<title>_IO_putc (76,655,762 samples, 0.03%)</title><rect x="1073.6" y="325" width="0.3" height="15.0" fill="rgb(226,207,54)" rx="2" ry="2" />
<text  x="1076.58" y="335.5" ></text>
</g>
<g >
<title>all (255,736,420,263 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(236,29,49)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (376,424,925 samples, 0.15%)</title><rect x="1071.6" y="117" width="1.8" height="15.0" fill="rgb(253,49,18)" rx="2" ry="2" />
<text  x="1074.62" y="127.5" ></text>
</g>
<g >
<title>alloc_buffer_head (32,519,187 samples, 0.01%)</title><rect x="16.6" y="85" width="0.2" height="15.0" fill="rgb(247,174,8)" rx="2" ry="2" />
<text  x="19.61" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (421,072,256 samples, 0.16%)</title><rect x="1071.5" y="229" width="2.0" height="15.0" fill="rgb(210,84,39)" rx="2" ry="2" />
<text  x="1074.52" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (623,871,780 samples, 0.24%)</title><rect x="15.9" y="277" width="2.8" height="15.0" fill="rgb(248,26,25)" rx="2" ry="2" />
<text  x="18.85" y="287.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (128,502,723 samples, 0.05%)</title><rect x="17.2" y="85" width="0.6" height="15.0" fill="rgb(253,192,45)" rx="2" ry="2" />
<text  x="20.18" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (381,739,400 samples, 0.15%)</title><rect x="516.1" y="277" width="1.7" height="15.0" fill="rgb(233,107,40)" rx="2" ry="2" />
<text  x="519.08" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (437,323,617 samples, 0.17%)</title><rect x="1071.5" y="293" width="2.0" height="15.0" fill="rgb(211,116,42)" rx="2" ry="2" />
<text  x="1074.50" y="303.5" ></text>
</g>
<g >
<title>update_process_times (354,064,477 samples, 0.14%)</title><rect x="516.2" y="181" width="1.6" height="15.0" fill="rgb(220,53,9)" rx="2" ry="2" />
<text  x="519.16" y="191.5" ></text>
</g>
<g >
<title>scanprefix (11,237,576,793 samples, 4.39%)</title><rect x="523.7" y="309" width="51.9" height="15.0" fill="rgb(216,148,10)" rx="2" ry="2" />
<text  x="526.72" y="319.5" >scanp..</text>
</g>
<g >
<title>do_wp_page (121,855,377 samples, 0.05%)</title><rect x="523.0" y="213" width="0.5" height="15.0" fill="rgb(212,93,43)" rx="2" ry="2" />
<text  x="525.97" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (27,897,677 samples, 0.01%)</title><rect x="56.3" y="261" width="0.1" height="15.0" fill="rgb(218,198,45)" rx="2" ry="2" />
<text  x="59.32" y="271.5" ></text>
</g>
<g >
<title>file_modified (65,783,187 samples, 0.03%)</title><rect x="16.1" y="149" width="0.3" height="15.0" fill="rgb(215,226,39)" rx="2" ry="2" />
<text  x="19.09" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (142,864,189 samples, 0.06%)</title><rect x="523.0" y="229" width="0.6" height="15.0" fill="rgb(251,141,19)" rx="2" ry="2" />
<text  x="525.96" y="239.5" ></text>
</g>
<g >
<title>console_unlock (39,109,872 samples, 0.02%)</title><rect x="575.4" y="101" width="0.1" height="15.0" fill="rgb(215,24,52)" rx="2" ry="2" />
<text  x="578.36" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (45,808,986 samples, 0.02%)</title><rect x="575.3" y="229" width="0.3" height="15.0" fill="rgb(226,176,26)" rx="2" ry="2" />
<text  x="578.34" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (428,124,871 samples, 0.17%)</title><rect x="1071.5" y="261" width="2.0" height="15.0" fill="rgb(240,167,1)" rx="2" ry="2" />
<text  x="1074.52" y="271.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (38,131,750 samples, 0.01%)</title><rect x="1181.2" y="133" width="0.2" height="15.0" fill="rgb(216,48,26)" rx="2" ry="2" />
<text  x="1184.22" y="143.5" ></text>
</g>
<g >
<title>pagecache_get_page (233,145,764 samples, 0.09%)</title><rect x="16.9" y="117" width="1.1" height="15.0" fill="rgb(253,4,31)" rx="2" ry="2" />
<text  x="19.90" y="127.5" ></text>
</g>
<g >
<title>update_process_times (40,006,287 samples, 0.02%)</title><rect x="1181.2" y="197" width="0.2" height="15.0" fill="rgb(216,222,47)" rx="2" ry="2" />
<text  x="1184.22" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (28,701,667 samples, 0.01%)</title><rect x="56.3" y="277" width="0.2" height="15.0" fill="rgb(246,164,11)" rx="2" ry="2" />
<text  x="59.32" y="287.5" ></text>
</g>
<g >
<title>rw_verify_area (22,703,125 samples, 0.01%)</title><rect x="18.6" y="213" width="0.1" height="15.0" fill="rgb(216,105,37)" rx="2" ry="2" />
<text  x="21.57" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (372,524,902 samples, 0.15%)</title><rect x="31.7" y="293" width="1.8" height="15.0" fill="rgb(209,165,9)" rx="2" ry="2" />
<text  x="34.74" y="303.5" ></text>
</g>
<g >
<title>_IO_padn (50,034,911 samples, 0.02%)</title><rect x="1075.5" y="309" width="0.2" height="15.0" fill="rgb(228,64,53)" rx="2" ry="2" />
<text  x="1078.46" y="319.5" ></text>
</g>
</g>
</svg>
