<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>prep_new_page (9,713,150 samples, 0.02%)</title><rect x="1182.3" y="309" width="0.2" height="15.0" fill="rgb(212,60,45)" rx="2" ry="2" />
<text  x="1185.33" y="319.5" ></text>
</g>
<g >
<title>desc_read (8,328,554 samples, 0.01%)</title><rect x="1170.0" y="85" width="0.2" height="15.0" fill="rgb(242,125,17)" rx="2" ry="2" />
<text  x="1172.99" y="95.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,113,416 samples, 0.09%)</title><rect x="1188.9" y="357" width="1.1" height="15.0" fill="rgb(250,65,41)" rx="2" ry="2" />
<text  x="1191.95" y="367.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (213,311,882 samples, 0.36%)</title><rect x="1183.7" y="293" width="4.3" height="15.0" fill="rgb(252,203,42)" rx="2" ry="2" />
<text  x="1186.69" y="303.5" ></text>
</g>
<g >
<title>read (53,740,304 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(219,109,25)" rx="2" ry="2" />
<text  x="1191.90" y="495.5" ></text>
</g>
<g >
<title>free_transhuge_page (57,718,490 samples, 0.10%)</title><rect x="11.0" y="293" width="1.1" height="15.0" fill="rgb(216,74,39)" rx="2" ry="2" />
<text  x="13.96" y="303.5" ></text>
</g>
<g >
<title>prep_compound_page (465,831,156 samples, 0.79%)</title><rect x="770.7" y="309" width="9.3" height="15.0" fill="rgb(206,7,46)" rx="2" ry="2" />
<text  x="773.66" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,223,291 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(236,11,4)" rx="2" ry="2" />
<text  x="1191.91" y="463.5" ></text>
</g>
<g >
<title>prb_read_valid (200,090,843 samples, 0.34%)</title><rect x="1183.8" y="261" width="4.1" height="15.0" fill="rgb(217,134,48)" rx="2" ry="2" />
<text  x="1186.84" y="271.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (6,024,038 samples, 0.01%)</title><rect x="25.1" y="373" width="0.1" height="15.0" fill="rgb(251,228,8)" rx="2" ry="2" />
<text  x="28.12" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7,518,325 samples, 0.01%)</title><rect x="1180.2" y="341" width="0.2" height="15.0" fill="rgb(249,87,39)" rx="2" ry="2" />
<text  x="1183.23" y="351.5" ></text>
</g>
<g >
<title>desc_read (5,183,468 samples, 0.01%)</title><rect x="1185.4" y="229" width="0.1" height="15.0" fill="rgb(245,61,33)" rx="2" ry="2" />
<text  x="1188.35" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37,466,257,013 samples, 63.81%)</title><rect x="27.6" y="373" width="752.9" height="15.0" fill="rgb(234,147,22)" rx="2" ry="2" />
<text  x="30.59" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>do_sys_open (16,194,419 samples, 0.03%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(252,6,48)" rx="2" ry="2" />
<text  x="13.16" y="415.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,621,238,449 samples, 98.13%)</title><rect x="24.8" y="389" width="1157.9" height="15.0" fill="rgb(207,188,11)" rx="2" ry="2" />
<text  x="27.75" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>unmap_page_range (497,210,281 samples, 0.85%)</title><rect x="12.1" y="341" width="10.0" height="15.0" fill="rgb(221,137,13)" rx="2" ry="2" />
<text  x="15.12" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (240,824,398 samples, 0.41%)</title><rect x="1183.4" y="405" width="4.8" height="15.0" fill="rgb(230,41,16)" rx="2" ry="2" />
<text  x="1186.37" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (8,926,003 samples, 0.02%)</title><rect x="1182.3" y="293" width="0.2" height="15.0" fill="rgb(206,196,51)" rx="2" ry="2" />
<text  x="1185.34" y="303.5" ></text>
</g>
<g >
<title>irq_work_single (49,703,153 samples, 0.08%)</title><rect x="1169.6" y="181" width="1.0" height="15.0" fill="rgb(228,173,19)" rx="2" ry="2" />
<text  x="1172.60" y="191.5" ></text>
</g>
<g >
<title>console_unlock (207,149,877 samples, 0.35%)</title><rect x="1183.7" y="277" width="4.2" height="15.0" fill="rgb(220,64,8)" rx="2" ry="2" />
<text  x="1186.71" y="287.5" ></text>
</g>
<g >
<title>irqentry_exit (4,993,048 samples, 0.01%)</title><rect x="1183.1" y="437" width="0.1" height="15.0" fill="rgb(230,127,45)" rx="2" ry="2" />
<text  x="1186.07" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (60,044,156 samples, 0.10%)</title><rect x="1169.5" y="293" width="1.2" height="15.0" fill="rgb(209,62,29)" rx="2" ry="2" />
<text  x="1172.50" y="303.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5,879,796 samples, 0.01%)</title><rect x="21.9" y="181" width="0.2" height="15.0" fill="rgb(216,204,4)" rx="2" ry="2" />
<text  x="24.94" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (57,724,943,348 samples, 98.31%)</title><rect x="22.9" y="437" width="1160.1" height="15.0" fill="rgb(242,79,5)" rx="2" ry="2" />
<text  x="25.94" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>desc_read_finalized_seq (11,046,400 samples, 0.02%)</title><rect x="1169.9" y="101" width="0.3" height="15.0" fill="rgb(251,5,9)" rx="2" ry="2" />
<text  x="1172.94" y="111.5" ></text>
</g>
<g >
<title>all (58,716,360,111 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(226,71,44)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>console_unlock (83,822,206 samples, 0.14%)</title><rect x="759.6" y="101" width="1.7" height="15.0" fill="rgb(229,132,29)" rx="2" ry="2" />
<text  x="762.64" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (107,257,690 samples, 0.18%)</title><rect x="759.4" y="245" width="2.2" height="15.0" fill="rgb(243,194,25)" rx="2" ry="2" />
<text  x="762.43" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (108,045,475 samples, 0.18%)</title><rect x="759.4" y="261" width="2.2" height="15.0" fill="rgb(232,89,50)" rx="2" ry="2" />
<text  x="762.42" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (18,074,005 samples, 0.03%)</title><rect x="13.7" y="213" width="0.4" height="15.0" fill="rgb(254,40,12)" rx="2" ry="2" />
<text  x="16.70" y="223.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,194,419 samples, 0.03%)</title><rect x="10.2" y="389" width="0.3" height="15.0" fill="rgb(228,56,12)" rx="2" ry="2" />
<text  x="13.16" y="399.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (8,228,759 samples, 0.01%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(232,25,43)" rx="2" ry="2" />
<text  x="13.20" y="351.5" ></text>
</g>
<g >
<title>release_pages (444,611,998 samples, 0.76%)</title><rect x="13.1" y="277" width="9.0" height="15.0" fill="rgb(222,14,14)" rx="2" ry="2" />
<text  x="16.15" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (253,758,209 samples, 0.43%)</title><rect x="1183.2" y="469" width="5.1" height="15.0" fill="rgb(237,204,13)" rx="2" ry="2" />
<text  x="1186.23" y="479.5" ></text>
</g>
<g >
<title>free_unref_page (398,153,879 samples, 0.68%)</title><rect x="14.1" y="213" width="8.0" height="15.0" fill="rgb(237,160,45)" rx="2" ry="2" />
<text  x="17.06" y="223.5" ></text>
</g>
<g >
<title>console_unlock (47,948,681 samples, 0.08%)</title><rect x="1169.6" y="149" width="1.0" height="15.0" fill="rgb(216,130,0)" rx="2" ry="2" />
<text  x="1172.61" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_read (53,135,511 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(231,107,2)" rx="2" ry="2" />
<text  x="1191.91" y="447.5" ></text>
</g>
<g >
<title>vmacache_find (5,564,822 samples, 0.01%)</title><rect x="23.1" y="405" width="0.1" height="15.0" fill="rgb(232,101,42)" rx="2" ry="2" />
<text  x="26.07" y="415.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (49,703,153 samples, 0.08%)</title><rect x="1169.6" y="165" width="1.0" height="15.0" fill="rgb(248,51,10)" rx="2" ry="2" />
<text  x="1172.60" y="175.5" ></text>
</g>
<g >
<title>path_openat (15,493,612 samples, 0.03%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(247,176,14)" rx="2" ry="2" />
<text  x="13.16" y="367.5" ></text>
</g>
<g >
<title>pci_user_read_config_dword (50,505,533 samples, 0.09%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(250,79,11)" rx="2" ry="2" />
<text  x="1191.96" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,013,147 samples, 0.09%)</title><rect x="23.7" y="389" width="1.0" height="15.0" fill="rgb(212,69,24)" rx="2" ry="2" />
<text  x="26.65" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (19,293,844,189 samples, 32.86%)</title><rect x="783.0" y="357" width="387.7" height="15.0" fill="rgb(216,129,40)" rx="2" ry="2" />
<text  x="786.00" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>__mod_lruvec_page_state (5,180,946 samples, 0.01%)</title><rect x="12.9" y="293" width="0.1" height="15.0" fill="rgb(214,203,33)" rx="2" ry="2" />
<text  x="15.85" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,959,036 samples, 0.01%)</title><rect x="782.9" y="357" width="0.1" height="15.0" fill="rgb(247,127,43)" rx="2" ry="2" />
<text  x="785.88" y="367.5" ></text>
</g>
<g >
<title>walk_component (5,599,015 samples, 0.01%)</title><rect x="10.3" y="325" width="0.1" height="15.0" fill="rgb(207,106,3)" rx="2" ry="2" />
<text  x="13.25" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (36,465,495,027 samples, 62.10%)</title><rect x="28.8" y="309" width="732.8" height="15.0" fill="rgb(231,154,26)" rx="2" ry="2" />
<text  x="31.80" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>clear_subpage (346,519,664 samples, 0.59%)</title><rect x="1170.7" y="357" width="7.0" height="15.0" fill="rgb(251,75,23)" rx="2" ry="2" />
<text  x="1173.74" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,370,186 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(211,4,3)" rx="2" ry="2" />
<text  x="13.16" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,684,222,668 samples, 98.24%)</title><rect x="23.5" y="405" width="1159.3" height="15.0" fill="rgb(225,13,13)" rx="2" ry="2" />
<text  x="26.53" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4,987,265 samples, 0.01%)</title><rect x="1188.4" y="469" width="0.1" height="15.0" fill="rgb(237,30,41)" rx="2" ry="2" />
<text  x="1191.42" y="479.5" ></text>
</g>
<g >
<title>do_filp_open (15,493,612 samples, 0.03%)</title><rect x="10.2" y="373" width="0.3" height="15.0" fill="rgb(216,105,48)" rx="2" ry="2" />
<text  x="13.16" y="383.5" ></text>
</g>
<g >
<title>__munmap (558,321,877 samples, 0.95%)</title><rect x="10.9" y="485" width="11.2" height="15.0" fill="rgb(237,166,1)" rx="2" ry="2" />
<text  x="13.90" y="495.5" ></text>
</g>
<g >
<title>desc_read (33,860,795 samples, 0.06%)</title><rect x="1185.7" y="213" width="0.7" height="15.0" fill="rgb(213,68,33)" rx="2" ry="2" />
<text  x="1188.72" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (16,131,547 samples, 0.03%)</title><rect x="1170.2" y="117" width="0.4" height="15.0" fill="rgb(252,3,21)" rx="2" ry="2" />
<text  x="1173.24" y="127.5" ></text>
</g>
<g >
<title>try_charge_memcg (17,206,501 samples, 0.03%)</title><rect x="1181.7" y="293" width="0.4" height="15.0" fill="rgb(253,18,8)" rx="2" ry="2" />
<text  x="1184.71" y="303.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (66,635,655 samples, 0.11%)</title><rect x="1180.8" y="325" width="1.3" height="15.0" fill="rgb(230,215,27)" rx="2" ry="2" />
<text  x="1183.77" y="335.5" ></text>
</g>
<g >
<title>pci_read (49,292,036 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(239,134,9)" rx="2" ry="2" />
<text  x="1191.98" y="319.5" ></text>
</g>
<g >
<title>rcu_all_qs (84,207,720 samples, 0.14%)</title><rect x="1177.7" y="357" width="1.7" height="15.0" fill="rgb(238,6,42)" rx="2" ry="2" />
<text  x="1180.70" y="367.5" ></text>
</g>
<g >
<title>prb_read_valid (81,451,248 samples, 0.14%)</title><rect x="759.7" y="85" width="1.6" height="15.0" fill="rgb(215,98,14)" rx="2" ry="2" />
<text  x="762.69" y="95.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (8,910,327 samples, 0.02%)</title><rect x="1183.4" y="357" width="0.2" height="15.0" fill="rgb(223,62,39)" rx="2" ry="2" />
<text  x="1186.44" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,704,156 samples, 0.02%)</title><rect x="10.7" y="469" width="0.2" height="15.0" fill="rgb(242,6,5)" rx="2" ry="2" />
<text  x="13.66" y="479.5" ></text>
</g>
<g >
<title>irq_work_tick (49,877,940 samples, 0.08%)</title><rect x="1169.6" y="213" width="1.0" height="15.0" fill="rgb(206,208,0)" rx="2" ry="2" />
<text  x="1172.60" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (58,641,767 samples, 0.10%)</title><rect x="1169.5" y="277" width="1.2" height="15.0" fill="rgb(249,195,9)" rx="2" ry="2" />
<text  x="1172.50" y="287.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (6,341,458 samples, 0.01%)</title><rect x="12.5" y="261" width="0.1" height="15.0" fill="rgb(211,55,34)" rx="2" ry="2" />
<text  x="15.51" y="271.5" ></text>
</g>
<g >
<title>clear_subpage (19,332,904 samples, 0.03%)</title><rect x="1179.4" y="373" width="0.4" height="15.0" fill="rgb(245,158,15)" rx="2" ry="2" />
<text  x="1182.40" y="383.5" ></text>
</g>
<g >
<title>page_counter_try_charge (11,963,338 samples, 0.02%)</title><rect x="27.1" y="325" width="0.2" height="15.0" fill="rgb(222,115,21)" rx="2" ry="2" />
<text  x="30.10" y="335.5" ></text>
</g>
<g >
<title>page_remove_rmap (18,672,357 samples, 0.03%)</title><rect x="12.8" y="309" width="0.3" height="15.0" fill="rgb(211,6,46)" rx="2" ry="2" />
<text  x="15.77" y="319.5" ></text>
</g>
<g >
<title>timekeeping_advance (8,378,107 samples, 0.01%)</title><rect x="1183.4" y="325" width="0.2" height="15.0" fill="rgb(220,151,7)" rx="2" ry="2" />
<text  x="1186.45" y="335.5" ></text>
</g>
<g >
<title>get_data.isra.0 (6,232,252 samples, 0.01%)</title><rect x="760.7" y="53" width="0.1" height="15.0" fill="rgb(247,6,5)" rx="2" ry="2" />
<text  x="763.66" y="63.5" ></text>
</g>
<g >
<title>exc_page_fault (57,736,169,963 samples, 98.33%)</title><rect x="22.9" y="453" width="1160.3" height="15.0" fill="rgb(210,27,31)" rx="2" ry="2" />
<text  x="25.91" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>prep_new_page (37,400,397,234 samples, 63.70%)</title><rect x="28.4" y="325" width="751.6" height="15.0" fill="rgb(245,209,30)" rx="2" ry="2" />
<text  x="31.40" y="335.5" >prep_new_page</text>
</g>
<g >
<title>clear_huge_page (19,847,070,856 samples, 33.80%)</title><rect x="780.5" y="373" width="398.9" height="15.0" fill="rgb(209,99,48)" rx="2" ry="2" />
<text  x="783.54" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (61,008,109 samples, 0.10%)</title><rect x="1169.5" y="341" width="1.2" height="15.0" fill="rgb(226,197,20)" rx="2" ry="2" />
<text  x="1172.49" y="351.5" ></text>
</g>
<g >
<title>free_pcp_prepare (388,797,763 samples, 0.66%)</title><rect x="14.1" y="197" width="7.8" height="15.0" fill="rgb(239,178,24)" rx="2" ry="2" />
<text  x="17.08" y="207.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (7,256,987 samples, 0.01%)</title><rect x="1180.9" y="309" width="0.2" height="15.0" fill="rgb(212,83,17)" rx="2" ry="2" />
<text  x="1183.93" y="319.5" ></text>
</g>
<g >
<title>page_counter_try_charge (28,559,810 samples, 0.05%)</title><rect x="1181.1" y="293" width="0.6" height="15.0" fill="rgb(221,44,2)" rx="2" ry="2" />
<text  x="1184.11" y="303.5" ></text>
</g>
<g >
<title>path_openat (9,743,987 samples, 0.02%)</title><rect x="10.7" y="373" width="0.2" height="15.0" fill="rgb(239,95,26)" rx="2" ry="2" />
<text  x="13.66" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (103,921,805 samples, 0.18%)</title><rect x="759.4" y="229" width="2.1" height="15.0" fill="rgb(206,71,30)" rx="2" ry="2" />
<text  x="762.44" y="239.5" ></text>
</g>
<g >
<title>free_unref_page (54,781,213 samples, 0.09%)</title><rect x="11.0" y="261" width="1.1" height="15.0" fill="rgb(250,173,46)" rx="2" ry="2" />
<text  x="14.02" y="271.5" ></text>
</g>
<g >
<title>sync_regs (18,733,583 samples, 0.03%)</title><rect x="1188.5" y="469" width="0.4" height="15.0" fill="rgb(251,135,48)" rx="2" ry="2" />
<text  x="1191.52" y="479.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (60,215,784 samples, 0.10%)</title><rect x="10.9" y="341" width="1.2" height="15.0" fill="rgb(246,68,50)" rx="2" ry="2" />
<text  x="13.91" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,774,556,140 samples, 98.40%)</title><rect x="22.2" y="469" width="1161.0" height="15.0" fill="rgb(244,98,4)" rx="2" ry="2" />
<text  x="25.16" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>desc_read_finalized_seq (17,994,321 samples, 0.03%)</title><rect x="760.3" y="53" width="0.4" height="15.0" fill="rgb(211,170,26)" rx="2" ry="2" />
<text  x="763.30" y="63.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (6,404,705 samples, 0.01%)</title><rect x="13.3" y="229" width="0.2" height="15.0" fill="rgb(247,50,44)" rx="2" ry="2" />
<text  x="16.34" y="239.5" ></text>
</g>
<g >
<title>vfs_read (53,047,462 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(227,210,40)" rx="2" ry="2" />
<text  x="1191.91" y="415.5" ></text>
</g>
<g >
<title>main (58,056,714,148 samples, 98.88%)</title><rect x="22.2" y="485" width="1166.7" height="15.0" fill="rgb(209,70,1)" rx="2" ry="2" />
<text  x="25.15" y="495.5" >main</text>
</g>
<g >
<title>pte_alloc_one (114,182,065 samples, 0.19%)</title><rect x="1180.4" y="373" width="2.3" height="15.0" fill="rgb(218,52,29)" rx="2" ry="2" />
<text  x="1183.44" y="383.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,465,540 samples, 0.01%)</title><rect x="1180.6" y="325" width="0.1" height="15.0" fill="rgb(254,206,5)" rx="2" ry="2" />
<text  x="1183.57" y="335.5" ></text>
</g>
<g >
<title>update_process_times (95,930,771 samples, 0.16%)</title><rect x="759.6" y="181" width="1.9" height="15.0" fill="rgb(218,95,30)" rx="2" ry="2" />
<text  x="762.59" y="191.5" ></text>
</g>
<g >
<title>do_filp_open (9,743,987 samples, 0.02%)</title><rect x="10.7" y="389" width="0.2" height="15.0" fill="rgb(231,123,36)" rx="2" ry="2" />
<text  x="13.66" y="399.5" ></text>
</g>
<g >
<title>page_counter_cancel (6,317,269 samples, 0.01%)</title><rect x="13.9" y="165" width="0.1" height="15.0" fill="rgb(226,207,49)" rx="2" ry="2" />
<text  x="16.91" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (95,930,771 samples, 0.16%)</title><rect x="759.6" y="197" width="1.9" height="15.0" fill="rgb(228,151,7)" rx="2" ry="2" />
<text  x="762.59" y="207.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5,333,751 samples, 0.01%)</title><rect x="1180.3" y="325" width="0.1" height="15.0" fill="rgb(230,136,2)" rx="2" ry="2" />
<text  x="1183.28" y="335.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (449,059,877 samples, 0.76%)</title><rect x="761.6" y="309" width="9.1" height="15.0" fill="rgb(242,60,1)" rx="2" ry="2" />
<text  x="764.64" y="319.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (60,215,784 samples, 0.10%)</title><rect x="10.9" y="373" width="1.2" height="15.0" fill="rgb(225,9,18)" rx="2" ry="2" />
<text  x="13.91" y="383.5" ></text>
</g>
<g >
<title>irq_work_single (86,279,203 samples, 0.15%)</title><rect x="759.6" y="133" width="1.8" height="15.0" fill="rgb(249,79,27)" rx="2" ry="2" />
<text  x="762.62" y="143.5" ></text>
</g>
<g >
<title>memcg_check_events (5,770,237 samples, 0.01%)</title><rect x="27.0" y="341" width="0.1" height="15.0" fill="rgb(219,229,24)" rx="2" ry="2" />
<text  x="29.96" y="351.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,450,898 samples, 0.05%)</title><rect x="1169.6" y="117" width="0.6" height="15.0" fill="rgb(234,92,46)" rx="2" ry="2" />
<text  x="1172.64" y="127.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (8,742,986 samples, 0.01%)</title><rect x="1180.2" y="357" width="0.2" height="15.0" fill="rgb(236,187,21)" rx="2" ry="2" />
<text  x="1183.21" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (9,444,280 samples, 0.02%)</title><rect x="1183.4" y="373" width="0.2" height="15.0" fill="rgb(253,57,14)" rx="2" ry="2" />
<text  x="1186.43" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (245,465,430 samples, 0.42%)</title><rect x="1183.4" y="437" width="4.9" height="15.0" fill="rgb(211,202,48)" rx="2" ry="2" />
<text  x="1186.35" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37,444,293,851 samples, 63.77%)</title><rect x="27.9" y="341" width="752.6" height="15.0" fill="rgb(244,40,40)" rx="2" ry="2" />
<text  x="30.95" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>_prb_read_valid (53,537,188 samples, 0.09%)</title><rect x="759.7" y="69" width="1.1" height="15.0" fill="rgb(223,73,51)" rx="2" ry="2" />
<text  x="762.71" y="79.5" ></text>
</g>
<g >
<title>pci_read_config (51,029,330 samples, 0.09%)</title><rect x="1188.9" y="341" width="1.1" height="15.0" fill="rgb(215,71,54)" rx="2" ry="2" />
<text  x="1191.95" y="351.5" ></text>
</g>
<g >
<title>update_wall_time (5,181,660 samples, 0.01%)</title><rect x="759.5" y="165" width="0.1" height="15.0" fill="rgb(245,96,24)" rx="2" ry="2" />
<text  x="762.49" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (52,152,683 samples, 0.09%)</title><rect x="1186.8" y="245" width="1.1" height="15.0" fill="rgb(231,85,45)" rx="2" ry="2" />
<text  x="1189.81" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_openat (10,442,079 samples, 0.02%)</title><rect x="10.7" y="437" width="0.2" height="15.0" fill="rgb(232,72,30)" rx="2" ry="2" />
<text  x="13.66" y="447.5" ></text>
</g>
<g >
<title>free_unref_page (10,359,229 samples, 0.02%)</title><rect x="12.5" y="293" width="0.2" height="15.0" fill="rgb(220,102,37)" rx="2" ry="2" />
<text  x="15.50" y="303.5" ></text>
</g>
<g >
<title>release_pages (60,126,445 samples, 0.10%)</title><rect x="10.9" y="325" width="1.2" height="15.0" fill="rgb(223,167,25)" rx="2" ry="2" />
<text  x="13.91" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (19,668,008 samples, 0.03%)</title><rect x="1182.2" y="325" width="0.4" height="15.0" fill="rgb(215,196,1)" rx="2" ry="2" />
<text  x="1185.21" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (10,564,056 samples, 0.02%)</title><rect x="27.3" y="357" width="0.3" height="15.0" fill="rgb(246,75,4)" rx="2" ry="2" />
<text  x="30.34" y="367.5" ></text>
</g>
<g >
<title>timekeeping_advance (5,005,734 samples, 0.01%)</title><rect x="759.5" y="149" width="0.1" height="15.0" fill="rgb(238,188,44)" rx="2" ry="2" />
<text  x="762.49" y="159.5" ></text>
</g>
<g >
<title>raw_pci_read (49,203,828 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(252,197,11)" rx="2" ry="2" />
<text  x="1191.99" y="303.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (86,191,217 samples, 0.15%)</title><rect x="759.6" y="117" width="1.8" height="15.0" fill="rgb(208,155,19)" rx="2" ry="2" />
<text  x="762.62" y="127.5" ></text>
</g>
<g >
<title>unmap_vmas (497,389,206 samples, 0.85%)</title><rect x="12.1" y="373" width="10.0" height="15.0" fill="rgb(221,195,36)" rx="2" ry="2" />
<text  x="15.12" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,249,741 samples, 0.03%)</title><rect x="28.5" y="309" width="0.3" height="15.0" fill="rgb(231,163,20)" rx="2" ry="2" />
<text  x="31.48" y="319.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,959,924 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(239,227,19)" rx="2" ry="2" />
<text  x="1191.91" y="383.5" ></text>
</g>
<g >
<title>free_compound_page (417,117,545 samples, 0.71%)</title><rect x="13.7" y="229" width="8.4" height="15.0" fill="rgb(254,86,12)" rx="2" ry="2" />
<text  x="16.69" y="239.5" ></text>
</g>
<g >
<title>alloc_pages (100,818,119 samples, 0.17%)</title><rect x="1180.7" y="357" width="2.0" height="15.0" fill="rgb(230,185,18)" rx="2" ry="2" />
<text  x="1183.70" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (60,482,106 samples, 0.10%)</title><rect x="1169.5" y="309" width="1.2" height="15.0" fill="rgb(250,177,4)" rx="2" ry="2" />
<text  x="1172.49" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (48,900,667 samples, 0.08%)</title><rect x="1181.1" y="309" width="1.0" height="15.0" fill="rgb(249,188,8)" rx="2" ry="2" />
<text  x="1184.08" y="319.5" ></text>
</g>
<g >
<title>__put_compound_page (443,184,487 samples, 0.75%)</title><rect x="13.2" y="261" width="8.9" height="15.0" fill="rgb(249,138,11)" rx="2" ry="2" />
<text  x="16.17" y="271.5" ></text>
</g>
<g >
<title>irq_work_tick (86,454,301 samples, 0.15%)</title><rect x="759.6" y="165" width="1.8" height="15.0" fill="rgb(240,221,32)" rx="2" ry="2" />
<text  x="762.61" y="175.5" ></text>
</g>
<g >
<title>irq_work_run_list (214,206,821 samples, 0.36%)</title><rect x="1183.7" y="325" width="4.3" height="15.0" fill="rgb(222,38,25)" rx="2" ry="2" />
<text  x="1186.67" y="335.5" ></text>
</g>
<g >
<title>update_process_times (227,987,816 samples, 0.39%)</title><rect x="1183.6" y="357" width="4.6" height="15.0" fill="rgb(251,146,21)" rx="2" ry="2" />
<text  x="1186.63" y="367.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (32,933,054 samples, 0.06%)</title><rect x="26.9" y="373" width="0.7" height="15.0" fill="rgb(249,197,29)" rx="2" ry="2" />
<text  x="29.92" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (244,572,970 samples, 0.42%)</title><rect x="1183.4" y="421" width="4.9" height="15.0" fill="rgb(213,77,54)" rx="2" ry="2" />
<text  x="1186.37" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (109,011,476 samples, 0.19%)</title><rect x="759.4" y="277" width="2.2" height="15.0" fill="rgb(238,167,16)" rx="2" ry="2" />
<text  x="762.42" y="287.5" ></text>
</g>
<g >
<title>find_vma (6,095,246 samples, 0.01%)</title><rect x="23.1" y="421" width="0.1" height="15.0" fill="rgb(230,31,49)" rx="2" ry="2" />
<text  x="26.06" y="431.5" ></text>
</g>
<g >
<title>update_wall_time (8,734,148 samples, 0.01%)</title><rect x="1183.4" y="341" width="0.2" height="15.0" fill="rgb(245,168,4)" rx="2" ry="2" />
<text  x="1186.44" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (109,099,342 samples, 0.19%)</title><rect x="759.4" y="293" width="2.2" height="15.0" fill="rgb(234,183,3)" rx="2" ry="2" />
<text  x="762.41" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (102,692,008 samples, 0.17%)</title><rect x="759.5" y="213" width="2.0" height="15.0" fill="rgb(235,144,3)" rx="2" ry="2" />
<text  x="762.46" y="223.5" ></text>
</g>
<g >
<title>rmqueue_bulk (21,204,793 samples, 0.04%)</title><rect x="780.0" y="325" width="0.5" height="15.0" fill="rgb(223,208,5)" rx="2" ry="2" />
<text  x="783.03" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (247,784,180 samples, 0.42%)</title><rect x="1183.4" y="453" width="4.9" height="15.0" fill="rgb(221,222,17)" rx="2" ry="2" />
<text  x="1186.35" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (60,215,784 samples, 0.10%)</title><rect x="10.9" y="357" width="1.2" height="15.0" fill="rgb(242,84,29)" rx="2" ry="2" />
<text  x="13.91" y="367.5" ></text>
</g>
<g >
<title>__free_pages (23,399,687 samples, 0.04%)</title><rect x="12.2" y="309" width="0.5" height="15.0" fill="rgb(247,202,30)" rx="2" ry="2" />
<text  x="15.24" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (444,701,300 samples, 0.76%)</title><rect x="13.1" y="293" width="9.0" height="15.0" fill="rgb(241,224,16)" rx="2" ry="2" />
<text  x="16.14" y="303.5" ></text>
</g>
<g >
<title>try_charge_memcg (13,275,019 samples, 0.02%)</title><rect x="27.1" y="341" width="0.2" height="15.0" fill="rgb(233,71,5)" rx="2" ry="2" />
<text  x="30.08" y="351.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (5,337,604 samples, 0.01%)</title><rect x="1182.1" y="325" width="0.1" height="15.0" fill="rgb(218,196,0)" rx="2" ry="2" />
<text  x="1185.11" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,194,419 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(216,179,49)" rx="2" ry="2" />
<text  x="13.16" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (228,612,586 samples, 0.39%)</title><rect x="1183.6" y="373" width="4.6" height="15.0" fill="rgb(208,28,35)" rx="2" ry="2" />
<text  x="1186.62" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (58,466,381 samples, 0.10%)</title><rect x="1169.5" y="261" width="1.2" height="15.0" fill="rgb(225,115,4)" rx="2" ry="2" />
<text  x="1172.50" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (19,323,185 samples, 0.03%)</title><rect x="1179.8" y="357" width="0.4" height="15.0" fill="rgb(214,13,51)" rx="2" ry="2" />
<text  x="1182.80" y="367.5" ></text>
</g>
<g >
<title>irq_work_tick (214,385,352 samples, 0.37%)</title><rect x="1183.7" y="341" width="4.3" height="15.0" fill="rgb(238,131,6)" rx="2" ry="2" />
<text  x="1186.67" y="351.5" ></text>
</g>
<g >
<title>__put_compound_page (59,768,933 samples, 0.10%)</title><rect x="10.9" y="309" width="1.2" height="15.0" fill="rgb(246,148,47)" rx="2" ry="2" />
<text  x="13.92" y="319.5" ></text>
</g>
<g >
<title>__cond_resched (81,054,884 samples, 0.14%)</title><rect x="25.2" y="373" width="1.7" height="15.0" fill="rgb(242,34,34)" rx="2" ry="2" />
<text  x="28.24" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (57,705,615,944 samples, 98.28%)</title><rect x="23.2" y="421" width="1159.7" height="15.0" fill="rgb(210,172,30)" rx="2" ry="2" />
<text  x="26.18" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>do_sys_openat2 (10,265,620 samples, 0.02%)</title><rect x="10.7" y="405" width="0.2" height="15.0" fill="rgb(254,177,48)" rx="2" ry="2" />
<text  x="13.66" y="415.5" ></text>
</g>
<g >
<title>__GI___openat64 (16,634,144 samples, 0.03%)</title><rect x="10.2" y="469" width="0.3" height="15.0" fill="rgb(212,157,30)" rx="2" ry="2" />
<text  x="13.16" y="479.5" ></text>
</g>
<g >
<title>lock_page_memcg (8,933,945 samples, 0.02%)</title><rect x="13.0" y="293" width="0.1" height="15.0" fill="rgb(239,218,2)" rx="2" ry="2" />
<text  x="15.96" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (10,921,648 samples, 0.02%)</title><rect x="1188.0" y="341" width="0.2" height="15.0" fill="rgb(230,16,9)" rx="2" ry="2" />
<text  x="1190.99" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages (97,410,955 samples, 0.17%)</title><rect x="1180.7" y="341" width="2.0" height="15.0" fill="rgb(213,39,23)" rx="2" ry="2" />
<text  x="1183.71" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (19,585,877 samples, 0.03%)</title><rect x="1179.8" y="373" width="0.4" height="15.0" fill="rgb(237,83,35)" rx="2" ry="2" />
<text  x="1182.80" y="383.5" ></text>
</g>
<g >
<title>pci_conf1_read (49,117,436 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(218,177,52)" rx="2" ry="2" />
<text  x="1191.99" y="287.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (18,187,395 samples, 0.03%)</title><rect x="1179.8" y="341" width="0.4" height="15.0" fill="rgb(206,56,31)" rx="2" ry="2" />
<text  x="1182.82" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,047,604 samples, 0.01%)</title><rect x="13.3" y="213" width="0.2" height="15.0" fill="rgb(242,160,45)" rx="2" ry="2" />
<text  x="16.35" y="223.5" ></text>
</g>
<g >
<title>__count_memcg_events (6,894,235 samples, 0.01%)</title><rect x="23.4" y="405" width="0.1" height="15.0" fill="rgb(236,125,25)" rx="2" ry="2" />
<text  x="26.39" y="415.5" ></text>
</g>
<g >
<title>unmap_single_vma (497,389,206 samples, 0.85%)</title><rect x="12.1" y="357" width="10.0" height="15.0" fill="rgb(251,130,3)" rx="2" ry="2" />
<text  x="15.12" y="367.5" ></text>
</g>
<g >
<title>free_transhuge_page (426,198,621 samples, 0.73%)</title><rect x="13.5" y="245" width="8.6" height="15.0" fill="rgb(240,137,37)" rx="2" ry="2" />
<text  x="16.51" y="255.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (5,126,793 samples, 0.01%)</title><rect x="27.8" y="341" width="0.1" height="15.0" fill="rgb(214,85,27)" rx="2" ry="2" />
<text  x="30.84" y="351.5" ></text>
</g>
<g >
<title>_prb_read_valid (141,062,091 samples, 0.24%)</title><rect x="1183.9" y="245" width="2.8" height="15.0" fill="rgb(229,162,41)" rx="2" ry="2" />
<text  x="1186.90" y="255.5" ></text>
</g>
<g >
<title>prb_read_valid (46,282,081 samples, 0.08%)</title><rect x="1169.6" y="133" width="1.0" height="15.0" fill="rgb(208,168,7)" rx="2" ry="2" />
<text  x="1172.64" y="143.5" ></text>
</g>
<g >
<title>gups_vanilla (58,716,360,111 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(209,12,49)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>irq_work_run_list (49,877,940 samples, 0.08%)</title><rect x="1169.6" y="197" width="1.0" height="15.0" fill="rgb(205,55,14)" rx="2" ry="2" />
<text  x="1172.60" y="207.5" ></text>
</g>
<g >
<title>zap_huge_pmd (495,513,659 samples, 0.84%)</title><rect x="12.2" y="325" width="9.9" height="15.0" fill="rgb(210,76,10)" rx="2" ry="2" />
<text  x="15.16" y="335.5" ></text>
</g>
<g >
<title>__vm_munmap (558,232,600 samples, 0.95%)</title><rect x="10.9" y="421" width="11.2" height="15.0" fill="rgb(241,53,34)" rx="2" ry="2" />
<text  x="13.90" y="431.5" ></text>
</g>
<g >
<title>irq_work_run_list (86,366,633 samples, 0.15%)</title><rect x="759.6" y="149" width="1.8" height="15.0" fill="rgb(246,137,10)" rx="2" ry="2" />
<text  x="762.62" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (61,008,109 samples, 0.10%)</title><rect x="1169.5" y="325" width="1.2" height="15.0" fill="rgb(211,146,33)" rx="2" ry="2" />
<text  x="1172.49" y="335.5" ></text>
</g>
<g >
<title>ksys_read (53,047,462 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(217,225,10)" rx="2" ry="2" />
<text  x="1191.91" y="431.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (10,140,725 samples, 0.02%)</title><rect x="1180.2" y="373" width="0.2" height="15.0" fill="rgb(230,83,31)" rx="2" ry="2" />
<text  x="1183.19" y="383.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (5,621,346 samples, 0.01%)</title><rect x="759.5" y="197" width="0.1" height="15.0" fill="rgb(253,18,23)" rx="2" ry="2" />
<text  x="762.48" y="207.5" ></text>
</g>
<g >
<title>__page_cache_release (10,048,886 samples, 0.02%)</title><rect x="13.3" y="245" width="0.2" height="15.0" fill="rgb(234,122,2)" rx="2" ry="2" />
<text  x="16.31" y="255.5" ></text>
</g>
<g >
<title>free_pcp_prepare (6,877,886 samples, 0.01%)</title><rect x="12.5" y="277" width="0.1" height="15.0" fill="rgb(235,87,8)" rx="2" ry="2" />
<text  x="15.50" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (558,321,877 samples, 0.95%)</title><rect x="10.9" y="469" width="11.2" height="15.0" fill="rgb(247,188,53)" rx="2" ry="2" />
<text  x="13.90" y="479.5" ></text>
</g>
<g >
<title>irq_work_single (214,028,528 samples, 0.36%)</title><rect x="1183.7" y="309" width="4.3" height="15.0" fill="rgb(224,22,43)" rx="2" ry="2" />
<text  x="1186.67" y="319.5" ></text>
</g>
<g >
<title>new_sync_read (53,047,462 samples, 0.09%)</title><rect x="1188.9" y="389" width="1.1" height="15.0" fill="rgb(235,124,44)" rx="2" ry="2" />
<text  x="1191.91" y="399.5" ></text>
</g>
<g >
<title>desc_read (12,553,126 samples, 0.02%)</title><rect x="760.4" y="37" width="0.3" height="15.0" fill="rgb(237,106,15)" rx="2" ry="2" />
<text  x="763.41" y="47.5" ></text>
</g>
<g >
<title>page_counter_uncharge (6,852,625 samples, 0.01%)</title><rect x="13.9" y="181" width="0.1" height="15.0" fill="rgb(229,48,27)" rx="2" ry="2" />
<text  x="16.90" y="191.5" ></text>
</g>
<g >
<title>do_sys_open (10,353,676 samples, 0.02%)</title><rect x="10.7" y="421" width="0.2" height="15.0" fill="rgb(250,183,39)" rx="2" ry="2" />
<text  x="13.66" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (240,023,979 samples, 0.41%)</title><rect x="1183.4" y="389" width="4.8" height="15.0" fill="rgb(251,126,2)" rx="2" ry="2" />
<text  x="1186.39" y="399.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (5,445,608 samples, 0.01%)</title><rect x="759.5" y="181" width="0.1" height="15.0" fill="rgb(234,3,26)" rx="2" ry="2" />
<text  x="762.49" y="191.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (5,450,506 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(215,119,26)" rx="2" ry="2" />
<text  x="13.68" y="367.5" ></text>
</g>
<g >
<title>charge_memcg (21,143,931 samples, 0.04%)</title><rect x="26.9" y="357" width="0.4" height="15.0" fill="rgb(215,166,50)" rx="2" ry="2" />
<text  x="29.92" y="367.5" ></text>
</g>
<g >
<title>__GI___openat64 (10,704,156 samples, 0.02%)</title><rect x="10.7" y="485" width="0.2" height="15.0" fill="rgb(244,140,21)" rx="2" ry="2" />
<text  x="13.66" y="495.5" ></text>
</g>
<g >
<title>__cond_resched (34,966,702 samples, 0.06%)</title><rect x="782.2" y="357" width="0.7" height="15.0" fill="rgb(242,66,9)" rx="2" ry="2" />
<text  x="785.18" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (7,544,734 samples, 0.01%)</title><rect x="761.4" y="165" width="0.1" height="15.0" fill="rgb(229,203,11)" rx="2" ry="2" />
<text  x="764.37" y="175.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (12,489,615 samples, 0.02%)</title><rect x="1180.5" y="357" width="0.2" height="15.0" fill="rgb(221,49,17)" rx="2" ry="2" />
<text  x="1183.45" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages (37,457,307,175 samples, 63.79%)</title><rect x="27.7" y="357" width="752.8" height="15.0" fill="rgb(218,97,9)" rx="2" ry="2" />
<text  x="30.69" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>__do_munmap (558,232,600 samples, 0.95%)</title><rect x="10.9" y="405" width="11.2" height="15.0" fill="rgb(214,131,27)" rx="2" ry="2" />
<text  x="13.90" y="415.5" ></text>
</g>
<g >
<title>uncharge_batch (16,206,043 samples, 0.03%)</title><rect x="13.7" y="197" width="0.3" height="15.0" fill="rgb(250,198,49)" rx="2" ry="2" />
<text  x="16.72" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (8,108,591 samples, 0.01%)</title><rect x="21.9" y="197" width="0.2" height="15.0" fill="rgb(239,56,46)" rx="2" ry="2" />
<text  x="24.90" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (53,740,304 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(230,168,47)" rx="2" ry="2" />
<text  x="1191.90" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,617,103 samples, 0.02%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(215,109,38)" rx="2" ry="2" />
<text  x="13.66" y="463.5" ></text>
</g>
<g >
<title>update_process_times (54,436,017 samples, 0.09%)</title><rect x="1169.6" y="229" width="1.1" height="15.0" fill="rgb(238,203,46)" rx="2" ry="2" />
<text  x="1172.58" y="239.5" ></text>
</g>
<g >
<title>PageHuge (6,223,421 samples, 0.01%)</title><rect x="13.2" y="245" width="0.1" height="15.0" fill="rgb(239,143,12)" rx="2" ry="2" />
<text  x="16.18" y="255.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (5,894,962 samples, 0.01%)</title><rect x="12.5" y="245" width="0.1" height="15.0" fill="rgb(216,203,1)" rx="2" ry="2" />
<text  x="15.52" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,634,144 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(217,218,53)" rx="2" ry="2" />
<text  x="13.16" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (558,321,877 samples, 0.95%)</title><rect x="10.9" y="453" width="11.2" height="15.0" fill="rgb(238,228,22)" rx="2" ry="2" />
<text  x="13.90" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (558,321,877 samples, 0.95%)</title><rect x="10.9" y="437" width="11.2" height="15.0" fill="rgb(231,194,18)" rx="2" ry="2" />
<text  x="13.90" y="447.5" ></text>
</g>
<g >
<title>memcg_check_events (5,434,447 samples, 0.01%)</title><rect x="13.8" y="181" width="0.1" height="15.0" fill="rgb(237,153,7)" rx="2" ry="2" />
<text  x="16.78" y="191.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (47,098,719 samples, 0.08%)</title><rect x="1185.5" y="229" width="0.9" height="15.0" fill="rgb(235,183,15)" rx="2" ry="2" />
<text  x="1188.46" y="239.5" ></text>
</g>
<g >
<title>free_pcp_prepare (53,887,786 samples, 0.09%)</title><rect x="11.0" y="245" width="1.1" height="15.0" fill="rgb(248,60,51)" rx="2" ry="2" />
<text  x="14.02" y="255.5" ></text>
</g>
<g >
<title>get_data.isra.0 (16,372,131 samples, 0.03%)</title><rect x="1186.4" y="229" width="0.3" height="15.0" fill="rgb(223,175,49)" rx="2" ry="2" />
<text  x="1189.40" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (54,436,017 samples, 0.09%)</title><rect x="1169.6" y="245" width="1.1" height="15.0" fill="rgb(217,110,43)" rx="2" ry="2" />
<text  x="1172.58" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (446,477,859 samples, 0.76%)</title><rect x="13.1" y="309" width="9.0" height="15.0" fill="rgb(216,225,5)" rx="2" ry="2" />
<text  x="16.14" y="319.5" ></text>
</g>
<g >
<title>unmap_region (558,232,600 samples, 0.95%)</title><rect x="10.9" y="389" width="11.2" height="15.0" fill="rgb(245,197,3)" rx="2" ry="2" />
<text  x="13.90" y="399.5" ></text>
</g>
<g >
<title>free_compound_page (56,740,184 samples, 0.10%)</title><rect x="11.0" y="277" width="1.1" height="15.0" fill="rgb(227,57,8)" rx="2" ry="2" />
<text  x="13.98" y="287.5" ></text>
</g>
<g >
<title>[unknown] (30,125,308 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(210,211,36)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7,342,657 samples, 0.01%)</title><rect x="1180.6" y="341" width="0.1" height="15.0" fill="rgb(213,207,24)" rx="2" ry="2" />
<text  x="1183.55" y="351.5" ></text>
</g>
<g >
<title>memcpy_erms (25,280,027 samples, 0.04%)</title><rect x="760.8" y="69" width="0.5" height="15.0" fill="rgb(252,0,15)" rx="2" ry="2" />
<text  x="763.82" y="79.5" ></text>
</g>
</g>
</svg>
