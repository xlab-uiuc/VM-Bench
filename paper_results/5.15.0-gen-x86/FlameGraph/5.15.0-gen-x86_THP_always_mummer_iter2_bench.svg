<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>scanprefixfromnodestree (99,678,259,038 samples, 41.39%)</title><rect x="581.9" y="309" width="488.4" height="15.0" fill="rgb(211,158,8)" rx="2" ry="2" />
<text  x="584.92" y="319.5" >scanprefixfromnodestree</text>
</g>
<g >
<title>file_update_time (58,488,462 samples, 0.02%)</title><rect x="16.5" y="133" width="0.2" height="15.0" fill="rgb(246,79,2)" rx="2" ry="2" />
<text  x="19.45" y="143.5" ></text>
</g>
<g >
<title>block_write_end (37,410,314 samples, 0.02%)</title><rect x="19.0" y="117" width="0.1" height="15.0" fill="rgb(219,155,49)" rx="2" ry="2" />
<text  x="21.95" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (41,078,969 samples, 0.02%)</title><rect x="581.7" y="229" width="0.2" height="15.0" fill="rgb(245,45,19)" rx="2" ry="2" />
<text  x="584.71" y="239.5" ></text>
</g>
<g >
<title>__munmap (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="325" width="0.1" height="15.0" fill="rgb(251,203,31)" rx="2" ry="2" />
<text  x="1073.68" y="335.5" ></text>
</g>
<g >
<title>__ctype_tolower_loc (112,444,027 samples, 0.05%)</title><rect x="19.9" y="309" width="0.6" height="15.0" fill="rgb(242,40,23)" rx="2" ry="2" />
<text  x="22.93" y="319.5" ></text>
</g>
<g >
<title>prb_read_valid (327,514,948 samples, 0.14%)</title><rect x="1068.4" y="85" width="1.6" height="15.0" fill="rgb(249,160,20)" rx="2" ry="2" />
<text  x="1071.44" y="95.5" ></text>
</g>
<g >
<title>console_unlock (35,544,878 samples, 0.01%)</title><rect x="581.7" y="101" width="0.2" height="15.0" fill="rgb(225,199,39)" rx="2" ry="2" />
<text  x="584.73" y="111.5" ></text>
</g>
<g >
<title>alloc_buffer_head (34,738,294 samples, 0.01%)</title><rect x="17.0" y="85" width="0.2" height="15.0" fill="rgb(239,199,21)" rx="2" ry="2" />
<text  x="20.01" y="95.5" ></text>
</g>
<g >
<title>irq_work_run_list (37,772,403 samples, 0.02%)</title><rect x="1180.7" y="165" width="0.2" height="15.0" fill="rgb(230,32,19)" rx="2" ry="2" />
<text  x="1183.69" y="175.5" ></text>
</g>
<g >
<title>__page_cache_alloc (52,269,279 samples, 0.02%)</title><rect x="17.4" y="101" width="0.2" height="15.0" fill="rgb(233,66,11)" rx="2" ry="2" />
<text  x="20.39" y="111.5" ></text>
</g>
<g >
<title>_itoa_word (187,663,928 samples, 0.08%)</title><rect x="1078.0" y="309" width="0.9" height="15.0" fill="rgb(241,155,20)" rx="2" ry="2" />
<text  x="1080.96" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (20,478,359 samples, 0.01%)</title><rect x="19.2" y="213" width="0.1" height="15.0" fill="rgb(237,125,31)" rx="2" ry="2" />
<text  x="22.16" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (291,961,617 samples, 0.12%)</title><rect x="32.0" y="277" width="1.4" height="15.0" fill="rgb(206,106,11)" rx="2" ry="2" />
<text  x="35.02" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (289,124,194 samples, 0.12%)</title><rect x="32.0" y="245" width="1.4" height="15.0" fill="rgb(234,18,8)" rx="2" ry="2" />
<text  x="35.02" y="255.5" ></text>
</g>
<g >
<title>pos2pospair (39,911,374 samples, 0.02%)</title><rect x="12.7" y="293" width="0.2" height="15.0" fill="rgb(223,153,39)" rx="2" ry="2" />
<text  x="15.69" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (39,472,487 samples, 0.02%)</title><rect x="581.7" y="197" width="0.2" height="15.0" fill="rgb(216,220,52)" rx="2" ry="2" />
<text  x="584.72" y="207.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (559,584,464 samples, 0.23%)</title><rect x="16.4" y="181" width="2.7" height="15.0" fill="rgb(215,74,31)" rx="2" ry="2" />
<text  x="19.41" y="191.5" ></text>
</g>
<g >
<title>get_data.isra.0 (30,623,770 samples, 0.01%)</title><rect x="1069.6" y="53" width="0.1" height="15.0" fill="rgb(238,16,31)" rx="2" ry="2" />
<text  x="1072.56" y="63.5" ></text>
</g>
<g >
<title>linklocstree (482,270,127 samples, 0.20%)</title><rect x="1086.7" y="325" width="2.4" height="15.0" fill="rgb(249,156,43)" rx="2" ry="2" />
<text  x="1089.69" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (21,077,393 samples, 0.01%)</title><rect x="21.2" y="293" width="0.1" height="15.0" fill="rgb(217,91,28)" rx="2" ry="2" />
<text  x="24.19" y="303.5" ></text>
</g>
<g >
<title>update_time (55,290,826 samples, 0.02%)</title><rect x="16.5" y="117" width="0.2" height="15.0" fill="rgb(237,61,39)" rx="2" ry="2" />
<text  x="19.47" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="277" width="0.1" height="15.0" fill="rgb(234,215,54)" rx="2" ry="2" />
<text  x="1073.68" y="287.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (32,158,451 samples, 0.01%)</title><rect x="17.2" y="117" width="0.1" height="15.0" fill="rgb(220,109,25)" rx="2" ry="2" />
<text  x="20.18" y="127.5" ></text>
</g>
<g >
<title>irq_work_tick (25,896,473 samples, 0.01%)</title><rect x="1127.2" y="181" width="0.2" height="15.0" fill="rgb(236,200,50)" rx="2" ry="2" />
<text  x="1130.24" y="191.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (561,717,384 samples, 0.23%)</title><rect x="16.4" y="197" width="2.8" height="15.0" fill="rgb(220,28,21)" rx="2" ry="2" />
<text  x="19.41" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (352,927,058 samples, 0.15%)</title><rect x="524.6" y="229" width="1.7" height="15.0" fill="rgb(230,137,47)" rx="2" ry="2" />
<text  x="527.60" y="239.5" ></text>
</g>
<g >
<title>update_process_times (39,557,559 samples, 0.02%)</title><rect x="1180.7" y="197" width="0.2" height="15.0" fill="rgb(223,48,46)" rx="2" ry="2" />
<text  x="1183.68" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (142,132,215 samples, 0.06%)</title><rect x="531.7" y="261" width="0.7" height="15.0" fill="rgb(216,105,36)" rx="2" ry="2" />
<text  x="534.70" y="271.5" ></text>
</g>
<g >
<title>irq_work_tick (316,772,491 samples, 0.13%)</title><rect x="524.7" y="165" width="1.5" height="15.0" fill="rgb(224,160,2)" rx="2" ry="2" />
<text  x="527.69" y="175.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (55,024,066 samples, 0.02%)</title><rect x="16.5" y="85" width="0.2" height="15.0" fill="rgb(209,159,19)" rx="2" ry="2" />
<text  x="19.47" y="95.5" ></text>
</g>
<g >
<title>irq_work_single (315,612,260 samples, 0.13%)</title><rect x="524.7" y="133" width="1.5" height="15.0" fill="rgb(221,202,30)" rx="2" ry="2" />
<text  x="527.70" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="293" width="0.1" height="15.0" fill="rgb(213,133,38)" rx="2" ry="2" />
<text  x="1073.68" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (290,631,305 samples, 0.12%)</title><rect x="32.0" y="261" width="1.4" height="15.0" fill="rgb(211,130,1)" rx="2" ry="2" />
<text  x="35.02" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (361,405,385 samples, 0.15%)</title><rect x="524.6" y="277" width="1.8" height="15.0" fill="rgb(210,43,50)" rx="2" ry="2" />
<text  x="527.60" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,235,058 samples, 0.02%)</title><rect x="1180.7" y="293" width="0.2" height="15.0" fill="rgb(213,104,51)" rx="2" ry="2" />
<text  x="1183.68" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (28,662,021 samples, 0.01%)</title><rect x="1127.2" y="213" width="0.2" height="15.0" fill="rgb(220,208,15)" rx="2" ry="2" />
<text  x="1130.23" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (287,606,431 samples, 0.12%)</title><rect x="32.0" y="229" width="1.4" height="15.0" fill="rgb(210,119,8)" rx="2" ry="2" />
<text  x="35.02" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,750,772 samples, 0.01%)</title><rect x="57.5" y="229" width="0.1" height="15.0" fill="rgb(236,94,31)" rx="2" ry="2" />
<text  x="60.51" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (41,525,536 samples, 0.02%)</title><rect x="581.7" y="245" width="0.2" height="15.0" fill="rgb(215,126,17)" rx="2" ry="2" />
<text  x="584.71" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (31,073,557 samples, 0.01%)</title><rect x="1127.2" y="277" width="0.2" height="15.0" fill="rgb(227,101,28)" rx="2" ry="2" />
<text  x="1130.23" y="287.5" ></text>
</g>
<g >
<title>linklocstree (1,611,038,828 samples, 0.67%)</title><rect x="57.6" y="309" width="7.9" height="15.0" fill="rgb(226,24,44)" rx="2" ry="2" />
<text  x="60.64" y="319.5" ></text>
</g>
<g >
<title>[mummer] (352,191,204 samples, 0.15%)</title><rect x="10.7" y="309" width="1.7" height="15.0" fill="rgb(217,30,53)" rx="2" ry="2" />
<text  x="13.69" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (394,116,967 samples, 0.16%)</title><rect x="1068.3" y="261" width="1.9" height="15.0" fill="rgb(224,14,48)" rx="2" ry="2" />
<text  x="1071.28" y="271.5" ></text>
</g>
<g >
<title>unmap_region (21,077,393 samples, 0.01%)</title><rect x="21.2" y="213" width="0.1" height="15.0" fill="rgb(241,64,5)" rx="2" ry="2" />
<text  x="24.19" y="223.5" ></text>
</g>
<g >
<title>insertleaf (152,933,205 samples, 0.06%)</title><rect x="56.9" y="309" width="0.7" height="15.0" fill="rgb(234,50,27)" rx="2" ry="2" />
<text  x="59.89" y="319.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (53,780,694 samples, 0.02%)</title><rect x="16.5" y="69" width="0.2" height="15.0" fill="rgb(223,210,14)" rx="2" ry="2" />
<text  x="19.48" y="79.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (27,866,079 samples, 0.01%)</title><rect x="21.1" y="309" width="0.1" height="15.0" fill="rgb(239,141,52)" rx="2" ry="2" />
<text  x="24.06" y="319.5" ></text>
</g>
<g >
<title>alloc_page_buffers (35,540,687 samples, 0.01%)</title><rect x="17.0" y="101" width="0.2" height="15.0" fill="rgb(214,163,40)" rx="2" ry="2" />
<text  x="20.01" y="111.5" ></text>
</g>
<g >
<title>console_unlock (306,417,015 samples, 0.13%)</title><rect x="524.7" y="101" width="1.5" height="15.0" fill="rgb(233,83,22)" rx="2" ry="2" />
<text  x="527.71" y="111.5" ></text>
</g>
<g >
<title>unmap_page_range (22,950,039 samples, 0.01%)</title><rect x="1070.7" y="181" width="0.1" height="15.0" fill="rgb(223,38,8)" rx="2" ry="2" />
<text  x="1073.70" y="191.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (165,645,455 samples, 0.07%)</title><rect x="17.6" y="101" width="0.9" height="15.0" fill="rgb(247,220,41)" rx="2" ry="2" />
<text  x="20.64" y="111.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (268,810,042 samples, 0.11%)</title><rect x="32.1" y="213" width="1.3" height="15.0" fill="rgb(245,94,12)" rx="2" ry="2" />
<text  x="35.10" y="223.5" ></text>
</g>
<g >
<title>__printf_chk (1,643,416,118 samples, 0.68%)</title><rect x="1070.8" y="325" width="8.1" height="15.0" fill="rgb(242,40,26)" rx="2" ry="2" />
<text  x="1073.83" y="335.5" ></text>
</g>
<g >
<title>__set_page_dirty (25,478,029 samples, 0.01%)</title><rect x="19.0" y="69" width="0.1" height="15.0" fill="rgb(227,5,52)" rx="2" ry="2" />
<text  x="22.00" y="79.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (140,812,491 samples, 0.06%)</title><rect x="17.7" y="85" width="0.6" height="15.0" fill="rgb(217,66,26)" rx="2" ry="2" />
<text  x="20.65" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,839,967 samples, 0.01%)</title><rect x="57.5" y="245" width="0.1" height="15.0" fill="rgb(245,205,47)" rx="2" ry="2" />
<text  x="60.51" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (24,045,286 samples, 0.01%)</title><rect x="57.5" y="213" width="0.1" height="15.0" fill="rgb(231,127,27)" rx="2" ry="2" />
<text  x="60.51" y="223.5" ></text>
</g>
<g >
<title>scanprefix (283,493,784 samples, 0.12%)</title><rect x="1127.4" y="325" width="1.4" height="15.0" fill="rgb(212,94,35)" rx="2" ry="2" />
<text  x="1130.40" y="335.5" ></text>
</g>
<g >
<title>prb_read_valid (35,541,211 samples, 0.01%)</title><rect x="1180.7" y="101" width="0.2" height="15.0" fill="rgb(214,49,26)" rx="2" ry="2" />
<text  x="1183.69" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (364,439,555 samples, 0.15%)</title><rect x="524.6" y="293" width="1.8" height="15.0" fill="rgb(252,174,54)" rx="2" ry="2" />
<text  x="527.59" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (42,770,021 samples, 0.02%)</title><rect x="1180.7" y="309" width="0.2" height="15.0" fill="rgb(236,115,18)" rx="2" ry="2" />
<text  x="1183.67" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (168,021,142 samples, 0.07%)</title><rect x="32.1" y="133" width="0.8" height="15.0" fill="rgb(209,146,38)" rx="2" ry="2" />
<text  x="35.11" y="143.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (259,103,738 samples, 0.11%)</title><rect x="12.9" y="309" width="1.3" height="15.0" fill="rgb(211,218,52)" rx="2" ry="2" />
<text  x="15.92" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (32,240,159 samples, 0.01%)</title><rect x="17.0" y="69" width="0.2" height="15.0" fill="rgb(254,72,29)" rx="2" ry="2" />
<text  x="20.02" y="79.5" ></text>
</g>
<g >
<title>create_empty_buffers (41,047,702 samples, 0.02%)</title><rect x="17.0" y="117" width="0.2" height="15.0" fill="rgb(216,126,30)" rx="2" ry="2" />
<text  x="19.98" y="127.5" ></text>
</g>
<g >
<title>update_process_times (39,472,487 samples, 0.02%)</title><rect x="581.7" y="181" width="0.2" height="15.0" fill="rgb(218,94,47)" rx="2" ry="2" />
<text  x="584.72" y="191.5" ></text>
</g>
<g >
<title>scanprefixstree (1,440,834,861 samples, 0.60%)</title><rect x="1180.9" y="325" width="7.0" height="15.0" fill="rgb(215,137,46)" rx="2" ry="2" />
<text  x="1183.89" y="335.5" ></text>
</g>
<g >
<title>memcpy_erms (59,111,823 samples, 0.02%)</title><rect x="1069.8" y="69" width="0.2" height="15.0" fill="rgb(208,210,20)" rx="2" ry="2" />
<text  x="1072.75" y="79.5" ></text>
</g>
<g >
<title>clear_page_erms (91,514,360 samples, 0.04%)</title><rect x="33.0" y="181" width="0.4" height="15.0" fill="rgb(220,2,13)" rx="2" ry="2" />
<text  x="35.96" y="191.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (77,355,474 samples, 0.03%)</title><rect x="18.6" y="117" width="0.4" height="15.0" fill="rgb(251,70,34)" rx="2" ry="2" />
<text  x="21.57" y="127.5" ></text>
</g>
<g >
<title>__vm_munmap (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="261" width="0.1" height="15.0" fill="rgb(215,8,26)" rx="2" ry="2" />
<text  x="1073.68" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (562,874,363 samples, 0.23%)</title><rect x="16.4" y="213" width="2.8" height="15.0" fill="rgb(245,97,46)" rx="2" ry="2" />
<text  x="19.40" y="223.5" ></text>
</g>
<g >
<title>prb_read_valid (24,110,444 samples, 0.01%)</title><rect x="1127.2" y="101" width="0.2" height="15.0" fill="rgb(230,3,4)" rx="2" ry="2" />
<text  x="1130.24" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (24,929,433 samples, 0.01%)</title><rect x="57.5" y="277" width="0.1" height="15.0" fill="rgb(210,175,18)" rx="2" ry="2" />
<text  x="60.51" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (21,077,393 samples, 0.01%)</title><rect x="21.2" y="261" width="0.1" height="15.0" fill="rgb(225,105,18)" rx="2" ry="2" />
<text  x="24.19" y="271.5" ></text>
</g>
<g >
<title>rescan (7,811,730,386 samples, 3.24%)</title><rect x="1089.1" y="325" width="38.3" height="15.0" fill="rgb(223,47,38)" rx="2" ry="2" />
<text  x="1092.11" y="335.5" >res..</text>
</g>
<g >
<title>update_process_times (372,242,156 samples, 0.15%)</title><rect x="1068.4" y="181" width="1.8" height="15.0" fill="rgb(234,144,33)" rx="2" ry="2" />
<text  x="1071.36" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (356,139,733 samples, 0.15%)</title><rect x="524.6" y="245" width="1.7" height="15.0" fill="rgb(246,217,21)" rx="2" ry="2" />
<text  x="527.60" y="255.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,018,609,901 samples, 0.42%)</title><rect x="1073.0" y="309" width="5.0" height="15.0" fill="rgb(237,23,14)" rx="2" ry="2" />
<text  x="1075.97" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (635,915,094 samples, 0.26%)</title><rect x="16.2" y="277" width="3.1" height="15.0" fill="rgb(240,117,41)" rx="2" ry="2" />
<text  x="19.20" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (21,298,723 samples, 0.01%)</title><rect x="18.1" y="69" width="0.1" height="15.0" fill="rgb(208,120,51)" rx="2" ry="2" />
<text  x="21.09" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (340,604,441 samples, 0.14%)</title><rect x="524.7" y="197" width="1.6" height="15.0" fill="rgb(251,17,8)" rx="2" ry="2" />
<text  x="527.67" y="207.5" ></text>
</g>
<g >
<title>scanprefixfromnodestree (10,633,158,180 samples, 4.41%)</title><rect x="1128.8" y="325" width="52.1" height="15.0" fill="rgb(223,116,13)" rx="2" ry="2" />
<text  x="1131.79" y="335.5" >scanp..</text>
</g>
<g >
<title>getrecordnum.part.0 (55,395,370 samples, 0.02%)</title><rect x="12.4" y="293" width="0.3" height="15.0" fill="rgb(232,221,35)" rx="2" ry="2" />
<text  x="15.42" y="303.5" ></text>
</g>
<g >
<title>rescanstree (92,365,062,442 samples, 38.35%)</title><rect x="73.9" y="309" width="452.5" height="15.0" fill="rgb(254,108,12)" rx="2" ry="2" />
<text  x="76.88" y="319.5" >rescanstree</text>
</g>
<g >
<title>prep_new_page (171,821,846 samples, 0.07%)</title><rect x="32.1" y="149" width="0.8" height="15.0" fill="rgb(233,57,2)" rx="2" ry="2" />
<text  x="35.11" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (41,878,489 samples, 0.02%)</title><rect x="1180.7" y="277" width="0.2" height="15.0" fill="rgb(240,116,53)" rx="2" ry="2" />
<text  x="1183.68" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (42,749,025 samples, 0.02%)</title><rect x="17.4" y="53" width="0.2" height="15.0" fill="rgb(242,228,44)" rx="2" ry="2" />
<text  x="20.42" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (40,989,813 samples, 0.02%)</title><rect x="581.7" y="213" width="0.2" height="15.0" fill="rgb(251,88,26)" rx="2" ry="2" />
<text  x="584.71" y="223.5" ></text>
</g>
<g >
<title>unmap_single_vma (23,301,840 samples, 0.01%)</title><rect x="1070.7" y="197" width="0.1" height="15.0" fill="rgb(221,209,28)" rx="2" ry="2" />
<text  x="1073.70" y="207.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (32,065,957 samples, 0.01%)</title><rect x="19.0" y="85" width="0.1" height="15.0" fill="rgb(240,145,2)" rx="2" ry="2" />
<text  x="21.98" y="95.5" ></text>
</g>
<g >
<title>unmap_vmas (23,301,840 samples, 0.01%)</title><rect x="1070.7" y="213" width="0.1" height="15.0" fill="rgb(209,100,46)" rx="2" ry="2" />
<text  x="1073.70" y="223.5" ></text>
</g>
<g >
<title>findmaxmatchesonbothstrands (1,325,179,445 samples, 0.55%)</title><rect x="33.5" y="309" width="6.5" height="15.0" fill="rgb(226,10,37)" rx="2" ry="2" />
<text  x="36.50" y="319.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (75,754,209 samples, 0.03%)</title><rect x="18.6" y="101" width="0.4" height="15.0" fill="rgb(244,79,15)" rx="2" ry="2" />
<text  x="21.58" y="111.5" ></text>
</g>
<g >
<title>__alloc_pages (48,990,040 samples, 0.02%)</title><rect x="17.4" y="69" width="0.2" height="15.0" fill="rgb(221,146,24)" rx="2" ry="2" />
<text  x="20.39" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (41,614,763 samples, 0.02%)</title><rect x="581.7" y="261" width="0.2" height="15.0" fill="rgb(223,19,41)" rx="2" ry="2" />
<text  x="584.71" y="271.5" ></text>
</g>
<g >
<title>generic_update_time (55,202,871 samples, 0.02%)</title><rect x="16.5" y="101" width="0.2" height="15.0" fill="rgb(227,95,39)" rx="2" ry="2" />
<text  x="19.47" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (145,456,991 samples, 0.06%)</title><rect x="531.7" y="277" width="0.7" height="15.0" fill="rgb(245,123,53)" rx="2" ry="2" />
<text  x="534.70" y="287.5" ></text>
</g>
<g >
<title>irq_work_run_list (348,403,249 samples, 0.14%)</title><rect x="1068.4" y="149" width="1.7" height="15.0" fill="rgb(252,154,36)" rx="2" ry="2" />
<text  x="1071.38" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (160,798,556 samples, 0.07%)</title><rect x="531.6" y="293" width="0.8" height="15.0" fill="rgb(252,152,25)" rx="2" ry="2" />
<text  x="534.62" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (21,077,393 samples, 0.01%)</title><rect x="21.2" y="245" width="0.1" height="15.0" fill="rgb(227,220,26)" rx="2" ry="2" />
<text  x="24.19" y="255.5" ></text>
</g>
<g >
<title>[mummer] (109,617,281 samples, 0.05%)</title><rect x="10.0" y="325" width="0.5" height="15.0" fill="rgb(223,214,40)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>copy_page (63,024,448 samples, 0.03%)</title><rect x="531.9" y="181" width="0.3" height="15.0" fill="rgb(252,121,51)" rx="2" ry="2" />
<text  x="534.88" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (172,534,565 samples, 0.07%)</title><rect x="32.1" y="165" width="0.9" height="15.0" fill="rgb(225,142,29)" rx="2" ry="2" />
<text  x="35.11" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (24,929,433 samples, 0.01%)</title><rect x="57.5" y="293" width="0.1" height="15.0" fill="rgb(253,218,39)" rx="2" ry="2" />
<text  x="60.51" y="303.5" ></text>
</g>
<g >
<title>showmaximalmatch (58,984,021 samples, 0.02%)</title><rect x="1187.9" y="325" width="0.3" height="15.0" fill="rgb(251,23,36)" rx="2" ry="2" />
<text  x="1190.95" y="335.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (134,645,424 samples, 0.06%)</title><rect x="1071.4" y="309" width="0.7" height="15.0" fill="rgb(224,25,15)" rx="2" ry="2" />
<text  x="1074.41" y="319.5" ></text>
</g>
<g >
<title>_IO_padn (42,735,665 samples, 0.02%)</title><rect x="14.2" y="309" width="0.2" height="15.0" fill="rgb(243,52,21)" rx="2" ry="2" />
<text  x="17.19" y="319.5" ></text>
</g>
<g >
<title>prb_read_valid (294,097,328 samples, 0.12%)</title><rect x="524.8" y="85" width="1.4" height="15.0" fill="rgb(214,17,9)" rx="2" ry="2" />
<text  x="527.76" y="95.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (36,437,330 samples, 0.02%)</title><rect x="581.7" y="117" width="0.2" height="15.0" fill="rgb(210,45,42)" rx="2" ry="2" />
<text  x="584.72" y="127.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (37,593,782 samples, 0.02%)</title><rect x="1180.7" y="133" width="0.2" height="15.0" fill="rgb(208,199,1)" rx="2" ry="2" />
<text  x="1183.69" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (40,628,490 samples, 0.02%)</title><rect x="1180.7" y="229" width="0.2" height="15.0" fill="rgb(207,190,15)" rx="2" ry="2" />
<text  x="1183.68" y="239.5" ></text>
</g>
<g >
<title>irq_work_tick (37,861,335 samples, 0.02%)</title><rect x="1180.7" y="181" width="0.2" height="15.0" fill="rgb(250,42,52)" rx="2" ry="2" />
<text  x="1183.69" y="191.5" ></text>
</g>
<g >
<title>ext4_write_checks (64,461,624 samples, 0.03%)</title><rect x="16.4" y="165" width="0.3" height="15.0" fill="rgb(244,227,50)" rx="2" ry="2" />
<text  x="19.42" y="175.5" ></text>
</g>
<g >
<title>irq_work_single (36,616,136 samples, 0.02%)</title><rect x="581.7" y="133" width="0.2" height="15.0" fill="rgb(244,71,35)" rx="2" ry="2" />
<text  x="584.72" y="143.5" ></text>
</g>
<g >
<title>prb_read_valid (34,741,474 samples, 0.01%)</title><rect x="581.7" y="85" width="0.2" height="15.0" fill="rgb(250,156,16)" rx="2" ry="2" />
<text  x="584.73" y="95.5" ></text>
</g>
<g >
<title>__do_munmap (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="245" width="0.1" height="15.0" fill="rgb(254,17,48)" rx="2" ry="2" />
<text  x="1073.68" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (30,180,324 samples, 0.01%)</title><rect x="1127.2" y="229" width="0.2" height="15.0" fill="rgb(215,112,50)" rx="2" ry="2" />
<text  x="1130.23" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (117,740,458 samples, 0.05%)</title><rect x="20.5" y="309" width="0.6" height="15.0" fill="rgb(242,185,23)" rx="2" ry="2" />
<text  x="23.48" y="319.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (138,546,826 samples, 0.06%)</title><rect x="1072.3" y="309" width="0.7" height="15.0" fill="rgb(225,65,37)" rx="2" ry="2" />
<text  x="1075.29" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="309" width="0.1" height="15.0" fill="rgb(241,3,51)" rx="2" ry="2" />
<text  x="1073.68" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (31,073,557 samples, 0.01%)</title><rect x="1127.2" y="261" width="0.2" height="15.0" fill="rgb(221,187,23)" rx="2" ry="2" />
<text  x="1130.23" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (41,878,489 samples, 0.02%)</title><rect x="1180.7" y="261" width="0.2" height="15.0" fill="rgb(251,132,37)" rx="2" ry="2" />
<text  x="1183.68" y="271.5" ></text>
</g>
<g >
<title>_IO_putc (67,771,792 samples, 0.03%)</title><rect x="1070.3" y="325" width="0.3" height="15.0" fill="rgb(240,121,14)" rx="2" ry="2" />
<text  x="1073.31" y="335.5" ></text>
</g>
<g >
<title>alloc_pages (51,295,670 samples, 0.02%)</title><rect x="17.4" y="85" width="0.2" height="15.0" fill="rgb(246,35,36)" rx="2" ry="2" />
<text  x="20.39" y="95.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (347,688,853 samples, 0.14%)</title><rect x="1068.4" y="117" width="1.7" height="15.0" fill="rgb(221,103,5)" rx="2" ry="2" />
<text  x="1071.38" y="127.5" ></text>
</g>
<g >
<title>__munmap (21,077,393 samples, 0.01%)</title><rect x="21.2" y="309" width="0.1" height="15.0" fill="rgb(244,33,11)" rx="2" ry="2" />
<text  x="24.19" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (172,711,865 samples, 0.07%)</title><rect x="32.1" y="197" width="0.9" height="15.0" fill="rgb(207,160,40)" rx="2" ry="2" />
<text  x="35.11" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (39,646,809 samples, 0.02%)</title><rect x="1180.7" y="213" width="0.2" height="15.0" fill="rgb(208,142,30)" rx="2" ry="2" />
<text  x="1183.68" y="223.5" ></text>
</g>
<g >
<title>_IO_putc (354,977,523 samples, 0.15%)</title><rect x="14.4" y="309" width="1.7" height="15.0" fill="rgb(220,162,1)" rx="2" ry="2" />
<text  x="17.40" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (647,404,603 samples, 0.27%)</title><rect x="16.2" y="293" width="3.1" height="15.0" fill="rgb(218,137,33)" rx="2" ry="2" />
<text  x="19.16" y="303.5" ></text>
</g>
<g >
<title>desc_read (53,485,796 samples, 0.02%)</title><rect x="525.5" y="37" width="0.3" height="15.0" fill="rgb(240,209,47)" rx="2" ry="2" />
<text  x="528.53" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,985,844 samples, 0.02%)</title><rect x="1180.7" y="245" width="0.2" height="15.0" fill="rgb(208,196,15)" rx="2" ry="2" />
<text  x="1183.68" y="255.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (25,807,357 samples, 0.01%)</title><rect x="1127.2" y="133" width="0.2" height="15.0" fill="rgb(241,58,54)" rx="2" ry="2" />
<text  x="1130.24" y="143.5" ></text>
</g>
<g >
<title>vfs_write (604,463,556 samples, 0.25%)</title><rect x="16.3" y="229" width="3.0" height="15.0" fill="rgb(226,83,44)" rx="2" ry="2" />
<text  x="19.32" y="239.5" ></text>
</g>
<g >
<title>lru_cache_add (21,358,967 samples, 0.01%)</title><rect x="18.3" y="85" width="0.2" height="15.0" fill="rgb(221,22,17)" rx="2" ry="2" />
<text  x="21.35" y="95.5" ></text>
</g>
<g >
<title>file_modified (63,303,280 samples, 0.03%)</title><rect x="16.4" y="149" width="0.3" height="15.0" fill="rgb(206,71,9)" rx="2" ry="2" />
<text  x="19.43" y="159.5" ></text>
</g>
<g >
<title>console_unlock (25,182,064 samples, 0.01%)</title><rect x="1127.2" y="117" width="0.2" height="15.0" fill="rgb(253,228,30)" rx="2" ry="2" />
<text  x="1130.24" y="127.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (31,323,158 samples, 0.01%)</title><rect x="10.5" y="309" width="0.2" height="15.0" fill="rgb(205,76,32)" rx="2" ry="2" />
<text  x="13.54" y="319.5" ></text>
</g>
<g >
<title>_IO_padn (45,345,564 samples, 0.02%)</title><rect x="1072.1" y="309" width="0.2" height="15.0" fill="rgb(236,147,22)" rx="2" ry="2" />
<text  x="1075.07" y="319.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (37,232,204 samples, 0.02%)</title><rect x="19.0" y="101" width="0.1" height="15.0" fill="rgb(235,201,50)" rx="2" ry="2" />
<text  x="21.95" y="111.5" ></text>
</g>
<g >
<title>irq_work_run_list (36,616,136 samples, 0.02%)</title><rect x="581.7" y="149" width="0.2" height="15.0" fill="rgb(247,28,18)" rx="2" ry="2" />
<text  x="584.72" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (399,204,939 samples, 0.17%)</title><rect x="1068.3" y="277" width="1.9" height="15.0" fill="rgb(238,170,7)" rx="2" ry="2" />
<text  x="1071.28" y="287.5" ></text>
</g>
<g >
<title>irq_work_single (348,046,295 samples, 0.14%)</title><rect x="1068.4" y="133" width="1.7" height="15.0" fill="rgb(222,205,21)" rx="2" ry="2" />
<text  x="1071.38" y="143.5" ></text>
</g>
<g >
<title>showsequencedescription.isra.0 (360,218,159 samples, 0.15%)</title><rect x="1188.2" y="325" width="1.8" height="15.0" fill="rgb(223,97,24)" rx="2" ry="2" />
<text  x="1191.23" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (31,341,150 samples, 0.01%)</title><rect x="1127.2" y="293" width="0.2" height="15.0" fill="rgb(220,145,52)" rx="2" ry="2" />
<text  x="1130.23" y="303.5" ></text>
</g>
<g >
<title>_prb_read_valid (26,611,065 samples, 0.01%)</title><rect x="1180.7" y="85" width="0.1" height="15.0" fill="rgb(229,42,1)" rx="2" ry="2" />
<text  x="1183.69" y="95.5" ></text>
</g>
<g >
<title>irq_work_tick (36,794,620 samples, 0.02%)</title><rect x="581.7" y="165" width="0.2" height="15.0" fill="rgb(231,211,17)" rx="2" ry="2" />
<text  x="584.72" y="175.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (28,073,726 samples, 0.01%)</title><rect x="18.7" y="69" width="0.2" height="15.0" fill="rgb(223,61,48)" rx="2" ry="2" />
<text  x="21.75" y="79.5" ></text>
</g>
<g >
<title>generic_perform_write (491,471,992 samples, 0.20%)</title><rect x="16.7" y="165" width="2.4" height="15.0" fill="rgb(216,4,8)" rx="2" ry="2" />
<text  x="19.74" y="175.5" ></text>
</g>
<g >
<title>mummer (240,854,525,687 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(228,153,7)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >mummer</text>
</g>
<g >
<title>handle_mm_fault (139,702,891 samples, 0.06%)</title><rect x="531.7" y="245" width="0.7" height="15.0" fill="rgb(221,104,52)" rx="2" ry="2" />
<text  x="534.71" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (25,896,473 samples, 0.01%)</title><rect x="1127.2" y="149" width="0.2" height="15.0" fill="rgb(205,99,43)" rx="2" ry="2" />
<text  x="1130.24" y="159.5" ></text>
</g>
<g >
<title>constructprogressstree (2,490,340,216 samples, 1.03%)</title><rect x="21.3" y="309" width="12.2" height="15.0" fill="rgb(205,49,44)" rx="2" ry="2" />
<text  x="24.30" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (25,896,473 samples, 0.01%)</title><rect x="1127.2" y="165" width="0.2" height="15.0" fill="rgb(240,152,48)" rx="2" ry="2" />
<text  x="1130.24" y="175.5" ></text>
</g>
<g >
<title>_prb_read_valid (28,756,696 samples, 0.01%)</title><rect x="581.7" y="69" width="0.2" height="15.0" fill="rgb(229,37,36)" rx="2" ry="2" />
<text  x="584.73" y="79.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (386,707,038 samples, 0.16%)</title><rect x="1068.3" y="229" width="1.9" height="15.0" fill="rgb(233,80,34)" rx="2" ry="2" />
<text  x="1071.29" y="239.5" ></text>
</g>
<g >
<title>[unknown] (95,393,929 samples, 0.04%)</title><rect x="12.4" y="309" width="0.5" height="15.0" fill="rgb(254,47,23)" rx="2" ry="2" />
<text  x="15.42" y="319.5" ></text>
</g>
<g >
<title>console_unlock (337,692,923 samples, 0.14%)</title><rect x="1068.4" y="101" width="1.6" height="15.0" fill="rgb(247,104,29)" rx="2" ry="2" />
<text  x="1071.39" y="111.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (337,365,260 samples, 0.14%)</title><rect x="16.9" y="149" width="1.7" height="15.0" fill="rgb(241,92,30)" rx="2" ry="2" />
<text  x="19.91" y="159.5" ></text>
</g>
<g >
<title>desc_read (61,881,103 samples, 0.03%)</title><rect x="1069.3" y="37" width="0.3" height="15.0" fill="rgb(231,221,47)" rx="2" ry="2" />
<text  x="1072.26" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_write (626,195,206 samples, 0.26%)</title><rect x="16.2" y="261" width="3.1" height="15.0" fill="rgb(247,64,2)" rx="2" ry="2" />
<text  x="19.21" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (24,929,433 samples, 0.01%)</title><rect x="57.5" y="261" width="0.1" height="15.0" fill="rgb(224,20,45)" rx="2" ry="2" />
<text  x="60.51" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (403,316,511 samples, 0.17%)</title><rect x="1068.3" y="293" width="1.9" height="15.0" fill="rgb(208,65,25)" rx="2" ry="2" />
<text  x="1071.26" y="303.5" ></text>
</g>
<g >
<title>wp_page_copy (106,389,824 samples, 0.04%)</title><rect x="531.8" y="197" width="0.5" height="15.0" fill="rgb(250,129,18)" rx="2" ry="2" />
<text  x="534.78" y="207.5" ></text>
</g>
<g >
<title>irq_work_tick (348,849,422 samples, 0.14%)</title><rect x="1068.4" y="165" width="1.7" height="15.0" fill="rgb(212,170,13)" rx="2" ry="2" />
<text  x="1071.37" y="175.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (45,006,901 samples, 0.02%)</title><rect x="18.7" y="85" width="0.3" height="15.0" fill="rgb(221,132,15)" rx="2" ry="2" />
<text  x="21.73" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (356,675,660 samples, 0.15%)</title><rect x="524.6" y="261" width="1.7" height="15.0" fill="rgb(231,73,21)" rx="2" ry="2" />
<text  x="527.60" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_write (653,727,930 samples, 0.27%)</title><rect x="16.1" y="309" width="3.2" height="15.0" fill="rgb(254,2,19)" rx="2" ry="2" />
<text  x="19.14" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (245,522,997 samples, 0.10%)</title><rect x="17.4" y="117" width="1.2" height="15.0" fill="rgb(211,90,45)" rx="2" ry="2" />
<text  x="20.35" y="127.5" ></text>
</g>
<g >
<title>generic_write_end (115,647,943 samples, 0.05%)</title><rect x="18.6" y="133" width="0.5" height="15.0" fill="rgb(249,228,22)" rx="2" ry="2" />
<text  x="21.57" y="143.5" ></text>
</g>
<g >
<title>console_unlock (36,612,016 samples, 0.02%)</title><rect x="1180.7" y="117" width="0.2" height="15.0" fill="rgb(254,95,38)" rx="2" ry="2" />
<text  x="1183.69" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (292,853,898 samples, 0.12%)</title><rect x="32.0" y="293" width="1.4" height="15.0" fill="rgb(229,107,53)" rx="2" ry="2" />
<text  x="35.01" y="303.5" ></text>
</g>
<g >
<title>unmap_region (26,031,803 samples, 0.01%)</title><rect x="1070.7" y="229" width="0.1" height="15.0" fill="rgb(227,187,9)" rx="2" ry="2" />
<text  x="1073.68" y="239.5" ></text>
</g>
<g >
<title>do_wp_page (113,658,437 samples, 0.05%)</title><rect x="531.7" y="213" width="0.6" height="15.0" fill="rgb(214,63,21)" rx="2" ry="2" />
<text  x="534.74" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (372,599,785 samples, 0.15%)</title><rect x="1068.4" y="197" width="1.8" height="15.0" fill="rgb(230,132,23)" rx="2" ry="2" />
<text  x="1071.36" y="207.5" ></text>
</g>
<g >
<title>all (240,854,525,687 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(215,63,51)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>_prb_read_valid (256,082,717 samples, 0.11%)</title><rect x="1068.5" y="69" width="1.2" height="15.0" fill="rgb(208,34,20)" rx="2" ry="2" />
<text  x="1071.46" y="79.5" ></text>
</g>
<g >
<title>irq_work_single (37,683,250 samples, 0.02%)</title><rect x="1180.7" y="149" width="0.2" height="15.0" fill="rgb(206,205,11)" rx="2" ry="2" />
<text  x="1183.69" y="159.5" ></text>
</g>
<g >
<title>memcpy_erms (50,355,139 samples, 0.02%)</title><rect x="526.0" y="69" width="0.2" height="15.0" fill="rgb(239,95,47)" rx="2" ry="2" />
<text  x="528.95" y="79.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (29,334,808 samples, 0.01%)</title><rect x="16.6" y="53" width="0.1" height="15.0" fill="rgb(249,51,28)" rx="2" ry="2" />
<text  x="19.60" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (30,359,142 samples, 0.01%)</title><rect x="1127.2" y="245" width="0.2" height="15.0" fill="rgb(211,48,18)" rx="2" ry="2" />
<text  x="1130.23" y="255.5" ></text>
</g>
<g >
<title>scanprefix (10,084,561,842 samples, 4.19%)</title><rect x="532.5" y="309" width="49.4" height="15.0" fill="rgb(212,134,51)" rx="2" ry="2" />
<text  x="535.51" y="319.5" >scan..</text>
</g>
<g >
<title>update_process_times (28,572,534 samples, 0.01%)</title><rect x="1127.2" y="197" width="0.2" height="15.0" fill="rgb(231,203,46)" rx="2" ry="2" />
<text  x="1130.23" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (385,546,449 samples, 0.16%)</title><rect x="1068.3" y="213" width="1.9" height="15.0" fill="rgb(233,86,16)" rx="2" ry="2" />
<text  x="1071.29" y="223.5" ></text>
</g>
<g >
<title>get_data.isra.0 (25,888,477 samples, 0.01%)</title><rect x="525.8" y="53" width="0.1" height="15.0" fill="rgb(218,185,2)" rx="2" ry="2" />
<text  x="528.79" y="63.5" ></text>
</g>
<g >
<title>__alloc_pages (172,622,999 samples, 0.07%)</title><rect x="32.1" y="181" width="0.9" height="15.0" fill="rgb(252,207,43)" rx="2" ry="2" />
<text  x="35.11" y="191.5" ></text>
</g>
<g >
<title>ext4_da_write_end (118,682,347 samples, 0.05%)</title><rect x="18.6" y="149" width="0.5" height="15.0" fill="rgb(215,128,50)" rx="2" ry="2" />
<text  x="21.56" y="159.5" ></text>
</g>
<g >
<title>ksys_write (625,927,705 samples, 0.26%)</title><rect x="16.2" y="245" width="3.1" height="15.0" fill="rgb(242,14,36)" rx="2" ry="2" />
<text  x="19.21" y="255.5" ></text>
</g>
<g >
<title>irq_work_run_list (316,148,346 samples, 0.13%)</title><rect x="524.7" y="149" width="1.5" height="15.0" fill="rgb(217,183,23)" rx="2" ry="2" />
<text  x="527.69" y="159.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (315,433,803 samples, 0.13%)</title><rect x="524.7" y="117" width="1.5" height="15.0" fill="rgb(253,151,50)" rx="2" ry="2" />
<text  x="527.70" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (352,391,412 samples, 0.15%)</title><rect x="524.6" y="213" width="1.7" height="15.0" fill="rgb(244,171,6)" rx="2" ry="2" />
<text  x="527.61" y="223.5" ></text>
</g>
<g >
<title>update_process_times (339,890,625 samples, 0.14%)</title><rect x="524.7" y="181" width="1.6" height="15.0" fill="rgb(243,107,47)" rx="2" ry="2" />
<text  x="527.67" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,328,724 samples, 0.02%)</title><rect x="581.7" y="277" width="0.2" height="15.0" fill="rgb(230,36,50)" rx="2" ry="2" />
<text  x="584.71" y="287.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (88,810,804 samples, 0.04%)</title><rect x="16.9" y="133" width="0.4" height="15.0" fill="rgb(206,83,3)" rx="2" ry="2" />
<text  x="19.91" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (31,430,399 samples, 0.01%)</title><rect x="1127.2" y="309" width="0.2" height="15.0" fill="rgb(225,132,12)" rx="2" ry="2" />
<text  x="1130.23" y="319.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (83,222,802 samples, 0.03%)</title><rect x="1069.2" y="53" width="0.4" height="15.0" fill="rgb(233,134,25)" rx="2" ry="2" />
<text  x="1072.15" y="63.5" ></text>
</g>
<g >
<title>clear_huge_page (94,154,519 samples, 0.04%)</title><rect x="33.0" y="197" width="0.4" height="15.0" fill="rgb(222,103,46)" rx="2" ry="2" />
<text  x="35.95" y="207.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (70,807,017 samples, 0.03%)</title><rect x="525.4" y="53" width="0.4" height="15.0" fill="rgb(227,18,25)" rx="2" ry="2" />
<text  x="528.44" y="63.5" ></text>
</g>
<g >
<title>__ctype_b_loc (118,963,948 samples, 0.05%)</title><rect x="19.3" y="309" width="0.6" height="15.0" fill="rgb(241,37,28)" rx="2" ry="2" />
<text  x="22.34" y="319.5" ></text>
</g>
<g >
<title>findmumcandidates (1,585,064,134 samples, 0.66%)</title><rect x="1078.9" y="325" width="7.8" height="15.0" fill="rgb(254,214,49)" rx="2" ry="2" />
<text  x="1081.92" y="335.5" ></text>
</g>
<g >
<title>_prb_read_valid (231,866,916 samples, 0.10%)</title><rect x="524.8" y="69" width="1.1" height="15.0" fill="rgb(252,127,39)" rx="2" ry="2" />
<text  x="527.78" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (21,077,393 samples, 0.01%)</title><rect x="21.2" y="277" width="0.1" height="15.0" fill="rgb(234,41,32)" rx="2" ry="2" />
<text  x="24.19" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (136,110,378 samples, 0.06%)</title><rect x="531.7" y="229" width="0.7" height="15.0" fill="rgb(232,177,4)" rx="2" ry="2" />
<text  x="534.72" y="239.5" ></text>
</g>
<g >
<title>[unknown] (216,305,739,058 samples, 89.81%)</title><rect x="10.5" y="325" width="1059.8" height="15.0" fill="rgb(227,11,8)" rx="2" ry="2" />
<text  x="13.54" y="335.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (43,222,341 samples, 0.02%)</title><rect x="581.7" y="293" width="0.2" height="15.0" fill="rgb(208,45,26)" rx="2" ry="2" />
<text  x="584.71" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (392,510,280 samples, 0.16%)</title><rect x="1068.3" y="245" width="1.9" height="15.0" fill="rgb(207,53,1)" rx="2" ry="2" />
<text  x="1071.29" y="255.5" ></text>
</g>
<g >
<title>scanmultiplefastafile (1,248,601,502 samples, 0.52%)</title><rect x="526.4" y="309" width="6.1" height="15.0" fill="rgb(234,10,6)" rx="2" ry="2" />
<text  x="529.40" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (21,077,393 samples, 0.01%)</title><rect x="21.2" y="229" width="0.1" height="15.0" fill="rgb(230,140,18)" rx="2" ry="2" />
<text  x="24.19" y="239.5" ></text>
</g>
<g >
<title>getbranchinfostree (3,448,780,792 samples, 1.43%)</title><rect x="40.0" y="309" width="16.9" height="15.0" fill="rgb(228,175,3)" rx="2" ry="2" />
<text  x="42.99" y="319.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (246,147,646 samples, 0.10%)</title><rect x="17.4" y="133" width="1.2" height="15.0" fill="rgb(210,198,52)" rx="2" ry="2" />
<text  x="20.35" y="143.5" ></text>
</g>
<g >
<title>rescan (1,704,620,232 samples, 0.71%)</title><rect x="65.5" y="309" width="8.4" height="15.0" fill="rgb(212,20,44)" rx="2" ry="2" />
<text  x="68.53" y="319.5" ></text>
</g>
</g>
</svg>
