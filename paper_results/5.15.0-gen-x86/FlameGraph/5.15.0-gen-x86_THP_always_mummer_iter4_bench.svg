<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>generic_update_time (55,645,662 samples, 0.02%)</title><rect x="16.5" y="101" width="0.2" height="15.0" fill="rgb(242,131,24)" rx="2" ry="2" />
<text  x="19.46" y="111.5" ></text>
</g>
<g >
<title>get_data.isra.0 (23,392,389 samples, 0.01%)</title><rect x="526.1" y="53" width="0.1" height="15.0" fill="rgb(246,169,24)" rx="2" ry="2" />
<text  x="529.08" y="63.5" ></text>
</g>
<g >
<title>block_write_end (37,871,037 samples, 0.02%)</title><rect x="18.9" y="117" width="0.2" height="15.0" fill="rgb(231,89,16)" rx="2" ry="2" />
<text  x="21.89" y="127.5" ></text>
</g>
<g >
<title>update_time (55,645,662 samples, 0.02%)</title><rect x="16.5" y="117" width="0.2" height="15.0" fill="rgb(229,11,24)" rx="2" ry="2" />
<text  x="19.46" y="127.5" ></text>
</g>
<g >
<title>irq_work_single (348,425,552 samples, 0.14%)</title><rect x="1069.0" y="133" width="1.7" height="15.0" fill="rgb(211,11,41)" rx="2" ry="2" />
<text  x="1071.99" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (28,074,440 samples, 0.01%)</title><rect x="57.5" y="229" width="0.1" height="15.0" fill="rgb(254,167,9)" rx="2" ry="2" />
<text  x="60.47" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (353,378,274 samples, 0.15%)</title><rect x="524.9" y="261" width="1.8" height="15.0" fill="rgb(235,114,4)" rx="2" ry="2" />
<text  x="527.92" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (390,755,746 samples, 0.16%)</title><rect x="1068.9" y="245" width="1.9" height="15.0" fill="rgb(238,102,15)" rx="2" ry="2" />
<text  x="1071.90" y="255.5" ></text>
</g>
<g >
<title>prb_read_valid (33,042,569 samples, 0.01%)</title><rect x="1180.8" y="101" width="0.2" height="15.0" fill="rgb(249,71,5)" rx="2" ry="2" />
<text  x="1183.83" y="111.5" ></text>
</g>
<g >
<title>irq_work_tick (25,095,612 samples, 0.01%)</title><rect x="1127.8" y="181" width="0.1" height="15.0" fill="rgb(222,59,20)" rx="2" ry="2" />
<text  x="1130.80" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (285,632,650 samples, 0.12%)</title><rect x="31.9" y="245" width="1.4" height="15.0" fill="rgb(229,188,25)" rx="2" ry="2" />
<text  x="34.93" y="255.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,026,369,051 samples, 0.43%)</title><rect x="1073.7" y="309" width="5.0" height="15.0" fill="rgb(227,11,53)" rx="2" ry="2" />
<text  x="1076.67" y="319.5" ></text>
</g>
<g >
<title>unmap_page_range (23,383,631 samples, 0.01%)</title><rect x="1071.3" y="181" width="0.2" height="15.0" fill="rgb(252,85,33)" rx="2" ry="2" />
<text  x="1074.34" y="191.5" ></text>
</g>
<g >
<title>linklocstree (479,074,641 samples, 0.20%)</title><rect x="1087.3" y="325" width="2.4" height="15.0" fill="rgb(213,89,37)" rx="2" ry="2" />
<text  x="1090.32" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,806,269 samples, 0.02%)</title><rect x="582.2" y="261" width="0.2" height="15.0" fill="rgb(247,79,23)" rx="2" ry="2" />
<text  x="585.19" y="271.5" ></text>
</g>
<g >
<title>linklocstree (1,604,268,266 samples, 0.67%)</title><rect x="57.6" y="309" width="7.9" height="15.0" fill="rgb(251,168,44)" rx="2" ry="2" />
<text  x="60.61" y="319.5" ></text>
</g>
<g >
<title>update_process_times (38,311,798 samples, 0.02%)</title><rect x="1180.8" y="197" width="0.2" height="15.0" fill="rgb(226,57,22)" rx="2" ry="2" />
<text  x="1183.82" y="207.5" ></text>
</g>
<g >
<title>irq_work_run_list (25,095,612 samples, 0.01%)</title><rect x="1127.8" y="165" width="0.1" height="15.0" fill="rgb(213,104,13)" rx="2" ry="2" />
<text  x="1130.80" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (391,737,277 samples, 0.16%)</title><rect x="1068.9" y="261" width="1.9" height="15.0" fill="rgb(227,130,52)" rx="2" ry="2" />
<text  x="1071.90" y="271.5" ></text>
</g>
<g >
<title>[mummer] (341,136,610 samples, 0.14%)</title><rect x="10.7" y="309" width="1.7" height="15.0" fill="rgb(231,206,2)" rx="2" ry="2" />
<text  x="13.70" y="319.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (258,221,306 samples, 0.11%)</title><rect x="12.9" y="309" width="1.2" height="15.0" fill="rgb(223,157,35)" rx="2" ry="2" />
<text  x="15.88" y="319.5" ></text>
</g>
<g >
<title>findmaxmatchesonbothstrands (1,326,738,429 samples, 0.55%)</title><rect x="33.4" y="309" width="6.5" height="15.0" fill="rgb(216,208,21)" rx="2" ry="2" />
<text  x="36.39" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (138,259,184 samples, 0.06%)</title><rect x="532.1" y="245" width="0.7" height="15.0" fill="rgb(231,226,51)" rx="2" ry="2" />
<text  x="535.13" y="255.5" ></text>
</g>
<g >
<title>_prb_read_valid (223,833,228 samples, 0.09%)</title><rect x="525.1" y="69" width="1.1" height="15.0" fill="rgb(252,92,17)" rx="2" ry="2" />
<text  x="528.10" y="79.5" ></text>
</g>
<g >
<title>irq_work_single (36,074,588 samples, 0.01%)</title><rect x="582.2" y="133" width="0.2" height="15.0" fill="rgb(234,43,38)" rx="2" ry="2" />
<text  x="585.20" y="143.5" ></text>
</g>
<g >
<title>pagecache_get_page (235,898,866 samples, 0.10%)</title><rect x="17.3" y="117" width="1.2" height="15.0" fill="rgb(209,115,9)" rx="2" ry="2" />
<text  x="20.34" y="127.5" ></text>
</g>
<g >
<title>irq_work_tick (348,604,091 samples, 0.14%)</title><rect x="1069.0" y="165" width="1.7" height="15.0" fill="rgb(223,19,47)" rx="2" ry="2" />
<text  x="1071.99" y="175.5" ></text>
</g>
<g >
<title>new_sync_write (548,964,188 samples, 0.23%)</title><rect x="16.4" y="213" width="2.7" height="15.0" fill="rgb(235,68,48)" rx="2" ry="2" />
<text  x="19.41" y="223.5" ></text>
</g>
<g >
<title>alloc_page_buffers (35,188,953 samples, 0.01%)</title><rect x="17.0" y="101" width="0.2" height="15.0" fill="rgb(223,105,16)" rx="2" ry="2" />
<text  x="19.99" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (29,112,901 samples, 0.01%)</title><rect x="1127.8" y="277" width="0.1" height="15.0" fill="rgb(249,61,31)" rx="2" ry="2" />
<text  x="1130.79" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (23,472,090 samples, 0.01%)</title><rect x="1071.3" y="213" width="0.2" height="15.0" fill="rgb(239,173,36)" rx="2" ry="2" />
<text  x="1074.34" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,545,528 samples, 0.02%)</title><rect x="1180.8" y="293" width="0.2" height="15.0" fill="rgb(252,46,13)" rx="2" ry="2" />
<text  x="1183.82" y="303.5" ></text>
</g>
<g >
<title>scanmultiplefastafile (1,261,239,960 samples, 0.52%)</title><rect x="526.7" y="309" width="6.2" height="15.0" fill="rgb(233,61,21)" rx="2" ry="2" />
<text  x="529.71" y="319.5" ></text>
</g>
<g >
<title>unmap_region (20,877,251 samples, 0.01%)</title><rect x="21.2" y="213" width="0.1" height="15.0" fill="rgb(252,211,2)" rx="2" ry="2" />
<text  x="24.15" y="223.5" ></text>
</g>
<g >
<title>console_unlock (23,666,295 samples, 0.01%)</title><rect x="1127.8" y="117" width="0.1" height="15.0" fill="rgb(224,113,48)" rx="2" ry="2" />
<text  x="1130.80" y="127.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (85,760,936 samples, 0.04%)</title><rect x="16.9" y="133" width="0.4" height="15.0" fill="rgb(208,56,1)" rx="2" ry="2" />
<text  x="19.91" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,188,563 samples, 0.02%)</title><rect x="1180.8" y="261" width="0.2" height="15.0" fill="rgb(212,190,50)" rx="2" ry="2" />
<text  x="1183.82" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (29,380,867 samples, 0.01%)</title><rect x="1127.8" y="293" width="0.1" height="15.0" fill="rgb(226,98,4)" rx="2" ry="2" />
<text  x="1130.79" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="261" width="0.2" height="15.0" fill="rgb(229,30,16)" rx="2" ry="2" />
<text  x="1074.33" y="271.5" ></text>
</g>
<g >
<title>desc_read (54,100,852 samples, 0.02%)</title><rect x="525.8" y="37" width="0.3" height="15.0" fill="rgb(242,173,36)" rx="2" ry="2" />
<text  x="528.82" y="47.5" ></text>
</g>
<g >
<title>prb_read_valid (288,384,318 samples, 0.12%)</title><rect x="525.1" y="85" width="1.4" height="15.0" fill="rgb(249,111,23)" rx="2" ry="2" />
<text  x="528.08" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="293" width="0.2" height="15.0" fill="rgb(233,118,49)" rx="2" ry="2" />
<text  x="1074.33" y="303.5" ></text>
</g>
<g >
<title>irq_work_tick (309,636,971 samples, 0.13%)</title><rect x="525.0" y="165" width="1.5" height="15.0" fill="rgb(233,166,35)" rx="2" ry="2" />
<text  x="528.01" y="175.5" ></text>
</g>
<g >
<title>get_data.isra.0 (27,591,838 samples, 0.01%)</title><rect x="1070.2" y="53" width="0.1" height="15.0" fill="rgb(225,73,45)" rx="2" ry="2" />
<text  x="1073.18" y="63.5" ></text>
</g>
<g >
<title>__printf_chk (1,652,435,240 samples, 0.69%)</title><rect x="1071.5" y="325" width="8.1" height="15.0" fill="rgb(211,98,38)" rx="2" ry="2" />
<text  x="1074.46" y="335.5" ></text>
</g>
<g >
<title>update_process_times (332,312,644 samples, 0.14%)</title><rect x="525.0" y="181" width="1.6" height="15.0" fill="rgb(229,43,8)" rx="2" ry="2" />
<text  x="528.00" y="191.5" ></text>
</g>
<g >
<title>irq_work_single (35,899,486 samples, 0.01%)</title><rect x="1180.8" y="149" width="0.2" height="15.0" fill="rgb(208,63,48)" rx="2" ry="2" />
<text  x="1183.83" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (286,704,114 samples, 0.12%)</title><rect x="31.9" y="261" width="1.4" height="15.0" fill="rgb(245,82,12)" rx="2" ry="2" />
<text  x="34.92" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (28,074,440 samples, 0.01%)</title><rect x="57.5" y="245" width="0.1" height="15.0" fill="rgb(232,77,44)" rx="2" ry="2" />
<text  x="60.47" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,716,868 samples, 0.02%)</title><rect x="582.2" y="245" width="0.2" height="15.0" fill="rgb(228,81,32)" rx="2" ry="2" />
<text  x="585.20" y="255.5" ></text>
</g>
<g >
<title>desc_read (62,058,872 samples, 0.03%)</title><rect x="1069.9" y="37" width="0.3" height="15.0" fill="rgb(248,202,54)" rx="2" ry="2" />
<text  x="1072.88" y="47.5" ></text>
</g>
<g >
<title>unmap_single_vma (23,472,090 samples, 0.01%)</title><rect x="1071.3" y="197" width="0.2" height="15.0" fill="rgb(251,121,39)" rx="2" ry="2" />
<text  x="1074.34" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (28,487,957 samples, 0.01%)</title><rect x="1127.8" y="245" width="0.1" height="15.0" fill="rgb(235,1,12)" rx="2" ry="2" />
<text  x="1130.79" y="255.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (71,425,759 samples, 0.03%)</title><rect x="525.7" y="53" width="0.4" height="15.0" fill="rgb(222,25,4)" rx="2" ry="2" />
<text  x="528.73" y="63.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (35,810,014 samples, 0.01%)</title><rect x="1180.8" y="133" width="0.2" height="15.0" fill="rgb(232,150,34)" rx="2" ry="2" />
<text  x="1183.83" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (30,564,882 samples, 0.01%)</title><rect x="17.0" y="69" width="0.2" height="15.0" fill="rgb(246,53,5)" rx="2" ry="2" />
<text  x="20.01" y="79.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (139,732,910 samples, 0.06%)</title><rect x="1073.0" y="309" width="0.7" height="15.0" fill="rgb(254,75,24)" rx="2" ry="2" />
<text  x="1075.98" y="319.5" ></text>
</g>
<g >
<title>scanprefixfromnodestree (10,529,955,442 samples, 4.38%)</title><rect x="1129.4" y="325" width="51.6" height="15.0" fill="rgb(227,121,18)" rx="2" ry="2" />
<text  x="1132.36" y="335.5" >scanp..</text>
</g>
<g >
<title>[libc-2.31.so] (25,825,165 samples, 0.01%)</title><rect x="10.6" y="309" width="0.1" height="15.0" fill="rgb(210,26,45)" rx="2" ry="2" />
<text  x="13.57" y="319.5" ></text>
</g>
<g >
<title>scanprefixstree (1,413,509,142 samples, 0.59%)</title><rect x="1181.0" y="325" width="7.0" height="15.0" fill="rgb(224,53,16)" rx="2" ry="2" />
<text  x="1184.02" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (28,074,440 samples, 0.01%)</title><rect x="57.5" y="293" width="0.1" height="15.0" fill="rgb(230,94,39)" rx="2" ry="2" />
<text  x="60.47" y="303.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (35,985,044 samples, 0.01%)</title><rect x="582.2" y="117" width="0.2" height="15.0" fill="rgb(253,37,6)" rx="2" ry="2" />
<text  x="585.20" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (397,181,090 samples, 0.17%)</title><rect x="1068.9" y="277" width="1.9" height="15.0" fill="rgb(245,126,47)" rx="2" ry="2" />
<text  x="1071.90" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (43,354,491 samples, 0.02%)</title><rect x="17.4" y="53" width="0.2" height="15.0" fill="rgb(230,18,3)" rx="2" ry="2" />
<text  x="20.40" y="63.5" ></text>
</g>
<g >
<title>_IO_putc (76,940,764 samples, 0.03%)</title><rect x="1070.9" y="325" width="0.4" height="15.0" fill="rgb(216,164,16)" rx="2" ry="2" />
<text  x="1073.91" y="335.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (307,849,363 samples, 0.13%)</title><rect x="525.0" y="117" width="1.5" height="15.0" fill="rgb(227,103,53)" rx="2" ry="2" />
<text  x="528.02" y="127.5" ></text>
</g>
<g >
<title>__page_cache_alloc (52,600,463 samples, 0.02%)</title><rect x="17.4" y="101" width="0.2" height="15.0" fill="rgb(237,127,14)" rx="2" ry="2" />
<text  x="20.37" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (333,026,228 samples, 0.14%)</title><rect x="525.0" y="197" width="1.6" height="15.0" fill="rgb(225,158,34)" rx="2" ry="2" />
<text  x="527.99" y="207.5" ></text>
</g>
<g >
<title>irq_work_run_list (35,899,486 samples, 0.01%)</title><rect x="1180.8" y="165" width="0.2" height="15.0" fill="rgb(248,169,7)" rx="2" ry="2" />
<text  x="1183.83" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (39,652,080 samples, 0.02%)</title><rect x="1180.8" y="229" width="0.2" height="15.0" fill="rgb(250,107,47)" rx="2" ry="2" />
<text  x="1183.82" y="239.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (37,514,496 samples, 0.02%)</title><rect x="18.9" y="101" width="0.2" height="15.0" fill="rgb(234,2,49)" rx="2" ry="2" />
<text  x="21.89" y="111.5" ></text>
</g>
<g >
<title>lru_cache_add (21,994,403 samples, 0.01%)</title><rect x="18.3" y="85" width="0.1" height="15.0" fill="rgb(218,120,27)" rx="2" ry="2" />
<text  x="21.29" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (619,635,555 samples, 0.26%)</title><rect x="16.2" y="277" width="3.0" height="15.0" fill="rgb(214,217,38)" rx="2" ry="2" />
<text  x="19.20" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (361,144,346 samples, 0.15%)</title><rect x="524.9" y="293" width="1.8" height="15.0" fill="rgb(205,66,52)" rx="2" ry="2" />
<text  x="527.90" y="303.5" ></text>
</g>
<g >
<title>irq_work_run_list (309,457,984 samples, 0.13%)</title><rect x="525.0" y="149" width="1.5" height="15.0" fill="rgb(223,190,3)" rx="2" ry="2" />
<text  x="528.01" y="159.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (132,800,135 samples, 0.06%)</title><rect x="17.6" y="85" width="0.7" height="15.0" fill="rgb(223,2,33)" rx="2" ry="2" />
<text  x="20.64" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="309" width="0.2" height="15.0" fill="rgb(221,138,16)" rx="2" ry="2" />
<text  x="1074.33" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (346,864,471 samples, 0.14%)</title><rect x="524.9" y="229" width="1.7" height="15.0" fill="rgb(254,108,33)" rx="2" ry="2" />
<text  x="527.93" y="239.5" ></text>
</g>
<g >
<title>file_modified (61,258,195 samples, 0.03%)</title><rect x="16.4" y="149" width="0.3" height="15.0" fill="rgb(240,1,35)" rx="2" ry="2" />
<text  x="19.44" y="159.5" ></text>
</g>
<g >
<title>scanprefix (285,626,178 samples, 0.12%)</title><rect x="1128.0" y="325" width="1.4" height="15.0" fill="rgb(236,160,10)" rx="2" ry="2" />
<text  x="1130.96" y="335.5" ></text>
</g>
<g >
<title>__ctype_b_loc (114,068,103 samples, 0.05%)</title><rect x="19.3" y="309" width="0.5" height="15.0" fill="rgb(211,128,40)" rx="2" ry="2" />
<text  x="22.27" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (357,307,181 samples, 0.15%)</title><rect x="524.9" y="277" width="1.8" height="15.0" fill="rgb(242,85,17)" rx="2" ry="2" />
<text  x="527.92" y="287.5" ></text>
</g>
<g >
<title>__vm_munmap (20,877,251 samples, 0.01%)</title><rect x="21.2" y="245" width="0.1" height="15.0" fill="rgb(206,219,52)" rx="2" ry="2" />
<text  x="24.15" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (89,802,345 samples, 0.04%)</title><rect x="32.9" y="181" width="0.4" height="15.0" fill="rgb(210,215,20)" rx="2" ry="2" />
<text  x="35.85" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (20,877,251 samples, 0.01%)</title><rect x="21.2" y="261" width="0.1" height="15.0" fill="rgb(229,13,25)" rx="2" ry="2" />
<text  x="24.15" y="271.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (78,020,781 samples, 0.03%)</title><rect x="18.5" y="117" width="0.4" height="15.0" fill="rgb(230,194,42)" rx="2" ry="2" />
<text  x="21.51" y="127.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (236,077,588 samples, 0.10%)</title><rect x="17.3" y="133" width="1.2" height="15.0" fill="rgb(237,52,52)" rx="2" ry="2" />
<text  x="20.34" y="143.5" ></text>
</g>
<g >
<title>prb_read_valid (325,120,827 samples, 0.14%)</title><rect x="1069.1" y="85" width="1.6" height="15.0" fill="rgb(240,106,41)" rx="2" ry="2" />
<text  x="1072.06" y="95.5" ></text>
</g>
<g >
<title>__munmap (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="325" width="0.2" height="15.0" fill="rgb(228,133,6)" rx="2" ry="2" />
<text  x="1074.33" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,877,251 samples, 0.01%)</title><rect x="21.2" y="277" width="0.1" height="15.0" fill="rgb(227,67,25)" rx="2" ry="2" />
<text  x="24.15" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (20,877,251 samples, 0.01%)</title><rect x="21.2" y="293" width="0.1" height="15.0" fill="rgb(243,39,3)" rx="2" ry="2" />
<text  x="24.15" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages (49,231,309 samples, 0.02%)</title><rect x="17.4" y="69" width="0.2" height="15.0" fill="rgb(208,167,8)" rx="2" ry="2" />
<text  x="20.37" y="79.5" ></text>
</g>
<g >
<title>clear_page_erms (164,085,773 samples, 0.07%)</title><rect x="32.0" y="133" width="0.8" height="15.0" fill="rgb(247,40,24)" rx="2" ry="2" />
<text  x="35.02" y="143.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (326,021,044 samples, 0.14%)</title><rect x="16.9" y="149" width="1.6" height="15.0" fill="rgb(237,98,20)" rx="2" ry="2" />
<text  x="19.90" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="277" width="0.2" height="15.0" fill="rgb(208,29,52)" rx="2" ry="2" />
<text  x="1074.33" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_write (639,500,720 samples, 0.27%)</title><rect x="16.1" y="309" width="3.2" height="15.0" fill="rgb(248,37,9)" rx="2" ry="2" />
<text  x="19.13" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (250,740,666 samples, 0.10%)</title><rect x="1069.1" y="69" width="1.2" height="15.0" fill="rgb(239,94,39)" rx="2" ry="2" />
<text  x="1072.09" y="79.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (385,844,511 samples, 0.16%)</title><rect x="1068.9" y="229" width="1.9" height="15.0" fill="rgb(224,218,0)" rx="2" ry="2" />
<text  x="1071.90" y="239.5" ></text>
</g>
<g >
<title>alloc_buffer_head (33,502,921 samples, 0.01%)</title><rect x="17.0" y="85" width="0.2" height="15.0" fill="rgb(251,139,42)" rx="2" ry="2" />
<text  x="20.00" y="95.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (38,311,798 samples, 0.02%)</title><rect x="1180.8" y="213" width="0.2" height="15.0" fill="rgb(231,208,46)" rx="2" ry="2" />
<text  x="1183.82" y="223.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (54,309,809 samples, 0.02%)</title><rect x="16.5" y="69" width="0.2" height="15.0" fill="rgb(238,129,43)" rx="2" ry="2" />
<text  x="19.47" y="79.5" ></text>
</g>
<g >
<title>irq_work_run_list (348,514,763 samples, 0.14%)</title><rect x="1069.0" y="149" width="1.7" height="15.0" fill="rgb(208,170,14)" rx="2" ry="2" />
<text  x="1071.99" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (345,526,139 samples, 0.14%)</title><rect x="524.9" y="213" width="1.7" height="15.0" fill="rgb(243,117,38)" rx="2" ry="2" />
<text  x="527.93" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (39,652,080 samples, 0.02%)</title><rect x="1180.8" y="245" width="0.2" height="15.0" fill="rgb(254,183,52)" rx="2" ry="2" />
<text  x="1183.82" y="255.5" ></text>
</g>
<g >
<title>__do_munmap (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="245" width="0.2" height="15.0" fill="rgb(205,173,35)" rx="2" ry="2" />
<text  x="1074.33" y="255.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (32,968,291 samples, 0.01%)</title><rect x="18.9" y="85" width="0.2" height="15.0" fill="rgb(246,197,40)" rx="2" ry="2" />
<text  x="21.92" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (140,862,351 samples, 0.06%)</title><rect x="532.1" y="261" width="0.7" height="15.0" fill="rgb(221,80,45)" rx="2" ry="2" />
<text  x="535.12" y="271.5" ></text>
</g>
<g >
<title>prb_read_valid (33,484,998 samples, 0.01%)</title><rect x="582.2" y="85" width="0.2" height="15.0" fill="rgb(241,9,20)" rx="2" ry="2" />
<text  x="585.21" y="95.5" ></text>
</g>
<g >
<title>irq_work_single (309,010,993 samples, 0.13%)</title><rect x="525.0" y="133" width="1.5" height="15.0" fill="rgb(246,176,19)" rx="2" ry="2" />
<text  x="528.02" y="143.5" ></text>
</g>
<g >
<title>rescan (1,716,692,603 samples, 0.71%)</title><rect x="65.5" y="309" width="8.4" height="15.0" fill="rgb(236,207,30)" rx="2" ry="2" />
<text  x="68.48" y="319.5" ></text>
</g>
<g >
<title>irq_work_single (25,095,612 samples, 0.01%)</title><rect x="1127.8" y="149" width="0.1" height="15.0" fill="rgb(213,191,16)" rx="2" ry="2" />
<text  x="1130.80" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (287,771,820 samples, 0.12%)</title><rect x="31.9" y="293" width="1.4" height="15.0" fill="rgb(206,115,53)" rx="2" ry="2" />
<text  x="34.92" y="303.5" ></text>
</g>
<g >
<title>showmaximalmatch (57,916,060 samples, 0.02%)</title><rect x="1188.0" y="325" width="0.2" height="15.0" fill="rgb(232,131,15)" rx="2" ry="2" />
<text  x="1190.96" y="335.5" ></text>
</g>
<g >
<title>prb_read_valid (23,308,888 samples, 0.01%)</title><rect x="1127.8" y="101" width="0.1" height="15.0" fill="rgb(222,175,41)" rx="2" ry="2" />
<text  x="1130.80" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (29,916,526 samples, 0.01%)</title><rect x="1127.8" y="309" width="0.1" height="15.0" fill="rgb(248,163,38)" rx="2" ry="2" />
<text  x="1130.79" y="319.5" ></text>
</g>
<g >
<title>clear_huge_page (91,131,188 samples, 0.04%)</title><rect x="32.9" y="197" width="0.4" height="15.0" fill="rgb(247,225,17)" rx="2" ry="2" />
<text  x="35.85" y="207.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (21,553,915 samples, 0.01%)</title><rect x="1072.0" y="309" width="0.1" height="15.0" fill="rgb(251,84,2)" rx="2" ry="2" />
<text  x="1074.96" y="319.5" ></text>
</g>
<g >
<title>[unknown] (96,806,687 samples, 0.04%)</title><rect x="12.4" y="309" width="0.5" height="15.0" fill="rgb(216,0,12)" rx="2" ry="2" />
<text  x="15.38" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (127,320,839 samples, 0.05%)</title><rect x="20.4" y="309" width="0.6" height="15.0" fill="rgb(222,60,32)" rx="2" ry="2" />
<text  x="23.39" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,724,074 samples, 0.02%)</title><rect x="1180.8" y="309" width="0.2" height="15.0" fill="rgb(216,219,6)" rx="2" ry="2" />
<text  x="1183.82" y="319.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (545,581,048 samples, 0.23%)</title><rect x="16.4" y="181" width="2.7" height="15.0" fill="rgb(226,42,35)" rx="2" ry="2" />
<text  x="19.42" y="191.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (28,509,288 samples, 0.01%)</title><rect x="18.7" y="69" width="0.1" height="15.0" fill="rgb(230,172,37)" rx="2" ry="2" />
<text  x="21.68" y="79.5" ></text>
</g>
<g >
<title>rescan (7,789,094,154 samples, 3.24%)</title><rect x="1089.7" y="325" width="38.2" height="15.0" fill="rgb(210,33,32)" rx="2" ry="2" />
<text  x="1092.72" y="335.5" >res..</text>
</g>
<g >
<title>update_process_times (27,326,571 samples, 0.01%)</title><rect x="1127.8" y="197" width="0.1" height="15.0" fill="rgb(244,220,50)" rx="2" ry="2" />
<text  x="1130.80" y="207.5" ></text>
</g>
<g >
<title>insertleaf (151,155,259 samples, 0.06%)</title><rect x="56.9" y="309" width="0.7" height="15.0" fill="rgb(227,146,48)" rx="2" ry="2" />
<text  x="59.87" y="319.5" ></text>
</g>
<g >
<title>exc_page_fault (143,916,229 samples, 0.06%)</title><rect x="532.1" y="277" width="0.7" height="15.0" fill="rgb(211,124,34)" rx="2" ry="2" />
<text  x="535.11" y="287.5" ></text>
</g>
<g >
<title>generic_perform_write (479,597,773 samples, 0.20%)</title><rect x="16.7" y="165" width="2.4" height="15.0" fill="rgb(240,57,31)" rx="2" ry="2" />
<text  x="19.74" y="175.5" ></text>
</g>
<g >
<title>update_process_times (371,108,884 samples, 0.15%)</title><rect x="1069.0" y="181" width="1.8" height="15.0" fill="rgb(209,12,29)" rx="2" ry="2" />
<text  x="1071.97" y="191.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (26,886,842 samples, 0.01%)</title><rect x="21.0" y="309" width="0.2" height="15.0" fill="rgb(237,50,9)" rx="2" ry="2" />
<text  x="24.02" y="319.5" ></text>
</g>
<g >
<title>wp_page_copy (107,829,230 samples, 0.04%)</title><rect x="532.2" y="197" width="0.5" height="15.0" fill="rgb(229,29,36)" rx="2" ry="2" />
<text  x="535.18" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (28,074,440 samples, 0.01%)</title><rect x="57.5" y="277" width="0.1" height="15.0" fill="rgb(215,94,51)" rx="2" ry="2" />
<text  x="60.47" y="287.5" ></text>
</g>
<g >
<title>copy_page (64,102,465 samples, 0.03%)</title><rect x="532.3" y="181" width="0.3" height="15.0" fill="rgb(213,14,35)" rx="2" ry="2" />
<text  x="535.27" y="191.5" ></text>
</g>
<g >
<title>irq_work_tick (35,899,486 samples, 0.01%)</title><rect x="1180.8" y="181" width="0.2" height="15.0" fill="rgb(242,191,37)" rx="2" ry="2" />
<text  x="1183.83" y="191.5" ></text>
</g>
<g >
<title>__munmap (20,877,251 samples, 0.01%)</title><rect x="21.2" y="309" width="0.1" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="24.15" y="319.5" ></text>
</g>
<g >
<title>exc_page_fault (287,327,977 samples, 0.12%)</title><rect x="31.9" y="277" width="1.4" height="15.0" fill="rgb(252,38,11)" rx="2" ry="2" />
<text  x="34.92" y="287.5" ></text>
</g>
<g >
<title>[unknown] (216,124,221,539 samples, 89.86%)</title><rect x="10.6" y="325" width="1060.3" height="15.0" fill="rgb(243,111,23)" rx="2" ry="2" />
<text  x="13.57" y="335.5" >[unknown]</text>
</g>
<g >
<title>showsequencedescription.isra.0 (358,905,995 samples, 0.15%)</title><rect x="1188.2" y="325" width="1.8" height="15.0" fill="rgb(248,220,21)" rx="2" ry="2" />
<text  x="1191.24" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (38,753,054 samples, 0.02%)</title><rect x="582.2" y="197" width="0.2" height="15.0" fill="rgb(246,130,7)" rx="2" ry="2" />
<text  x="585.20" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (54,283,461 samples, 0.02%)</title><rect x="526.2" y="69" width="0.3" height="15.0" fill="rgb(252,39,54)" rx="2" ry="2" />
<text  x="529.23" y="79.5" ></text>
</g>
<g >
<title>tick_sched_timer (28,487,957 samples, 0.01%)</title><rect x="1127.8" y="229" width="0.1" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="1130.79" y="239.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (138,049,550 samples, 0.06%)</title><rect x="1072.1" y="309" width="0.6" height="15.0" fill="rgb(213,211,44)" rx="2" ry="2" />
<text  x="1075.07" y="319.5" ></text>
</g>
<g >
<title>memcpy_erms (62,145,016 samples, 0.03%)</title><rect x="1070.4" y="69" width="0.3" height="15.0" fill="rgb(210,190,18)" rx="2" ry="2" />
<text  x="1073.35" y="79.5" ></text>
</g>
<g >
<title>console_unlock (34,470,555 samples, 0.01%)</title><rect x="1180.8" y="117" width="0.2" height="15.0" fill="rgb(213,46,46)" rx="2" ry="2" />
<text  x="1183.83" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (40,003,140 samples, 0.02%)</title><rect x="582.2" y="213" width="0.2" height="15.0" fill="rgb(223,87,7)" rx="2" ry="2" />
<text  x="585.20" y="223.5" ></text>
</g>
<g >
<title>create_empty_buffers (39,997,996 samples, 0.02%)</title><rect x="17.0" y="117" width="0.2" height="15.0" fill="rgb(242,122,3)" rx="2" ry="2" />
<text  x="19.97" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,092,519 samples, 0.02%)</title><rect x="582.2" y="229" width="0.2" height="15.0" fill="rgb(219,52,14)" rx="2" ry="2" />
<text  x="585.20" y="239.5" ></text>
</g>
<g >
<title>prep_new_page (169,572,232 samples, 0.07%)</title><rect x="32.0" y="149" width="0.8" height="15.0" fill="rgb(205,83,47)" rx="2" ry="2" />
<text  x="35.02" y="159.5" ></text>
</g>
<g >
<title>all (240,524,037,755 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(241,17,12)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>vfs_write (588,087,190 samples, 0.24%)</title><rect x="16.3" y="229" width="2.9" height="15.0" fill="rgb(249,216,53)" rx="2" ry="2" />
<text  x="19.32" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,895,630 samples, 0.02%)</title><rect x="582.2" y="277" width="0.2" height="15.0" fill="rgb(246,131,23)" rx="2" ry="2" />
<text  x="585.19" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (27,415,692 samples, 0.01%)</title><rect x="1127.8" y="213" width="0.1" height="15.0" fill="rgb(224,113,46)" rx="2" ry="2" />
<text  x="1130.80" y="223.5" ></text>
</g>
<g >
<title>console_unlock (298,207,168 samples, 0.12%)</title><rect x="525.0" y="101" width="1.5" height="15.0" fill="rgb(242,36,32)" rx="2" ry="2" />
<text  x="528.03" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (401,737,959 samples, 0.17%)</title><rect x="1068.9" y="293" width="1.9" height="15.0" fill="rgb(240,157,11)" rx="2" ry="2" />
<text  x="1071.88" y="303.5" ></text>
</g>
<g >
<title>__ctype_tolower_loc (115,089,626 samples, 0.05%)</title><rect x="19.8" y="309" width="0.6" height="15.0" fill="rgb(243,46,10)" rx="2" ry="2" />
<text  x="22.83" y="319.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (78,846,314 samples, 0.03%)</title><rect x="1069.8" y="53" width="0.4" height="15.0" fill="rgb(211,9,39)" rx="2" ry="2" />
<text  x="1072.79" y="63.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (352,308,253 samples, 0.15%)</title><rect x="524.9" y="245" width="1.8" height="15.0" fill="rgb(218,77,10)" rx="2" ry="2" />
<text  x="527.92" y="255.5" ></text>
</g>
<g >
<title>scanprefixfromnodestree (99,567,508,840 samples, 41.40%)</title><rect x="582.4" y="309" width="488.5" height="15.0" fill="rgb(237,115,27)" rx="2" ry="2" />
<text  x="585.40" y="319.5" >scanprefixfromnodestree</text>
</g>
<g >
<title>rescanstree (92,298,418,129 samples, 38.37%)</title><rect x="73.9" y="309" width="452.8" height="15.0" fill="rgb(251,99,40)" rx="2" ry="2" />
<text  x="76.90" y="319.5" >rescanstree</text>
</g>
<g >
<title>constructprogressstree (2,473,346,328 samples, 1.03%)</title><rect x="21.3" y="309" width="12.1" height="15.0" fill="rgb(251,16,26)" rx="2" ry="2" />
<text  x="24.25" y="319.5" ></text>
</g>
<g >
<title>__set_page_dirty (25,221,911 samples, 0.01%)</title><rect x="18.9" y="69" width="0.2" height="15.0" fill="rgb(227,199,53)" rx="2" ry="2" />
<text  x="21.94" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,277,522 samples, 0.02%)</title><rect x="1180.8" y="277" width="0.2" height="15.0" fill="rgb(229,45,37)" rx="2" ry="2" />
<text  x="1183.82" y="287.5" ></text>
</g>
<g >
<title>do_wp_page (114,663,520 samples, 0.05%)</title><rect x="532.1" y="213" width="0.6" height="15.0" fill="rgb(223,181,52)" rx="2" ry="2" />
<text  x="535.15" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,074,440 samples, 0.01%)</title><rect x="57.5" y="261" width="0.1" height="15.0" fill="rgb(238,152,16)" rx="2" ry="2" />
<text  x="60.47" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (158,385,051 samples, 0.07%)</title><rect x="532.0" y="293" width="0.8" height="15.0" fill="rgb(208,197,37)" rx="2" ry="2" />
<text  x="535.04" y="303.5" ></text>
</g>
<g >
<title>ext4_da_write_end (120,082,579 samples, 0.05%)</title><rect x="18.5" y="149" width="0.6" height="15.0" fill="rgb(205,160,2)" rx="2" ry="2" />
<text  x="21.50" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_write (610,362,647 samples, 0.25%)</title><rect x="16.2" y="261" width="3.0" height="15.0" fill="rgb(245,108,17)" rx="2" ry="2" />
<text  x="19.21" y="271.5" ></text>
</g>
<g >
<title>console_unlock (35,003,139 samples, 0.01%)</title><rect x="582.2" y="101" width="0.2" height="15.0" fill="rgb(209,177,19)" rx="2" ry="2" />
<text  x="585.21" y="111.5" ></text>
</g>
<g >
<title>__handle_mm_fault (284,205,864 samples, 0.12%)</title><rect x="31.9" y="229" width="1.4" height="15.0" fill="rgb(253,219,2)" rx="2" ry="2" />
<text  x="34.93" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,985,096 samples, 0.02%)</title><rect x="582.2" y="293" width="0.2" height="15.0" fill="rgb(247,178,12)" rx="2" ry="2" />
<text  x="585.19" y="303.5" ></text>
</g>
<g >
<title>file_update_time (58,049,191 samples, 0.02%)</title><rect x="16.5" y="133" width="0.2" height="15.0" fill="rgb(242,1,9)" rx="2" ry="2" />
<text  x="19.45" y="143.5" ></text>
</g>
<g >
<title>unmap_region (26,194,699 samples, 0.01%)</title><rect x="1071.3" y="229" width="0.2" height="15.0" fill="rgb(215,10,33)" rx="2" ry="2" />
<text  x="1074.33" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (170,107,459 samples, 0.07%)</title><rect x="32.0" y="181" width="0.9" height="15.0" fill="rgb(206,90,5)" rx="2" ry="2" />
<text  x="35.02" y="191.5" ></text>
</g>
<g >
<title>_itoa_word (176,195,890 samples, 0.07%)</title><rect x="1078.7" y="309" width="0.9" height="15.0" fill="rgb(206,114,3)" rx="2" ry="2" />
<text  x="1081.70" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (170,196,150 samples, 0.07%)</title><rect x="32.0" y="197" width="0.9" height="15.0" fill="rgb(217,109,24)" rx="2" ry="2" />
<text  x="35.02" y="207.5" ></text>
</g>
<g >
<title>alloc_pages (51,715,084 samples, 0.02%)</title><rect x="17.4" y="85" width="0.2" height="15.0" fill="rgb(245,225,7)" rx="2" ry="2" />
<text  x="20.37" y="95.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (263,983,674 samples, 0.11%)</title><rect x="32.0" y="213" width="1.3" height="15.0" fill="rgb(241,90,49)" rx="2" ry="2" />
<text  x="35.01" y="223.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (25,006,226 samples, 0.01%)</title><rect x="1127.8" y="133" width="0.1" height="15.0" fill="rgb(214,0,39)" rx="2" ry="2" />
<text  x="1130.80" y="143.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (158,451,582 samples, 0.07%)</title><rect x="17.6" y="101" width="0.8" height="15.0" fill="rgb(254,40,24)" rx="2" ry="2" />
<text  x="20.63" y="111.5" ></text>
</g>
<g >
<title>_IO_putc (366,024,593 samples, 0.15%)</title><rect x="14.3" y="309" width="1.8" height="15.0" fill="rgb(254,61,24)" rx="2" ry="2" />
<text  x="17.34" y="319.5" ></text>
</g>
<g >
<title>pos2pospair (39,897,195 samples, 0.02%)</title><rect x="12.7" y="293" width="0.2" height="15.0" fill="rgb(217,80,17)" rx="2" ry="2" />
<text  x="15.65" y="303.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (55,467,340 samples, 0.02%)</title><rect x="16.5" y="85" width="0.2" height="15.0" fill="rgb(241,210,4)" rx="2" ry="2" />
<text  x="19.47" y="95.5" ></text>
</g>
<g >
<title>_prb_read_valid (25,184,393 samples, 0.01%)</title><rect x="1180.8" y="85" width="0.2" height="15.0" fill="rgb(227,49,52)" rx="2" ry="2" />
<text  x="1183.83" y="95.5" ></text>
</g>
<g >
<title>_prb_read_valid (25,805,684 samples, 0.01%)</title><rect x="582.2" y="69" width="0.1" height="15.0" fill="rgb(208,111,43)" rx="2" ry="2" />
<text  x="585.21" y="79.5" ></text>
</g>
<g >
<title>getrecordnum.part.0 (56,819,916 samples, 0.02%)</title><rect x="12.4" y="293" width="0.3" height="15.0" fill="rgb(234,61,47)" rx="2" ry="2" />
<text  x="15.38" y="303.5" ></text>
</g>
<g >
<title>[mummer] (117,181,600 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(220,21,30)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (371,644,869 samples, 0.15%)</title><rect x="1069.0" y="197" width="1.8" height="15.0" fill="rgb(245,104,12)" rx="2" ry="2" />
<text  x="1071.97" y="207.5" ></text>
</g>
<g >
<title>scanprefix (10,088,942,078 samples, 4.19%)</title><rect x="532.9" y="309" width="49.5" height="15.0" fill="rgb(238,49,20)" rx="2" ry="2" />
<text  x="535.90" y="319.5" >scan..</text>
</g>
<g >
<title>ext4_da_get_block_prep (31,694,183 samples, 0.01%)</title><rect x="17.2" y="117" width="0.1" height="15.0" fill="rgb(206,96,50)" rx="2" ry="2" />
<text  x="20.17" y="127.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (547,540,722 samples, 0.23%)</title><rect x="16.4" y="197" width="2.7" height="15.0" fill="rgb(244,76,1)" rx="2" ry="2" />
<text  x="19.41" y="207.5" ></text>
</g>
<g >
<title>irq_work_tick (36,074,588 samples, 0.01%)</title><rect x="582.2" y="165" width="0.2" height="15.0" fill="rgb(245,159,0)" rx="2" ry="2" />
<text  x="585.20" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (170,018,831 samples, 0.07%)</title><rect x="32.0" y="165" width="0.9" height="15.0" fill="rgb(247,90,52)" rx="2" ry="2" />
<text  x="35.02" y="175.5" ></text>
</g>
<g >
<title>mummer (240,524,037,755 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,137,16)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >mummer</text>
</g>
<g >
<title>update_process_times (38,753,054 samples, 0.02%)</title><rect x="582.2" y="181" width="0.2" height="15.0" fill="rgb(207,103,44)" rx="2" ry="2" />
<text  x="585.20" y="191.5" ></text>
</g>
<g >
<title>getbranchinfostree (3,458,830,613 samples, 1.44%)</title><rect x="39.9" y="309" width="17.0" height="15.0" fill="rgb(253,163,3)" rx="2" ry="2" />
<text  x="42.90" y="319.5" ></text>
</g>
<g >
<title>generic_write_end (117,410,083 samples, 0.05%)</title><rect x="18.5" y="133" width="0.6" height="15.0" fill="rgb(219,88,3)" rx="2" ry="2" />
<text  x="21.50" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (632,459,317 samples, 0.26%)</title><rect x="16.2" y="293" width="3.1" height="15.0" fill="rgb(219,54,52)" rx="2" ry="2" />
<text  x="19.15" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (385,219,133 samples, 0.16%)</title><rect x="1068.9" y="213" width="1.9" height="15.0" fill="rgb(241,54,42)" rx="2" ry="2" />
<text  x="1071.90" y="223.5" ></text>
</g>
<g >
<title>_IO_padn (48,100,501 samples, 0.02%)</title><rect x="1072.7" y="309" width="0.3" height="15.0" fill="rgb(234,55,4)" rx="2" ry="2" />
<text  x="1075.74" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (29,023,609 samples, 0.01%)</title><rect x="1127.8" y="261" width="0.1" height="15.0" fill="rgb(228,104,22)" rx="2" ry="2" />
<text  x="1130.79" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (135,482,389 samples, 0.06%)</title><rect x="532.1" y="229" width="0.7" height="15.0" fill="rgb(243,44,36)" rx="2" ry="2" />
<text  x="535.13" y="239.5" ></text>
</g>
<g >
<title>__do_munmap (20,877,251 samples, 0.01%)</title><rect x="21.2" y="229" width="0.1" height="15.0" fill="rgb(231,131,44)" rx="2" ry="2" />
<text  x="24.15" y="239.5" ></text>
</g>
<g >
<title>findmumcandidates (1,571,042,279 samples, 0.65%)</title><rect x="1079.6" y="325" width="7.7" height="15.0" fill="rgb(249,117,22)" rx="2" ry="2" />
<text  x="1082.61" y="335.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (27,628,482 samples, 0.01%)</title><rect x="57.5" y="213" width="0.1" height="15.0" fill="rgb(226,174,47)" rx="2" ry="2" />
<text  x="60.47" y="223.5" ></text>
</g>
<g >
<title>ksys_write (609,737,384 samples, 0.25%)</title><rect x="16.2" y="245" width="3.0" height="15.0" fill="rgb(225,176,39)" rx="2" ry="2" />
<text  x="19.22" y="255.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (28,214,101 samples, 0.01%)</title><rect x="16.6" y="53" width="0.1" height="15.0" fill="rgb(228,216,8)" rx="2" ry="2" />
<text  x="19.60" y="63.5" ></text>
</g>
<g >
<title>_IO_padn (38,199,544 samples, 0.02%)</title><rect x="14.1" y="309" width="0.2" height="15.0" fill="rgb(239,132,45)" rx="2" ry="2" />
<text  x="17.15" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (36,074,588 samples, 0.01%)</title><rect x="582.2" y="149" width="0.2" height="15.0" fill="rgb(245,135,53)" rx="2" ry="2" />
<text  x="585.20" y="159.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (347,889,876 samples, 0.14%)</title><rect x="1069.0" y="117" width="1.7" height="15.0" fill="rgb(234,133,36)" rx="2" ry="2" />
<text  x="1072.00" y="127.5" ></text>
</g>
<g >
<title>ext4_write_checks (62,150,714 samples, 0.03%)</title><rect x="16.4" y="165" width="0.3" height="15.0" fill="rgb(218,133,2)" rx="2" ry="2" />
<text  x="19.43" y="175.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (45,701,973 samples, 0.02%)</title><rect x="18.7" y="85" width="0.2" height="15.0" fill="rgb(246,141,2)" rx="2" ry="2" />
<text  x="21.66" y="95.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (76,336,269 samples, 0.03%)</title><rect x="18.5" y="101" width="0.4" height="15.0" fill="rgb(252,145,54)" rx="2" ry="2" />
<text  x="21.52" y="111.5" ></text>
</g>
<g >
<title>console_unlock (337,355,134 samples, 0.14%)</title><rect x="1069.0" y="101" width="1.7" height="15.0" fill="rgb(244,79,27)" rx="2" ry="2" />
<text  x="1072.01" y="111.5" ></text>
</g>
</g>
</svg>
