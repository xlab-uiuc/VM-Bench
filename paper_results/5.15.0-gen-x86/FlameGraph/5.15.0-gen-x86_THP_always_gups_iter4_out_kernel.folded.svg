<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>free_unref_page (394,711,882 samples, 0.67%)</title><rect x="14.2" y="213" width="7.9" height="15.0" fill="rgb(215,201,9)" rx="2" ry="2" />
<text  x="17.20" y="223.5" ></text>
</g>
<g >
<title>__GI___openat64 (16,971,924 samples, 0.03%)</title><rect x="10.2" y="469" width="0.3" height="15.0" fill="rgb(236,226,36)" rx="2" ry="2" />
<text  x="13.16" y="479.5" ></text>
</g>
<g >
<title>path_openat (10,248,378 samples, 0.02%)</title><rect x="10.7" y="373" width="0.2" height="15.0" fill="rgb(240,187,41)" rx="2" ry="2" />
<text  x="13.66" y="383.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (444,431,148 samples, 0.76%)</title><rect x="13.2" y="309" width="9.0" height="15.0" fill="rgb(240,115,3)" rx="2" ry="2" />
<text  x="16.24" y="319.5" ></text>
</g>
<g >
<title>lock_page_memcg (9,637,070 samples, 0.02%)</title><rect x="13.0" y="293" width="0.2" height="15.0" fill="rgb(241,22,38)" rx="2" ry="2" />
<text  x="16.03" y="303.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (16,853,271 samples, 0.03%)</title><rect x="761.6" y="53" width="0.3" height="15.0" fill="rgb(228,175,10)" rx="2" ry="2" />
<text  x="764.59" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (239,610,900 samples, 0.41%)</title><rect x="1183.5" y="405" width="4.8" height="15.0" fill="rgb(228,2,44)" rx="2" ry="2" />
<text  x="1186.46" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (238,804,700 samples, 0.41%)</title><rect x="1183.5" y="389" width="4.8" height="15.0" fill="rgb(227,74,37)" rx="2" ry="2" />
<text  x="1186.47" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (559,801,009 samples, 0.95%)</title><rect x="10.9" y="453" width="11.3" height="15.0" fill="rgb(234,208,37)" rx="2" ry="2" />
<text  x="13.92" y="463.5" ></text>
</g>
<g >
<title>try_charge_memcg (15,299,661 samples, 0.03%)</title><rect x="27.2" y="341" width="0.3" height="15.0" fill="rgb(205,42,10)" rx="2" ry="2" />
<text  x="30.20" y="351.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (9,903,457 samples, 0.02%)</title><rect x="1170.7" y="101" width="0.2" height="15.0" fill="rgb(234,145,12)" rx="2" ry="2" />
<text  x="1173.72" y="111.5" ></text>
</g>
<g >
<title>all (58,679,173,317 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(240,204,41)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,884,077 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(237,22,47)" rx="2" ry="2" />
<text  x="13.17" y="447.5" ></text>
</g>
<g >
<title>irq_work_tick (80,041,114 samples, 0.14%)</title><rect x="761.0" y="165" width="1.6" height="15.0" fill="rgb(221,83,5)" rx="2" ry="2" />
<text  x="763.95" y="175.5" ></text>
</g>
<g >
<title>update_wall_time (5,177,788 samples, 0.01%)</title><rect x="760.8" y="165" width="0.1" height="15.0" fill="rgb(247,80,22)" rx="2" ry="2" />
<text  x="763.82" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (50,938,862 samples, 0.09%)</title><rect x="23.7" y="389" width="1.0" height="15.0" fill="rgb(218,133,2)" rx="2" ry="2" />
<text  x="26.65" y="399.5" ></text>
</g>
<g >
<title>free_transhuge_page (421,492,986 samples, 0.72%)</title><rect x="13.7" y="245" width="8.5" height="15.0" fill="rgb(247,24,45)" rx="2" ry="2" />
<text  x="16.67" y="255.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5,978,581 samples, 0.01%)</title><rect x="12.9" y="293" width="0.1" height="15.0" fill="rgb(240,79,19)" rx="2" ry="2" />
<text  x="15.91" y="303.5" ></text>
</g>
<g >
<title>page_counter_try_charge (29,097,179 samples, 0.05%)</title><rect x="1181.3" y="293" width="0.6" height="15.0" fill="rgb(244,63,21)" rx="2" ry="2" />
<text  x="1184.34" y="303.5" ></text>
</g>
<g >
<title>PageHuge (7,545,494 samples, 0.01%)</title><rect x="13.3" y="245" width="0.1" height="15.0" fill="rgb(227,172,24)" rx="2" ry="2" />
<text  x="16.28" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (59,075,795 samples, 0.10%)</title><rect x="1170.3" y="341" width="1.2" height="15.0" fill="rgb(217,77,25)" rx="2" ry="2" />
<text  x="1173.28" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages (94,405,251 samples, 0.16%)</title><rect x="1180.9" y="341" width="1.9" height="15.0" fill="rgb(230,152,32)" rx="2" ry="2" />
<text  x="1183.90" y="351.5" ></text>
</g>
<g >
<title>irq_work_run_list (48,732,729 samples, 0.08%)</title><rect x="1170.4" y="197" width="1.0" height="15.0" fill="rgb(217,186,50)" rx="2" ry="2" />
<text  x="1173.37" y="207.5" ></text>
</g>
<g >
<title>pci_user_read_config_dword (50,113,100 samples, 0.09%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(215,136,13)" rx="2" ry="2" />
<text  x="1191.97" y="335.5" ></text>
</g>
<g >
<title>free_compound_page (60,107,650 samples, 0.10%)</title><rect x="11.0" y="277" width="1.2" height="15.0" fill="rgb(218,120,13)" rx="2" ry="2" />
<text  x="14.00" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (89,435,075 samples, 0.15%)</title><rect x="760.9" y="197" width="1.8" height="15.0" fill="rgb(236,213,9)" rx="2" ry="2" />
<text  x="763.93" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages (37,461,036,461 samples, 63.84%)</title><rect x="27.9" y="357" width="753.3" height="15.0" fill="rgb(226,168,26)" rx="2" ry="2" />
<text  x="30.85" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>vfs_read (52,740,573 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(230,189,1)" rx="2" ry="2" />
<text  x="1191.92" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37,470,790,486 samples, 63.86%)</title><rect x="27.7" y="373" width="753.6" height="15.0" fill="rgb(247,149,13)" rx="2" ry="2" />
<text  x="30.75" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>page_remove_rmap (21,059,095 samples, 0.04%)</title><rect x="12.8" y="309" width="0.4" height="15.0" fill="rgb(239,27,41)" rx="2" ry="2" />
<text  x="15.81" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (17,527,929 samples, 0.03%)</title><rect x="13.8" y="213" width="0.4" height="15.0" fill="rgb(238,219,25)" rx="2" ry="2" />
<text  x="16.85" y="223.5" ></text>
</g>
<g >
<title>free_compound_page (413,043,059 samples, 0.70%)</title><rect x="13.8" y="229" width="8.4" height="15.0" fill="rgb(228,40,54)" rx="2" ry="2" />
<text  x="16.84" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (9,820,851 samples, 0.02%)</title><rect x="1183.5" y="357" width="0.2" height="15.0" fill="rgb(221,49,0)" rx="2" ry="2" />
<text  x="1186.51" y="367.5" ></text>
</g>
<g >
<title>release_pages (443,007,734 samples, 0.75%)</title><rect x="13.2" y="277" width="9.0" height="15.0" fill="rgb(223,44,34)" rx="2" ry="2" />
<text  x="16.24" y="287.5" ></text>
</g>
<g >
<title>free_unref_page (58,414,530 samples, 0.10%)</title><rect x="11.0" y="261" width="1.2" height="15.0" fill="rgb(225,17,13)" rx="2" ry="2" />
<text  x="14.03" y="271.5" ></text>
</g>
<g >
<title>do_filp_open (15,923,825 samples, 0.03%)</title><rect x="10.2" y="373" width="0.3" height="15.0" fill="rgb(234,166,15)" rx="2" ry="2" />
<text  x="13.17" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (10,424,973 samples, 0.02%)</title><rect x="10.7" y="389" width="0.2" height="15.0" fill="rgb(225,110,35)" rx="2" ry="2" />
<text  x="13.66" y="399.5" ></text>
</g>
<g >
<title>clear_subpage (20,118,316 samples, 0.03%)</title><rect x="1179.6" y="373" width="0.4" height="15.0" fill="rgb(230,225,27)" rx="2" ry="2" />
<text  x="1182.58" y="383.5" ></text>
</g>
<g >
<title>page_counter_cancel (6,850,169 samples, 0.01%)</title><rect x="14.0" y="165" width="0.2" height="15.0" fill="rgb(222,209,3)" rx="2" ry="2" />
<text  x="17.04" y="175.5" ></text>
</g>
<g >
<title>update_process_times (226,480,931 samples, 0.39%)</title><rect x="1183.7" y="357" width="4.6" height="15.0" fill="rgb(254,81,42)" rx="2" ry="2" />
<text  x="1186.72" y="367.5" ></text>
</g>
<g >
<title>irq_work_run_list (210,656,234 samples, 0.36%)</title><rect x="1183.8" y="325" width="4.2" height="15.0" fill="rgb(232,38,26)" rx="2" ry="2" />
<text  x="1186.77" y="335.5" ></text>
</g>
<g >
<title>main (58,017,983,219 samples, 98.87%)</title><rect x="22.2" y="485" width="1166.7" height="15.0" fill="rgb(206,47,37)" rx="2" ry="2" />
<text  x="25.21" y="495.5" >main</text>
</g>
<g >
<title>entry_SYSCALL_64 (11,215,380 samples, 0.02%)</title><rect x="10.7" y="469" width="0.2" height="15.0" fill="rgb(212,106,27)" rx="2" ry="2" />
<text  x="13.66" y="479.5" ></text>
</g>
<g >
<title>irq_work_tick (211,193,343 samples, 0.36%)</title><rect x="1183.8" y="341" width="4.2" height="15.0" fill="rgb(242,32,21)" rx="2" ry="2" />
<text  x="1186.76" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,346,752 samples, 0.02%)</title><rect x="28.6" y="309" width="0.3" height="15.0" fill="rgb(213,207,51)" rx="2" ry="2" />
<text  x="31.62" y="319.5" ></text>
</g>
<g >
<title>pci_conf1_read (48,714,432 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(242,207,31)" rx="2" ry="2" />
<text  x="1192.00" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (102,083,375 samples, 0.17%)</title><rect x="760.8" y="277" width="2.0" height="15.0" fill="rgb(226,108,26)" rx="2" ry="2" />
<text  x="763.75" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5,938,197 samples, 0.01%)</title><rect x="1180.8" y="325" width="0.1" height="15.0" fill="rgb(251,195,37)" rx="2" ry="2" />
<text  x="1183.76" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (11,271,617 samples, 0.02%)</title><rect x="27.5" y="357" width="0.2" height="15.0" fill="rgb(245,220,29)" rx="2" ry="2" />
<text  x="30.50" y="367.5" ></text>
</g>
<g >
<title>prb_read_valid (73,986,735 samples, 0.13%)</title><rect x="761.0" y="85" width="1.5" height="15.0" fill="rgb(250,71,20)" rx="2" ry="2" />
<text  x="764.04" y="95.5" ></text>
</g>
<g >
<title>unmap_single_vma (495,585,002 samples, 0.84%)</title><rect x="12.2" y="357" width="10.0" height="15.0" fill="rgb(207,189,12)" rx="2" ry="2" />
<text  x="15.21" y="367.5" ></text>
</g>
<g >
<title>read (52,912,732 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(208,20,48)" rx="2" ry="2" />
<text  x="1191.92" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (19,283,874,645 samples, 32.86%)</title><rect x="783.7" y="357" width="387.8" height="15.0" fill="rgb(244,224,19)" rx="2" ry="2" />
<text  x="786.70" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>desc_read (7,361,259 samples, 0.01%)</title><rect x="1170.8" y="85" width="0.1" height="15.0" fill="rgb(230,31,17)" rx="2" ry="2" />
<text  x="1173.77" y="95.5" ></text>
</g>
<g >
<title>tick_sched_timer (96,108,246 samples, 0.16%)</title><rect x="760.8" y="213" width="1.9" height="15.0" fill="rgb(209,188,27)" rx="2" ry="2" />
<text  x="763.79" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37,448,466,913 samples, 63.82%)</title><rect x="28.1" y="341" width="753.1" height="15.0" fill="rgb(250,98,34)" rx="2" ry="2" />
<text  x="31.10" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>lru_cache_add (17,652,351 samples, 0.03%)</title><rect x="1180.0" y="357" width="0.3" height="15.0" fill="rgb(247,152,0)" rx="2" ry="2" />
<text  x="1182.99" y="367.5" ></text>
</g>
<g >
<title>try_charge_memcg (13,960,098 samples, 0.02%)</title><rect x="1182.0" y="293" width="0.2" height="15.0" fill="rgb(242,207,43)" rx="2" ry="2" />
<text  x="1184.95" y="303.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (63,320,315 samples, 0.11%)</title><rect x="10.9" y="341" width="1.3" height="15.0" fill="rgb(221,125,32)" rx="2" ry="2" />
<text  x="13.93" y="351.5" ></text>
</g>
<g >
<title>console_unlock (202,356,663 samples, 0.34%)</title><rect x="1183.8" y="277" width="4.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1186.83" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (52,740,573 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(237,202,26)" rx="2" ry="2" />
<text  x="1191.92" y="447.5" ></text>
</g>
<g >
<title>charge_memcg (26,496,193 samples, 0.05%)</title><rect x="27.0" y="357" width="0.5" height="15.0" fill="rgb(236,218,4)" rx="2" ry="2" />
<text  x="29.97" y="367.5" ></text>
</g>
<g >
<title>update_process_times (89,083,109 samples, 0.15%)</title><rect x="760.9" y="181" width="1.8" height="15.0" fill="rgb(208,133,49)" rx="2" ry="2" />
<text  x="763.94" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (56,708,638 samples, 0.10%)</title><rect x="1170.3" y="277" width="1.1" height="15.0" fill="rgb(208,26,13)" rx="2" ry="2" />
<text  x="1173.29" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (8,057,309 samples, 0.01%)</title><rect x="1180.4" y="341" width="0.1" height="15.0" fill="rgb(230,133,36)" rx="2" ry="2" />
<text  x="1183.38" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit (5,603,135 samples, 0.01%)</title><rect x="1183.2" y="437" width="0.1" height="15.0" fill="rgb(242,55,37)" rx="2" ry="2" />
<text  x="1186.17" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (559,801,009 samples, 0.95%)</title><rect x="10.9" y="469" width="11.3" height="15.0" fill="rgb(213,171,50)" rx="2" ry="2" />
<text  x="13.92" y="479.5" ></text>
</g>
<g >
<title>__put_compound_page (62,963,625 samples, 0.11%)</title><rect x="10.9" y="309" width="1.3" height="15.0" fill="rgb(222,23,4)" rx="2" ry="2" />
<text  x="13.94" y="319.5" ></text>
</g>
<g >
<title>rmqueue_bulk (19,682,075 samples, 0.03%)</title><rect x="780.8" y="325" width="0.4" height="15.0" fill="rgb(210,188,4)" rx="2" ry="2" />
<text  x="783.77" y="335.5" ></text>
</g>
<g >
<title>prep_new_page (10,120,430 samples, 0.02%)</title><rect x="1182.5" y="309" width="0.2" height="15.0" fill="rgb(231,145,25)" rx="2" ry="2" />
<text  x="1185.48" y="319.5" ></text>
</g>
<g >
<title>prep_compound_page (466,935,376 samples, 0.80%)</title><rect x="771.4" y="309" width="9.4" height="15.0" fill="rgb(251,207,44)" rx="2" ry="2" />
<text  x="774.38" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,917,115 samples, 0.01%)</title><rect x="1180.4" y="325" width="0.1" height="15.0" fill="rgb(231,180,13)" rx="2" ry="2" />
<text  x="1183.40" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (57,702,325,966 samples, 98.34%)</title><rect x="23.0" y="453" width="1160.3" height="15.0" fill="rgb(234,28,43)" rx="2" ry="2" />
<text  x="25.99" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (53,202,234 samples, 0.09%)</title><rect x="1170.4" y="245" width="1.0" height="15.0" fill="rgb(243,212,12)" rx="2" ry="2" />
<text  x="1173.36" y="255.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (424,774,815 samples, 0.72%)</title><rect x="762.8" y="309" width="8.6" height="15.0" fill="rgb(241,144,24)" rx="2" ry="2" />
<text  x="765.84" y="319.5" ></text>
</g>
<g >
<title>free_transhuge_page (60,643,432 samples, 0.10%)</title><rect x="11.0" y="293" width="1.2" height="15.0" fill="rgb(249,105,8)" rx="2" ry="2" />
<text  x="13.99" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (100,765,406 samples, 0.17%)</title><rect x="760.8" y="261" width="2.0" height="15.0" fill="rgb(221,107,13)" rx="2" ry="2" />
<text  x="763.75" y="271.5" ></text>
</g>
<g >
<title>get_data.isra.0 (16,823,007 samples, 0.03%)</title><rect x="1186.5" y="229" width="0.3" height="15.0" fill="rgb(215,98,6)" rx="2" ry="2" />
<text  x="1189.47" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (100,062,050 samples, 0.17%)</title><rect x="760.8" y="245" width="2.0" height="15.0" fill="rgb(208,28,22)" rx="2" ry="2" />
<text  x="763.76" y="255.5" ></text>
</g>
<g >
<title>prb_read_valid (45,839,839 samples, 0.08%)</title><rect x="1170.4" y="133" width="0.9" height="15.0" fill="rgb(211,88,3)" rx="2" ry="2" />
<text  x="1173.40" y="143.5" ></text>
</g>
<g >
<title>unmap_vmas (495,585,002 samples, 0.84%)</title><rect x="12.2" y="373" width="10.0" height="15.0" fill="rgb(227,148,40)" rx="2" ry="2" />
<text  x="15.21" y="383.5" ></text>
</g>
<g >
<title>sync_regs (17,246,186 samples, 0.03%)</title><rect x="1188.6" y="469" width="0.3" height="15.0" fill="rgb(241,177,0)" rx="2" ry="2" />
<text  x="1191.56" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (227,016,598 samples, 0.39%)</title><rect x="1183.7" y="373" width="4.6" height="15.0" fill="rgb(247,155,18)" rx="2" ry="2" />
<text  x="1186.71" y="383.5" ></text>
</g>
<g >
<title>free_pcp_prepare (6,512,191 samples, 0.01%)</title><rect x="12.5" y="277" width="0.2" height="15.0" fill="rgb(242,207,39)" rx="2" ry="2" />
<text  x="15.54" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7,122,334 samples, 0.01%)</title><rect x="13.5" y="229" width="0.1" height="15.0" fill="rgb(224,134,33)" rx="2" ry="2" />
<text  x="16.46" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,741,355,077 samples, 98.40%)</title><rect x="22.2" y="469" width="1161.2" height="15.0" fill="rgb(224,163,9)" rx="2" ry="2" />
<text  x="25.21" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>get_data.isra.0 (6,407,881 samples, 0.01%)</title><rect x="761.9" y="53" width="0.2" height="15.0" fill="rgb(222,162,39)" rx="2" ry="2" />
<text  x="764.93" y="63.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (8,656,095 samples, 0.01%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(236,64,31)" rx="2" ry="2" />
<text  x="13.19" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (251,118,543 samples, 0.43%)</title><rect x="1183.4" y="469" width="5.0" height="15.0" fill="rgb(218,78,47)" rx="2" ry="2" />
<text  x="1186.35" y="479.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (443,186,171 samples, 0.76%)</title><rect x="13.2" y="293" width="9.0" height="15.0" fill="rgb(230,223,36)" rx="2" ry="2" />
<text  x="16.24" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18,602,424 samples, 0.03%)</title><rect x="1182.4" y="325" width="0.3" height="15.0" fill="rgb(236,78,20)" rx="2" ry="2" />
<text  x="1185.38" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (10,444,667 samples, 0.02%)</title><rect x="12.5" y="293" width="0.2" height="15.0" fill="rgb(242,102,13)" rx="2" ry="2" />
<text  x="15.53" y="303.5" ></text>
</g>
<g >
<title>gups_vanilla (58,679,173,317 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(239,191,41)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>raw_pci_read (48,978,250 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(223,156,8)" rx="2" ry="2" />
<text  x="1191.99" y="303.5" ></text>
</g>
<g >
<title>[unknown] (30,121,187 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(227,193,53)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (36,497,724,667 samples, 62.20%)</title><rect x="28.9" y="309" width="733.9" height="15.0" fill="rgb(232,154,26)" rx="2" ry="2" />
<text  x="31.89" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (246,750,302 samples, 0.42%)</title><rect x="1183.4" y="453" width="5.0" height="15.0" fill="rgb(212,7,12)" rx="2" ry="2" />
<text  x="1186.44" y="463.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (63,499,290 samples, 0.11%)</title><rect x="10.9" y="373" width="1.3" height="15.0" fill="rgb(227,143,44)" rx="2" ry="2" />
<text  x="13.93" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,263,456 samples, 0.01%)</title><rect x="12.9" y="277" width="0.1" height="15.0" fill="rgb(232,3,32)" rx="2" ry="2" />
<text  x="15.92" y="287.5" ></text>
</g>
<g >
<title>desc_read (12,375,719 samples, 0.02%)</title><rect x="761.7" y="37" width="0.2" height="15.0" fill="rgb(226,21,9)" rx="2" ry="2" />
<text  x="764.68" y="47.5" ></text>
</g>
<g >
<title>clear_huge_page (19,807,134,973 samples, 33.75%)</title><rect x="781.3" y="373" width="398.3" height="15.0" fill="rgb(229,218,46)" rx="2" ry="2" />
<text  x="784.27" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>tick_do_update_jiffies64 (5,530,187 samples, 0.01%)</title><rect x="760.8" y="181" width="0.1" height="15.0" fill="rgb(222,35,10)" rx="2" ry="2" />
<text  x="763.82" y="191.5" ></text>
</g>
<g >
<title>__GI___openat64 (11,215,380 samples, 0.02%)</title><rect x="10.7" y="485" width="0.2" height="15.0" fill="rgb(207,22,43)" rx="2" ry="2" />
<text  x="13.66" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,971,924 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(222,202,40)" rx="2" ry="2" />
<text  x="13.16" y="463.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (38,205,402 samples, 0.07%)</title><rect x="27.0" y="373" width="0.7" height="15.0" fill="rgb(223,135,47)" rx="2" ry="2" />
<text  x="29.97" y="383.5" ></text>
</g>
<g >
<title>timekeeping_advance (9,114,307 samples, 0.02%)</title><rect x="1183.5" y="325" width="0.2" height="15.0" fill="rgb(219,17,46)" rx="2" ry="2" />
<text  x="1186.53" y="335.5" ></text>
</g>
<g >
<title>prb_read_valid (195,188,170 samples, 0.33%)</title><rect x="1184.0" y="261" width="3.9" height="15.0" fill="rgb(247,217,40)" rx="2" ry="2" />
<text  x="1186.96" y="271.5" ></text>
</g>
<g >
<title>__page_cache_release (11,747,210 samples, 0.02%)</title><rect x="13.4" y="245" width="0.3" height="15.0" fill="rgb(228,119,6)" rx="2" ry="2" />
<text  x="16.43" y="255.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,592,049,662 samples, 98.15%)</title><rect x="24.7" y="389" width="1158.2" height="15.0" fill="rgb(214,93,28)" rx="2" ry="2" />
<text  x="27.74" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>__cond_resched (36,981,034 samples, 0.06%)</title><rect x="782.8" y="357" width="0.8" height="15.0" fill="rgb(239,57,46)" rx="2" ry="2" />
<text  x="785.82" y="367.5" ></text>
</g>
<g >
<title>irq_work_single (79,602,389 samples, 0.14%)</title><rect x="761.0" y="133" width="1.6" height="15.0" fill="rgb(246,71,17)" rx="2" ry="2" />
<text  x="763.96" y="143.5" ></text>
</g>
<g >
<title>free_pcp_prepare (386,961,330 samples, 0.66%)</title><rect x="14.2" y="197" width="7.8" height="15.0" fill="rgb(212,115,20)" rx="2" ry="2" />
<text  x="17.22" y="207.5" ></text>
</g>
<g >
<title>zap_huge_pmd (493,708,983 samples, 0.84%)</title><rect x="12.2" y="325" width="10.0" height="15.0" fill="rgb(230,186,45)" rx="2" ry="2" />
<text  x="15.25" y="335.5" ></text>
</g>
<g >
<title>path_openat (15,838,097 samples, 0.03%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(245,9,10)" rx="2" ry="2" />
<text  x="13.17" y="367.5" ></text>
</g>
<g >
<title>pte_alloc_one (112,213,118 samples, 0.19%)</title><rect x="1180.6" y="373" width="2.3" height="15.0" fill="rgb(229,191,13)" rx="2" ry="2" />
<text  x="1183.61" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (97,426,903 samples, 0.17%)</title><rect x="760.8" y="229" width="1.9" height="15.0" fill="rgb(247,151,12)" rx="2" ry="2" />
<text  x="763.77" y="239.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (63,499,290 samples, 0.11%)</title><rect x="10.9" y="357" width="1.3" height="15.0" fill="rgb(218,38,4)" rx="2" ry="2" />
<text  x="13.93" y="367.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (43,989,801 samples, 0.07%)</title><rect x="1185.6" y="229" width="0.9" height="15.0" fill="rgb(234,0,37)" rx="2" ry="2" />
<text  x="1188.59" y="239.5" ></text>
</g>
<g >
<title>do_sys_openat2 (11,039,557 samples, 0.02%)</title><rect x="10.7" y="405" width="0.2" height="15.0" fill="rgb(250,167,21)" rx="2" ry="2" />
<text  x="13.66" y="415.5" ></text>
</g>
<g >
<title>__cond_resched (85,437,936 samples, 0.15%)</title><rect x="25.2" y="373" width="1.7" height="15.0" fill="rgb(242,214,16)" rx="2" ry="2" />
<text  x="28.20" y="383.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,245,953 samples, 0.09%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(217,0,49)" rx="2" ry="2" />
<text  x="1191.95" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (52,476,521 samples, 0.09%)</title><rect x="1188.9" y="389" width="1.1" height="15.0" fill="rgb(208,171,11)" rx="2" ry="2" />
<text  x="1191.93" y="399.5" ></text>
</g>
<g >
<title>__free_pages (21,524,177 samples, 0.04%)</title><rect x="12.3" y="309" width="0.4" height="15.0" fill="rgb(240,124,35)" rx="2" ry="2" />
<text  x="15.31" y="319.5" ></text>
</g>
<g >
<title>update_process_times (53,115,096 samples, 0.09%)</title><rect x="1170.4" y="229" width="1.0" height="15.0" fill="rgb(209,172,10)" rx="2" ry="2" />
<text  x="1173.36" y="239.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (48,557,051 samples, 0.08%)</title><rect x="1170.4" y="165" width="1.0" height="15.0" fill="rgb(240,130,49)" rx="2" ry="2" />
<text  x="1173.37" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (243,984,590 samples, 0.42%)</title><rect x="1183.5" y="421" width="4.9" height="15.0" fill="rgb(246,139,14)" rx="2" ry="2" />
<text  x="1186.46" y="431.5" ></text>
</g>
<g >
<title>do_sys_open (11,039,557 samples, 0.02%)</title><rect x="10.7" y="421" width="0.2" height="15.0" fill="rgb(214,35,4)" rx="2" ry="2" />
<text  x="13.66" y="431.5" ></text>
</g>
<g >
<title>__put_compound_page (441,407,570 samples, 0.75%)</title><rect x="13.3" y="261" width="8.9" height="15.0" fill="rgb(247,159,24)" rx="2" ry="2" />
<text  x="16.28" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (7,196,037 samples, 0.01%)</title><rect x="762.6" y="165" width="0.1" height="15.0" fill="rgb(219,197,16)" rx="2" ry="2" />
<text  x="765.58" y="175.5" ></text>
</g>
<g >
<title>irq_work_tick (48,907,634 samples, 0.08%)</title><rect x="1170.4" y="213" width="1.0" height="15.0" fill="rgb(216,66,26)" rx="2" ry="2" />
<text  x="1173.37" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (12,341,144 samples, 0.02%)</title><rect x="1188.0" y="341" width="0.3" height="15.0" fill="rgb(224,145,38)" rx="2" ry="2" />
<text  x="1191.03" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (8,933,255 samples, 0.02%)</title><rect x="1180.4" y="357" width="0.1" height="15.0" fill="rgb(222,37,26)" rx="2" ry="2" />
<text  x="1183.36" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,089,425 samples, 0.02%)</title><rect x="1183.5" y="373" width="0.2" height="15.0" fill="rgb(249,68,31)" rx="2" ry="2" />
<text  x="1186.51" y="383.5" ></text>
</g>
<g >
<title>__do_munmap (559,801,009 samples, 0.95%)</title><rect x="10.9" y="405" width="11.3" height="15.0" fill="rgb(226,69,1)" rx="2" ry="2" />
<text  x="13.92" y="415.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (46,284,868 samples, 0.08%)</title><rect x="1181.3" y="309" width="0.9" height="15.0" fill="rgb(223,152,45)" rx="2" ry="2" />
<text  x="1184.30" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (16,709,337 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(218,30,52)" rx="2" ry="2" />
<text  x="13.17" y="431.5" ></text>
</g>
<g >
<title>memcpy_erms (21,943,801 samples, 0.04%)</title><rect x="762.1" y="69" width="0.4" height="15.0" fill="rgb(237,61,35)" rx="2" ry="2" />
<text  x="765.09" y="79.5" ></text>
</g>
<g >
<title>rcu_all_qs (89,922,204 samples, 0.15%)</title><rect x="1177.8" y="357" width="1.8" height="15.0" fill="rgb(247,192,7)" rx="2" ry="2" />
<text  x="1180.77" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (102,171,307 samples, 0.17%)</title><rect x="760.7" y="293" width="2.1" height="15.0" fill="rgb(211,180,23)" rx="2" ry="2" />
<text  x="763.75" y="303.5" ></text>
</g>
<g >
<title>memcpy_erms (48,161,697 samples, 0.08%)</title><rect x="1186.9" y="245" width="1.0" height="15.0" fill="rgb(208,49,15)" rx="2" ry="2" />
<text  x="1189.92" y="255.5" ></text>
</g>
<g >
<title>irq_work_single (48,644,801 samples, 0.08%)</title><rect x="1170.4" y="181" width="1.0" height="15.0" fill="rgb(251,81,48)" rx="2" ry="2" />
<text  x="1173.37" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (244,698,282 samples, 0.42%)</title><rect x="1183.4" y="437" width="5.0" height="15.0" fill="rgb(220,164,30)" rx="2" ry="2" />
<text  x="1186.44" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (6,947,846 samples, 0.01%)</title><rect x="22.0" y="197" width="0.1" height="15.0" fill="rgb(252,17,4)" rx="2" ry="2" />
<text  x="25.00" y="207.5" ></text>
</g>
<g >
<title>__munmap (559,801,009 samples, 0.95%)</title><rect x="10.9" y="485" width="11.3" height="15.0" fill="rgb(223,170,51)" rx="2" ry="2" />
<text  x="13.92" y="495.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (79,337,990 samples, 0.14%)</title><rect x="761.0" y="117" width="1.6" height="15.0" fill="rgb(214,109,7)" rx="2" ry="2" />
<text  x="763.97" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (58,462,072 samples, 0.10%)</title><rect x="1170.3" y="309" width="1.2" height="15.0" fill="rgb(253,57,38)" rx="2" ry="2" />
<text  x="1173.28" y="319.5" ></text>
</g>
<g >
<title>__count_memcg_events (6,186,103 samples, 0.01%)</title><rect x="23.4" y="405" width="0.1" height="15.0" fill="rgb(248,102,38)" rx="2" ry="2" />
<text  x="26.37" y="415.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (5,712,391 samples, 0.01%)</title><rect x="12.6" y="245" width="0.1" height="15.0" fill="rgb(251,177,1)" rx="2" ry="2" />
<text  x="15.56" y="255.5" ></text>
</g>
<g >
<title>walk_component (5,595,134 samples, 0.01%)</title><rect x="10.3" y="325" width="0.1" height="15.0" fill="rgb(227,18,15)" rx="2" ry="2" />
<text  x="13.25" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (12,484,637 samples, 0.02%)</title><rect x="1180.6" y="357" width="0.3" height="15.0" fill="rgb(239,25,28)" rx="2" ry="2" />
<text  x="1183.63" y="367.5" ></text>
</g>
<g >
<title>alloc_pages (98,506,221 samples, 0.17%)</title><rect x="1180.9" y="357" width="2.0" height="15.0" fill="rgb(246,39,18)" rx="2" ry="2" />
<text  x="1183.88" y="367.5" ></text>
</g>
<g >
<title>do_sys_open (16,709,337 samples, 0.03%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(243,25,24)" rx="2" ry="2" />
<text  x="13.17" y="415.5" ></text>
</g>
<g >
<title>console_unlock (46,803,904 samples, 0.08%)</title><rect x="1170.4" y="149" width="0.9" height="15.0" fill="rgb(248,63,47)" rx="2" ry="2" />
<text  x="1173.38" y="159.5" ></text>
</g>
<g >
<title>page_counter_uncharge (8,181,697 samples, 0.01%)</title><rect x="14.0" y="181" width="0.2" height="15.0" fill="rgb(236,124,45)" rx="2" ry="2" />
<text  x="17.02" y="191.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (6,337,651 samples, 0.01%)</title><rect x="12.5" y="261" width="0.2" height="15.0" fill="rgb(207,132,48)" rx="2" ry="2" />
<text  x="15.55" y="271.5" ></text>
</g>
<g >
<title>update_wall_time (9,468,275 samples, 0.02%)</title><rect x="1183.5" y="341" width="0.2" height="15.0" fill="rgb(252,193,54)" rx="2" ry="2" />
<text  x="1186.52" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_openat (11,039,557 samples, 0.02%)</title><rect x="10.7" y="437" width="0.2" height="15.0" fill="rgb(236,201,14)" rx="2" ry="2" />
<text  x="13.66" y="447.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (210,122,840 samples, 0.36%)</title><rect x="1183.8" y="293" width="4.2" height="15.0" fill="rgb(237,197,10)" rx="2" ry="2" />
<text  x="1186.79" y="303.5" ></text>
</g>
<g >
<title>pci_read_config (51,245,953 samples, 0.09%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(226,45,1)" rx="2" ry="2" />
<text  x="1191.95" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (7,855,857 samples, 0.01%)</title><rect x="1181.1" y="309" width="0.2" height="15.0" fill="rgb(229,213,42)" rx="2" ry="2" />
<text  x="1184.14" y="319.5" ></text>
</g>
<g >
<title>pci_read (49,066,326 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="1191.99" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (49,587,528 samples, 0.08%)</title><rect x="761.1" y="69" width="1.0" height="15.0" fill="rgb(210,150,32)" rx="2" ry="2" />
<text  x="764.06" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,661,221 samples, 0.01%)</title><rect x="783.6" y="357" width="0.1" height="15.0" fill="rgb(234,47,2)" rx="2" ry="2" />
<text  x="786.57" y="367.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (16,866,358 samples, 0.03%)</title><rect x="1180.0" y="341" width="0.3" height="15.0" fill="rgb(253,153,26)" rx="2" ry="2" />
<text  x="1183.00" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (5,103,639 samples, 0.01%)</title><rect x="1188.1" y="325" width="0.1" height="15.0" fill="rgb(217,187,33)" rx="2" ry="2" />
<text  x="1191.11" y="335.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (5,969,757 samples, 0.01%)</title><rect x="760.8" y="197" width="0.1" height="15.0" fill="rgb(228,75,9)" rx="2" ry="2" />
<text  x="763.81" y="207.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (18,002,698 samples, 0.03%)</title><rect x="1180.0" y="373" width="0.3" height="15.0" fill="rgb(235,204,30)" rx="2" ry="2" />
<text  x="1182.99" y="383.5" ></text>
</g>
<g >
<title>memcpy_erms (16,303,934 samples, 0.03%)</title><rect x="1171.0" y="117" width="0.3" height="15.0" fill="rgb(253,205,12)" rx="2" ry="2" />
<text  x="1174.00" y="127.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,476,521 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(238,206,38)" rx="2" ry="2" />
<text  x="1191.93" y="383.5" ></text>
</g>
<g >
<title>__vm_munmap (559,801,009 samples, 0.95%)</title><rect x="10.9" y="421" width="11.3" height="15.0" fill="rgb(250,3,41)" rx="2" ry="2" />
<text  x="13.92" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (59,075,795 samples, 0.10%)</title><rect x="1170.3" y="325" width="1.2" height="15.0" fill="rgb(228,57,48)" rx="2" ry="2" />
<text  x="1173.28" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,824,934 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(218,21,30)" rx="2" ry="2" />
<text  x="1191.92" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (56,532,922 samples, 0.10%)</title><rect x="1170.3" y="261" width="1.1" height="15.0" fill="rgb(240,58,13)" rx="2" ry="2" />
<text  x="1173.29" y="271.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5,964,311 samples, 0.01%)</title><rect x="13.5" y="213" width="0.1" height="15.0" fill="rgb(241,100,3)" rx="2" ry="2" />
<text  x="16.49" y="223.5" ></text>
</g>
<g >
<title>release_pages (63,320,315 samples, 0.11%)</title><rect x="10.9" y="325" width="1.3" height="15.0" fill="rgb(252,172,48)" rx="2" ry="2" />
<text  x="13.93" y="335.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5,876,982 samples, 0.01%)</title><rect x="22.0" y="181" width="0.1" height="15.0" fill="rgb(220,111,37)" rx="2" ry="2" />
<text  x="25.02" y="191.5" ></text>
</g>
<g >
<title>console_unlock (77,230,680 samples, 0.13%)</title><rect x="761.0" y="101" width="1.5" height="15.0" fill="rgb(208,215,21)" rx="2" ry="2" />
<text  x="763.98" y="111.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (66,378,071 samples, 0.11%)</title><rect x="1180.9" y="325" width="1.4" height="15.0" fill="rgb(238,142,25)" rx="2" ry="2" />
<text  x="1183.95" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (8,985,201 samples, 0.02%)</title><rect x="1182.5" y="293" width="0.2" height="15.0" fill="rgb(239,163,6)" rx="2" ry="2" />
<text  x="1185.49" y="303.5" ></text>
</g>
<g >
<title>prep_new_page (37,406,186,376 samples, 63.75%)</title><rect x="28.6" y="325" width="752.2" height="15.0" fill="rgb(246,165,5)" rx="2" ry="2" />
<text  x="31.55" y="335.5" >prep_new_page</text>
</g>
<g >
<title>do_user_addr_fault (57,690,054,736 samples, 98.31%)</title><rect x="23.0" y="437" width="1160.1" height="15.0" fill="rgb(219,155,50)" rx="2" ry="2" />
<text  x="26.02" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>irq_work_run_list (79,953,886 samples, 0.14%)</title><rect x="761.0" y="149" width="1.6" height="15.0" fill="rgb(227,38,45)" rx="2" ry="2" />
<text  x="763.96" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (57,673,381,520 samples, 98.29%)</title><rect x="23.2" y="421" width="1159.8" height="15.0" fill="rgb(228,6,27)" rx="2" ry="2" />
<text  x="26.21" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>memcg_check_events (8,133,221 samples, 0.01%)</title><rect x="27.0" y="341" width="0.2" height="15.0" fill="rgb(231,152,47)" rx="2" ry="2" />
<text  x="30.03" y="351.5" ></text>
</g>
<g >
<title>page_counter_try_charge (13,028,763 samples, 0.02%)</title><rect x="27.2" y="325" width="0.3" height="15.0" fill="rgb(216,29,21)" rx="2" ry="2" />
<text  x="30.23" y="335.5" ></text>
</g>
<g >
<title>_prb_read_valid (138,687,931 samples, 0.24%)</title><rect x="1184.0" y="245" width="2.8" height="15.0" fill="rgb(213,131,42)" rx="2" ry="2" />
<text  x="1187.02" y="255.5" ></text>
</g>
<g >
<title>ksys_read (52,740,573 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(248,22,31)" rx="2" ry="2" />
<text  x="1191.92" y="431.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (10,244,275 samples, 0.02%)</title><rect x="1180.3" y="373" width="0.3" height="15.0" fill="rgb(244,107,15)" rx="2" ry="2" />
<text  x="1183.35" y="383.5" ></text>
</g>
<g >
<title>do_sys_openat2 (16,709,337 samples, 0.03%)</title><rect x="10.2" y="389" width="0.3" height="15.0" fill="rgb(217,57,41)" rx="2" ry="2" />
<text  x="13.17" y="399.5" ></text>
</g>
<g >
<title>clear_subpage (312,290,173 samples, 0.53%)</title><rect x="1171.5" y="357" width="6.3" height="15.0" fill="rgb(210,137,1)" rx="2" ry="2" />
<text  x="1174.49" y="367.5" ></text>
</g>
<g >
<title>free_pcp_prepare (57,253,087 samples, 0.10%)</title><rect x="11.0" y="245" width="1.2" height="15.0" fill="rgb(212,41,33)" rx="2" ry="2" />
<text  x="14.03" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (52,912,732 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(219,84,45)" rx="2" ry="2" />
<text  x="1191.92" y="479.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (6,130,435 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(232,223,26)" rx="2" ry="2" />
<text  x="13.68" y="367.5" ></text>
</g>
<g >
<title>unmap_region (559,711,463 samples, 0.95%)</title><rect x="10.9" y="389" width="11.3" height="15.0" fill="rgb(246,114,4)" rx="2" ry="2" />
<text  x="13.92" y="399.5" ></text>
</g>
<g >
<title>uncharge_batch (15,654,254 samples, 0.03%)</title><rect x="13.9" y="197" width="0.3" height="15.0" fill="rgb(238,115,24)" rx="2" ry="2" />
<text  x="16.87" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (559,801,009 samples, 0.95%)</title><rect x="10.9" y="437" width="11.3" height="15.0" fill="rgb(249,142,50)" rx="2" ry="2" />
<text  x="13.92" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,656,117,401 samples, 98.26%)</title><rect x="23.5" y="405" width="1159.4" height="15.0" fill="rgb(245,52,27)" rx="2" ry="2" />
<text  x="26.49" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>irq_work_single (210,567,755 samples, 0.36%)</title><rect x="1183.8" y="309" width="4.2" height="15.0" fill="rgb(217,56,35)" rx="2" ry="2" />
<text  x="1186.78" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (28,396,159 samples, 0.05%)</title><rect x="1170.4" y="117" width="0.6" height="15.0" fill="rgb(234,61,13)" rx="2" ry="2" />
<text  x="1173.42" y="127.5" ></text>
</g>
<g >
<title>unmap_page_range (495,406,059 samples, 0.84%)</title><rect x="12.2" y="341" width="10.0" height="15.0" fill="rgb(221,113,25)" rx="2" ry="2" />
<text  x="15.22" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (57,936,081 samples, 0.10%)</title><rect x="1170.3" y="293" width="1.2" height="15.0" fill="rgb(207,53,14)" rx="2" ry="2" />
<text  x="1173.29" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (6,464,019 samples, 0.01%)</title><rect x="1180.7" y="341" width="0.2" height="15.0" fill="rgb(247,121,38)" rx="2" ry="2" />
<text  x="1183.75" y="351.5" ></text>
</g>
<g >
<title>desc_read (33,614,549 samples, 0.06%)</title><rect x="1185.8" y="213" width="0.7" height="15.0" fill="rgb(254,81,4)" rx="2" ry="2" />
<text  x="1188.80" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,127,727 samples, 0.02%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(243,14,8)" rx="2" ry="2" />
<text  x="13.66" y="463.5" ></text>
</g>
</g>
</svg>
