<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>pci_read (49,680,962 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(254,156,42)" rx="2" ry="2" />
<text  x="1191.98" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (52,674,476 samples, 0.09%)</title><rect x="1169.1" y="245" width="1.1" height="15.0" fill="rgb(239,7,29)" rx="2" ry="2" />
<text  x="1172.14" y="255.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (9,815,031 samples, 0.02%)</title><rect x="1183.4" y="357" width="0.2" height="15.0" fill="rgb(236,153,3)" rx="2" ry="2" />
<text  x="1186.35" y="367.5" ></text>
</g>
<g >
<title>uncharge_batch (15,147,603 samples, 0.03%)</title><rect x="13.8" y="197" width="0.3" height="15.0" fill="rgb(228,40,48)" rx="2" ry="2" />
<text  x="16.80" y="207.5" ></text>
</g>
<g >
<title>prb_read_valid (43,824,171 samples, 0.07%)</title><rect x="1169.2" y="133" width="0.9" height="15.0" fill="rgb(246,153,1)" rx="2" ry="2" />
<text  x="1172.20" y="143.5" ></text>
</g>
<g >
<title>free_pcp_prepare (392,192,222 samples, 0.67%)</title><rect x="14.1" y="197" width="7.9" height="15.0" fill="rgb(238,83,20)" rx="2" ry="2" />
<text  x="17.14" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (96,552,148 samples, 0.16%)</title><rect x="759.6" y="197" width="2.0" height="15.0" fill="rgb(205,62,53)" rx="2" ry="2" />
<text  x="762.63" y="207.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (5,618,194 samples, 0.01%)</title><rect x="759.5" y="181" width="0.1" height="15.0" fill="rgb(234,73,15)" rx="2" ry="2" />
<text  x="762.52" y="191.5" ></text>
</g>
<g >
<title>desc_read (12,636,345 samples, 0.02%)</title><rect x="760.4" y="37" width="0.2" height="15.0" fill="rgb(233,38,32)" rx="2" ry="2" />
<text  x="763.39" y="47.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (9,099,601 samples, 0.02%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(247,77,24)" rx="2" ry="2" />
<text  x="13.21" y="351.5" ></text>
</g>
<g >
<title>update_wall_time (5,530,579 samples, 0.01%)</title><rect x="759.5" y="165" width="0.1" height="15.0" fill="rgb(241,1,0)" rx="2" ry="2" />
<text  x="762.52" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (58,808,026 samples, 0.10%)</title><rect x="1169.1" y="325" width="1.1" height="15.0" fill="rgb(253,64,30)" rx="2" ry="2" />
<text  x="1172.06" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,430,573 samples, 0.02%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(229,220,49)" rx="2" ry="2" />
<text  x="13.71" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,599,963 samples, 0.01%)</title><rect x="1180.5" y="341" width="0.1" height="15.0" fill="rgb(225,185,3)" rx="2" ry="2" />
<text  x="1183.48" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,747,688 samples, 0.09%)</title><rect x="23.7" y="389" width="1.0" height="15.0" fill="rgb(209,206,53)" rx="2" ry="2" />
<text  x="26.67" y="399.5" ></text>
</g>
<g >
<title>memcpy_erms (27,215,773 samples, 0.05%)</title><rect x="760.8" y="69" width="0.6" height="15.0" fill="rgb(225,131,53)" rx="2" ry="2" />
<text  x="763.82" y="79.5" ></text>
</g>
<g >
<title>unmap_region (558,653,609 samples, 0.95%)</title><rect x="11.0" y="389" width="11.2" height="15.0" fill="rgb(245,43,2)" rx="2" ry="2" />
<text  x="13.96" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,193,010 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(218,26,21)" rx="2" ry="2" />
<text  x="13.17" y="447.5" ></text>
</g>
<g >
<title>free_pcp_prepare (5,266,164 samples, 0.01%)</title><rect x="12.5" y="277" width="0.1" height="15.0" fill="rgb(250,66,23)" rx="2" ry="2" />
<text  x="15.51" y="287.5" ></text>
</g>
<g >
<title>ksys_read (52,123,980 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(236,163,13)" rx="2" ry="2" />
<text  x="1191.94" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (36,444,116,693 samples, 62.10%)</title><rect x="28.9" y="309" width="732.8" height="15.0" fill="rgb(214,201,20)" rx="2" ry="2" />
<text  x="31.89" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>vfs_read (52,123,980 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(241,216,25)" rx="2" ry="2" />
<text  x="1191.94" y="415.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (32,591,988 samples, 0.06%)</title><rect x="26.9" y="373" width="0.7" height="15.0" fill="rgb(208,137,33)" rx="2" ry="2" />
<text  x="29.95" y="383.5" ></text>
</g>
<g >
<title>lock_page_memcg (9,279,561 samples, 0.02%)</title><rect x="13.0" y="293" width="0.1" height="15.0" fill="rgb(226,20,14)" rx="2" ry="2" />
<text  x="15.96" y="303.5" ></text>
</g>
<g >
<title>console_unlock (84,879,397 samples, 0.14%)</title><rect x="759.7" y="101" width="1.7" height="15.0" fill="rgb(247,207,3)" rx="2" ry="2" />
<text  x="762.67" y="111.5" ></text>
</g>
<g >
<title>do_sys_openat2 (17,843,100 samples, 0.03%)</title><rect x="10.2" y="389" width="0.3" height="15.0" fill="rgb(247,155,43)" rx="2" ry="2" />
<text  x="13.18" y="399.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (52,041,028 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(220,184,40)" rx="2" ry="2" />
<text  x="1191.94" y="383.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (44,357,722 samples, 0.08%)</title><rect x="1185.4" y="229" width="0.9" height="15.0" fill="rgb(252,53,47)" rx="2" ry="2" />
<text  x="1188.43" y="239.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (16,930,585 samples, 0.03%)</title><rect x="13.8" y="213" width="0.3" height="15.0" fill="rgb(213,21,26)" rx="2" ry="2" />
<text  x="16.78" y="223.5" ></text>
</g>
<g >
<title>console_unlock (209,715,392 samples, 0.36%)</title><rect x="1183.7" y="277" width="4.2" height="15.0" fill="rgb(212,229,32)" rx="2" ry="2" />
<text  x="1186.67" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (19,254,645,498 samples, 32.81%)</title><rect x="783.1" y="357" width="387.2" height="15.0" fill="rgb(212,26,50)" rx="2" ry="2" />
<text  x="786.10" y="367.5" >clear_page_erms</text>
</g>
<g >
<title>read (52,299,459 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(212,62,27)" rx="2" ry="2" />
<text  x="1191.94" y="495.5" ></text>
</g>
<g >
<title>desc_read (33,181,406 samples, 0.06%)</title><rect x="1185.7" y="213" width="0.6" height="15.0" fill="rgb(228,37,17)" rx="2" ry="2" />
<text  x="1188.65" y="223.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (5,881,479 samples, 0.01%)</title><rect x="759.5" y="197" width="0.1" height="15.0" fill="rgb(207,54,15)" rx="2" ry="2" />
<text  x="762.51" y="207.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (72,705,057 samples, 0.12%)</title><rect x="1180.7" y="325" width="1.4" height="15.0" fill="rgb(231,209,31)" rx="2" ry="2" />
<text  x="1183.66" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,558,353 samples, 0.01%)</title><rect x="1180.2" y="325" width="0.1" height="15.0" fill="rgb(236,192,34)" rx="2" ry="2" />
<text  x="1183.15" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (57,582,227 samples, 0.10%)</title><rect x="1169.1" y="293" width="1.1" height="15.0" fill="rgb(223,22,45)" rx="2" ry="2" />
<text  x="1172.07" y="303.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (58,041,388 samples, 0.10%)</title><rect x="11.0" y="373" width="1.1" height="15.0" fill="rgb(226,135,53)" rx="2" ry="2" />
<text  x="13.97" y="383.5" ></text>
</g>
<g >
<title>alloc_pages (105,809,246 samples, 0.18%)</title><rect x="1180.6" y="357" width="2.1" height="15.0" fill="rgb(208,47,53)" rx="2" ry="2" />
<text  x="1183.60" y="367.5" ></text>
</g>
<g >
<title>find_vma (5,559,757 samples, 0.01%)</title><rect x="23.1" y="421" width="0.1" height="15.0" fill="rgb(224,128,42)" rx="2" ry="2" />
<text  x="26.13" y="431.5" ></text>
</g>
<g >
<title>free_pcp_prepare (50,097,592 samples, 0.09%)</title><rect x="11.1" y="245" width="1.0" height="15.0" fill="rgb(205,118,3)" rx="2" ry="2" />
<text  x="14.11" y="255.5" ></text>
</g>
<g >
<title>prep_new_page (8,566,015 samples, 0.01%)</title><rect x="1182.3" y="309" width="0.2" height="15.0" fill="rgb(238,205,39)" rx="2" ry="2" />
<text  x="1185.35" y="319.5" ></text>
</g>
<g >
<title>__put_compound_page (57,147,110 samples, 0.10%)</title><rect x="11.0" y="309" width="1.1" height="15.0" fill="rgb(227,2,8)" rx="2" ry="2" />
<text  x="13.98" y="319.5" ></text>
</g>
<g >
<title>[unknown] (5,084,860 samples, 0.01%)</title><rect x="10.1" y="469" width="0.1" height="15.0" fill="rgb(243,216,39)" rx="2" ry="2" />
<text  x="13.05" y="479.5" ></text>
</g>
<g >
<title>unmap_single_vma (499,895,461 samples, 0.85%)</title><rect x="12.1" y="357" width="10.1" height="15.0" fill="rgb(249,56,36)" rx="2" ry="2" />
<text  x="15.14" y="367.5" ></text>
</g>
<g >
<title>update_process_times (52,411,213 samples, 0.09%)</title><rect x="1169.1" y="229" width="1.1" height="15.0" fill="rgb(248,77,38)" rx="2" ry="2" />
<text  x="1172.14" y="239.5" ></text>
</g>
<g >
<title>_prb_read_valid (29,188,189 samples, 0.05%)</title><rect x="1169.2" y="117" width="0.6" height="15.0" fill="rgb(235,179,33)" rx="2" ry="2" />
<text  x="1172.22" y="127.5" ></text>
</g>
<g >
<title>clear_page_erms (7,694,295 samples, 0.01%)</title><rect x="1182.4" y="293" width="0.1" height="15.0" fill="rgb(246,215,37)" rx="2" ry="2" />
<text  x="1185.36" y="303.5" ></text>
</g>
<g >
<title>new_sync_read (52,041,028 samples, 0.09%)</title><rect x="1188.9" y="389" width="1.1" height="15.0" fill="rgb(235,177,26)" rx="2" ry="2" />
<text  x="1191.94" y="399.5" ></text>
</g>
<g >
<title>clear_subpage (19,502,095 samples, 0.03%)</title><rect x="1179.3" y="373" width="0.3" height="15.0" fill="rgb(233,30,8)" rx="2" ry="2" />
<text  x="1182.25" y="383.5" ></text>
</g>
<g >
<title>get_data.isra.0 (16,470,715 samples, 0.03%)</title><rect x="1186.3" y="229" width="0.4" height="15.0" fill="rgb(236,57,26)" rx="2" ry="2" />
<text  x="1189.32" y="239.5" ></text>
</g>
<g >
<title>charge_memcg (20,962,775 samples, 0.04%)</title><rect x="27.0" y="357" width="0.4" height="15.0" fill="rgb(234,140,3)" rx="2" ry="2" />
<text  x="29.95" y="367.5" ></text>
</g>
<g >
<title>rmqueue_bulk (11,193,147 samples, 0.02%)</title><rect x="780.3" y="325" width="0.2" height="15.0" fill="rgb(217,17,2)" rx="2" ry="2" />
<text  x="783.29" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (56,355,852 samples, 0.10%)</title><rect x="1169.1" y="277" width="1.1" height="15.0" fill="rgb(226,10,10)" rx="2" ry="2" />
<text  x="1172.07" y="287.5" ></text>
</g>
<g >
<title>irq_work_tick (217,301,009 samples, 0.37%)</title><rect x="1183.6" y="341" width="4.4" height="15.0" fill="rgb(249,134,42)" rx="2" ry="2" />
<text  x="1186.61" y="351.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (10,930,284 samples, 0.02%)</title><rect x="1180.1" y="373" width="0.2" height="15.0" fill="rgb(212,67,38)" rx="2" ry="2" />
<text  x="1183.08" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages (37,438,733,731 samples, 63.80%)</title><rect x="27.7" y="357" width="752.8" height="15.0" fill="rgb(241,228,3)" rx="2" ry="2" />
<text  x="30.71" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>do_filp_open (16,703,236 samples, 0.03%)</title><rect x="10.2" y="373" width="0.3" height="15.0" fill="rgb(248,129,2)" rx="2" ry="2" />
<text  x="13.18" y="383.5" ></text>
</g>
<g >
<title>pci_user_read_config_dword (50,732,005 samples, 0.09%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(213,44,20)" rx="2" ry="2" />
<text  x="1191.96" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (57,698,317,493 samples, 98.32%)</title><rect x="23.0" y="453" width="1160.1" height="15.0" fill="rgb(232,86,25)" rx="2" ry="2" />
<text  x="25.95" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>__mod_node_page_state (5,342,006 samples, 0.01%)</title><rect x="13.4" y="213" width="0.1" height="15.0" fill="rgb(241,110,14)" rx="2" ry="2" />
<text  x="16.43" y="223.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (51,481,019 samples, 0.09%)</title><rect x="1181.0" y="309" width="1.1" height="15.0" fill="rgb(210,31,31)" rx="2" ry="2" />
<text  x="1184.02" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37,448,043,184 samples, 63.81%)</title><rect x="27.6" y="373" width="753.0" height="15.0" fill="rgb(240,69,32)" rx="2" ry="2" />
<text  x="30.61" y="383.5" >alloc_pages_vma</text>
</g>
<g >
<title>irq_work_run_list (216,946,449 samples, 0.37%)</title><rect x="1183.6" y="325" width="4.4" height="15.0" fill="rgb(214,137,53)" rx="2" ry="2" />
<text  x="1186.62" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57,650,636,991 samples, 98.24%)</title><rect x="23.5" y="405" width="1159.3" height="15.0" fill="rgb(225,39,26)" rx="2" ry="2" />
<text  x="26.52" y="415.5" >__handle_mm_fault</text>
</g>
<g >
<title>__munmap (558,743,646 samples, 0.95%)</title><rect x="11.0" y="485" width="11.2" height="15.0" fill="rgb(205,179,34)" rx="2" ry="2" />
<text  x="13.95" y="495.5" ></text>
</g>
<g >
<title>irq_work_single (47,066,180 samples, 0.08%)</title><rect x="1169.2" y="181" width="0.9" height="15.0" fill="rgb(246,28,19)" rx="2" ry="2" />
<text  x="1172.16" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (58,808,026 samples, 0.10%)</title><rect x="1169.1" y="341" width="1.1" height="15.0" fill="rgb(241,40,32)" rx="2" ry="2" />
<text  x="1172.06" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (57,687,031,613 samples, 98.30%)</title><rect x="23.0" y="437" width="1160.0" height="15.0" fill="rgb(228,134,29)" rx="2" ry="2" />
<text  x="25.99" y="447.5" >do_user_addr_fault</text>
</g>
<g >
<title>__alloc_pages (102,224,106 samples, 0.17%)</title><rect x="1180.6" y="341" width="2.1" height="15.0" fill="rgb(248,145,52)" rx="2" ry="2" />
<text  x="1183.60" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (20,707,907 samples, 0.04%)</title><rect x="1179.7" y="373" width="0.4" height="15.0" fill="rgb(205,132,30)" rx="2" ry="2" />
<text  x="1182.66" y="383.5" ></text>
</g>
<g >
<title>get_data.isra.0 (7,111,869 samples, 0.01%)</title><rect x="760.6" y="53" width="0.2" height="15.0" fill="rgb(223,122,35)" rx="2" ry="2" />
<text  x="763.65" y="63.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (447,221,058 samples, 0.76%)</title><rect x="13.2" y="293" width="9.0" height="15.0" fill="rgb(211,27,22)" rx="2" ry="2" />
<text  x="16.17" y="303.5" ></text>
</g>
<g >
<title>prep_compound_page (470,594,194 samples, 0.80%)</title><rect x="770.8" y="309" width="9.5" height="15.0" fill="rgb(251,181,45)" rx="2" ry="2" />
<text  x="773.83" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (8,729,506 samples, 0.01%)</title><rect x="1180.8" y="309" width="0.2" height="15.0" fill="rgb(210,82,24)" rx="2" ry="2" />
<text  x="1183.85" y="319.5" ></text>
</g>
<g >
<title>memcpy_erms (12,884,030 samples, 0.02%)</title><rect x="1169.8" y="117" width="0.3" height="15.0" fill="rgb(222,45,17)" rx="2" ry="2" />
<text  x="1172.83" y="127.5" ></text>
</g>
<g >
<title>console_unlock (45,313,106 samples, 0.08%)</title><rect x="1169.2" y="149" width="0.9" height="15.0" fill="rgb(224,49,19)" rx="2" ry="2" />
<text  x="1172.18" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (10,474,541 samples, 0.02%)</title><rect x="1188.0" y="341" width="0.2" height="15.0" fill="rgb(234,29,11)" rx="2" ry="2" />
<text  x="1190.99" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (231,350,566 samples, 0.39%)</title><rect x="1183.6" y="373" width="4.6" height="15.0" fill="rgb(240,170,17)" rx="2" ry="2" />
<text  x="1186.55" y="383.5" ></text>
</g>
<g >
<title>PageHuge (8,020,161 samples, 0.01%)</title><rect x="13.2" y="245" width="0.2" height="15.0" fill="rgb(221,155,33)" rx="2" ry="2" />
<text  x="16.21" y="255.5" ></text>
</g>
<g >
<title>[unknown] (5,084,860 samples, 0.01%)</title><rect x="10.1" y="453" width="0.1" height="15.0" fill="rgb(223,76,43)" rx="2" ry="2" />
<text  x="13.05" y="463.5" ></text>
</g>
<g >
<title>update_process_times (96,464,261 samples, 0.16%)</title><rect x="759.6" y="181" width="2.0" height="15.0" fill="rgb(229,211,10)" rx="2" ry="2" />
<text  x="762.63" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,480,598 samples, 0.02%)</title><rect x="28.6" y="309" width="0.3" height="15.0" fill="rgb(249,109,12)" rx="2" ry="2" />
<text  x="31.60" y="319.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (5,150,169 samples, 0.01%)</title><rect x="1182.1" y="325" width="0.1" height="15.0" fill="rgb(228,9,42)" rx="2" ry="2" />
<text  x="1185.12" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (51,167,744 samples, 0.09%)</title><rect x="11.1" y="261" width="1.0" height="15.0" fill="rgb(222,112,30)" rx="2" ry="2" />
<text  x="14.10" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (52,211,596 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(216,210,22)" rx="2" ry="2" />
<text  x="1191.94" y="479.5" ></text>
</g>
<g >
<title>sysfs_kf_bin_read (51,170,526 samples, 0.09%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(228,163,26)" rx="2" ry="2" />
<text  x="1191.95" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (56,092,930 samples, 0.10%)</title><rect x="1169.1" y="261" width="1.1" height="15.0" fill="rgb(222,202,6)" rx="2" ry="2" />
<text  x="1172.07" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18,865,341 samples, 0.03%)</title><rect x="1182.2" y="325" width="0.4" height="15.0" fill="rgb(251,196,1)" rx="2" ry="2" />
<text  x="1185.23" y="335.5" ></text>
</g>
<g >
<title>irq_work_single (87,951,502 samples, 0.15%)</title><rect x="759.6" y="133" width="1.8" height="15.0" fill="rgb(221,221,28)" rx="2" ry="2" />
<text  x="762.65" y="143.5" ></text>
</g>
<g >
<title>memcg_check_events (5,410,224 samples, 0.01%)</title><rect x="27.0" y="341" width="0.1" height="15.0" fill="rgb(205,226,25)" rx="2" ry="2" />
<text  x="29.99" y="351.5" ></text>
</g>
<g >
<title>page_counter_try_charge (11,622,977 samples, 0.02%)</title><rect x="27.1" y="325" width="0.3" height="15.0" fill="rgb(230,115,11)" rx="2" ry="2" />
<text  x="30.12" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (9,723,487 samples, 0.02%)</title><rect x="12.5" y="293" width="0.2" height="15.0" fill="rgb(226,151,42)" rx="2" ry="2" />
<text  x="15.49" y="303.5" ></text>
</g>
<g >
<title>__cond_resched (81,680,414 samples, 0.14%)</title><rect x="25.3" y="373" width="1.6" height="15.0" fill="rgb(235,166,40)" rx="2" ry="2" />
<text  x="28.26" y="383.5" ></text>
</g>
<g >
<title>free_unref_page (398,866,634 samples, 0.68%)</title><rect x="14.1" y="213" width="8.0" height="15.0" fill="rgb(252,133,50)" rx="2" ry="2" />
<text  x="17.12" y="223.5" ></text>
</g>
<g >
<title>prep_new_page (37,385,804,021 samples, 63.71%)</title><rect x="28.5" y="325" width="751.8" height="15.0" fill="rgb(254,156,15)" rx="2" ry="2" />
<text  x="31.54" y="335.5" >prep_new_page</text>
</g>
<g >
<title>free_pages_and_swap_cache (57,683,547 samples, 0.10%)</title><rect x="11.0" y="341" width="1.1" height="15.0" fill="rgb(205,14,27)" rx="2" ry="2" />
<text  x="13.97" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (11,535,966 samples, 0.02%)</title><rect x="1180.4" y="357" width="0.2" height="15.0" fill="rgb(223,164,45)" rx="2" ry="2" />
<text  x="1183.36" y="367.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (5,035,649 samples, 0.01%)</title><rect x="27.9" y="341" width="0.1" height="15.0" fill="rgb(227,70,43)" rx="2" ry="2" />
<text  x="30.88" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (243,129,871 samples, 0.41%)</title><rect x="1183.3" y="389" width="4.9" height="15.0" fill="rgb(241,162,13)" rx="2" ry="2" />
<text  x="1186.31" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37,424,683,959 samples, 63.77%)</title><rect x="28.0" y="341" width="752.5" height="15.0" fill="rgb(234,59,2)" rx="2" ry="2" />
<text  x="30.99" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>__pagevec_lru_add (18,525,875 samples, 0.03%)</title><rect x="1179.7" y="341" width="0.4" height="15.0" fill="rgb(248,112,39)" rx="2" ry="2" />
<text  x="1182.69" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (249,552,114 samples, 0.43%)</title><rect x="1183.3" y="437" width="5.0" height="15.0" fill="rgb(205,72,1)" rx="2" ry="2" />
<text  x="1186.27" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (243,839,780 samples, 0.42%)</title><rect x="1183.3" y="405" width="4.9" height="15.0" fill="rgb(222,130,21)" rx="2" ry="2" />
<text  x="1186.30" y="415.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (57,587,171,652 samples, 98.13%)</title><rect x="24.8" y="389" width="1157.9" height="15.0" fill="rgb(223,27,52)" rx="2" ry="2" />
<text  x="27.77" y="399.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>try_charge_memcg (17,303,018 samples, 0.03%)</title><rect x="1181.7" y="293" width="0.4" height="15.0" fill="rgb(246,72,8)" rx="2" ry="2" />
<text  x="1184.71" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,178,485 samples, 0.01%)</title><rect x="12.9" y="277" width="0.1" height="15.0" fill="rgb(234,157,6)" rx="2" ry="2" />
<text  x="15.85" y="287.5" ></text>
</g>
<g >
<title>clear_subpage (360,081,658 samples, 0.61%)</title><rect x="1170.3" y="357" width="7.2" height="15.0" fill="rgb(236,183,14)" rx="2" ry="2" />
<text  x="1173.27" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add (20,185,325 samples, 0.03%)</title><rect x="1179.7" y="357" width="0.4" height="15.0" fill="rgb(250,181,41)" rx="2" ry="2" />
<text  x="1182.67" y="367.5" ></text>
</g>
<g >
<title>__put_compound_page (445,082,451 samples, 0.76%)</title><rect x="13.2" y="261" width="9.0" height="15.0" fill="rgb(234,9,54)" rx="2" ry="2" />
<text  x="16.21" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (7,107,329 samples, 0.01%)</title><rect x="761.4" y="165" width="0.2" height="15.0" fill="rgb(244,139,45)" rx="2" ry="2" />
<text  x="764.43" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_openat (10,262,449 samples, 0.02%)</title><rect x="10.7" y="437" width="0.2" height="15.0" fill="rgb(244,35,40)" rx="2" ry="2" />
<text  x="13.71" y="447.5" ></text>
</g>
<g >
<title>__do_munmap (558,743,646 samples, 0.95%)</title><rect x="11.0" y="405" width="11.2" height="15.0" fill="rgb(237,192,23)" rx="2" ry="2" />
<text  x="13.95" y="415.5" ></text>
</g>
<g >
<title>timekeeping_advance (5,267,643 samples, 0.01%)</title><rect x="759.5" y="149" width="0.1" height="15.0" fill="rgb(244,82,39)" rx="2" ry="2" />
<text  x="762.53" y="159.5" ></text>
</g>
<g >
<title>vmacache_find (5,205,468 samples, 0.01%)</title><rect x="23.1" y="405" width="0.1" height="15.0" fill="rgb(221,180,37)" rx="2" ry="2" />
<text  x="26.14" y="415.5" ></text>
</g>
<g >
<title>__cond_resched (37,601,473 samples, 0.06%)</title><rect x="782.2" y="357" width="0.8" height="15.0" fill="rgb(211,121,27)" rx="2" ry="2" />
<text  x="785.22" y="367.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (10,428,460 samples, 0.02%)</title><rect x="1169.5" y="101" width="0.3" height="15.0" fill="rgb(227,101,43)" rx="2" ry="2" />
<text  x="1172.54" y="111.5" ></text>
</g>
<g >
<title>__page_cache_release (10,867,952 samples, 0.02%)</title><rect x="13.4" y="245" width="0.2" height="15.0" fill="rgb(235,166,52)" rx="2" ry="2" />
<text  x="16.37" y="255.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (87,775,356 samples, 0.15%)</title><rect x="759.6" y="117" width="1.8" height="15.0" fill="rgb(207,6,3)" rx="2" ry="2" />
<text  x="762.65" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (109,541,691 samples, 0.19%)</title><rect x="759.5" y="293" width="2.2" height="15.0" fill="rgb(253,161,31)" rx="2" ry="2" />
<text  x="762.47" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (5,785,031 samples, 0.01%)</title><rect x="22.0" y="197" width="0.1" height="15.0" fill="rgb(205,53,7)" rx="2" ry="2" />
<text  x="25.02" y="207.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (4,997,839 samples, 0.01%)</title><rect x="12.5" y="261" width="0.1" height="15.0" fill="rgb(226,10,52)" rx="2" ry="2" />
<text  x="15.52" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (257,927,551 samples, 0.44%)</title><rect x="1183.2" y="469" width="5.1" height="15.0" fill="rgb(232,94,18)" rx="2" ry="2" />
<text  x="1186.16" y="479.5" ></text>
</g>
<g >
<title>pci_conf1_read (49,421,735 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(242,66,20)" rx="2" ry="2" />
<text  x="1191.99" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (107,875,169 samples, 0.18%)</title><rect x="759.5" y="245" width="2.2" height="15.0" fill="rgb(245,3,51)" rx="2" ry="2" />
<text  x="762.48" y="255.5" ></text>
</g>
<g >
<title>pci_read_config (51,170,526 samples, 0.09%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(235,143,38)" rx="2" ry="2" />
<text  x="1191.95" y="351.5" ></text>
</g>
<g >
<title>do_sys_open (10,262,449 samples, 0.02%)</title><rect x="10.7" y="421" width="0.2" height="15.0" fill="rgb(231,41,46)" rx="2" ry="2" />
<text  x="13.71" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,211,596 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(205,97,2)" rx="2" ry="2" />
<text  x="1191.94" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (558,743,646 samples, 0.95%)</title><rect x="11.0" y="469" width="11.2" height="15.0" fill="rgb(208,102,54)" rx="2" ry="2" />
<text  x="13.95" y="479.5" ></text>
</g>
<g >
<title>irq_work_tick (87,951,502 samples, 0.15%)</title><rect x="759.6" y="165" width="1.8" height="15.0" fill="rgb(250,127,37)" rx="2" ry="2" />
<text  x="762.65" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (252,140,559 samples, 0.43%)</title><rect x="1183.3" y="453" width="5.0" height="15.0" fill="rgb(228,5,47)" rx="2" ry="2" />
<text  x="1186.27" y="463.5" ></text>
</g>
<g >
<title>zap_huge_pmd (498,732,782 samples, 0.85%)</title><rect x="12.2" y="325" width="10.0" height="15.0" fill="rgb(241,219,20)" rx="2" ry="2" />
<text  x="15.16" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (9,367,014 samples, 0.02%)</title><rect x="1183.4" y="325" width="0.2" height="15.0" fill="rgb(250,202,3)" rx="2" ry="2" />
<text  x="1186.36" y="335.5" ></text>
</g>
<g >
<title>free_transhuge_page (55,004,250 samples, 0.09%)</title><rect x="11.0" y="293" width="1.1" height="15.0" fill="rgb(250,110,50)" rx="2" ry="2" />
<text  x="14.03" y="303.5" ></text>
</g>
<g >
<title>page_remove_rmap (19,460,175 samples, 0.03%)</title><rect x="12.8" y="309" width="0.4" height="15.0" fill="rgb(207,90,42)" rx="2" ry="2" />
<text  x="15.76" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (17,843,100 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(242,52,27)" rx="2" ry="2" />
<text  x="13.18" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_read (52,123,980 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(220,122,36)" rx="2" ry="2" />
<text  x="1191.94" y="447.5" ></text>
</g>
<g >
<title>_prb_read_valid (138,844,957 samples, 0.24%)</title><rect x="1183.9" y="245" width="2.8" height="15.0" fill="rgb(236,49,32)" rx="2" ry="2" />
<text  x="1186.86" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (57,951,962 samples, 0.10%)</title><rect x="11.0" y="357" width="1.1" height="15.0" fill="rgb(242,38,42)" rx="2" ry="2" />
<text  x="13.97" y="367.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (5,710,461 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(242,157,17)" rx="2" ry="2" />
<text  x="13.73" y="367.5" ></text>
</g>
<g >
<title>page_counter_uncharge (8,643,394 samples, 0.01%)</title><rect x="13.9" y="181" width="0.2" height="15.0" fill="rgb(226,211,3)" rx="2" ry="2" />
<text  x="16.93" y="191.5" ></text>
</g>
<g >
<title>__GI___openat64 (10,606,622 samples, 0.02%)</title><rect x="10.7" y="485" width="0.2" height="15.0" fill="rgb(208,0,9)" rx="2" ry="2" />
<text  x="13.70" y="495.5" ></text>
</g>
<g >
<title>__free_pages (21,959,286 samples, 0.04%)</title><rect x="12.2" y="309" width="0.5" height="15.0" fill="rgb(223,51,29)" rx="2" ry="2" />
<text  x="15.25" y="319.5" ></text>
</g>
<g >
<title>_prb_read_valid (51,961,815 samples, 0.09%)</title><rect x="759.7" y="69" width="1.1" height="15.0" fill="rgb(212,227,14)" rx="2" ry="2" />
<text  x="762.74" y="79.5" ></text>
</g>
<g >
<title>__count_memcg_events (5,033,787 samples, 0.01%)</title><rect x="23.4" y="405" width="0.1" height="15.0" fill="rgb(227,140,43)" rx="2" ry="2" />
<text  x="26.42" y="415.5" ></text>
</g>
<g >
<title>update_process_times (230,726,683 samples, 0.39%)</title><rect x="1183.6" y="357" width="4.6" height="15.0" fill="rgb(219,32,45)" rx="2" ry="2" />
<text  x="1186.56" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (103,311,206 samples, 0.18%)</title><rect x="759.5" y="213" width="2.1" height="15.0" fill="rgb(211,32,8)" rx="2" ry="2" />
<text  x="762.50" y="223.5" ></text>
</g>
<g >
<title>path_openat (9,649,204 samples, 0.02%)</title><rect x="10.7" y="373" width="0.2" height="15.0" fill="rgb(241,124,36)" rx="2" ry="2" />
<text  x="13.71" y="383.5" ></text>
</g>
<g >
<title>free_compound_page (53,936,882 samples, 0.09%)</title><rect x="11.0" y="277" width="1.1" height="15.0" fill="rgb(228,137,18)" rx="2" ry="2" />
<text  x="14.05" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (109,541,691 samples, 0.19%)</title><rect x="759.5" y="277" width="2.2" height="15.0" fill="rgb(217,31,45)" rx="2" ry="2" />
<text  x="762.47" y="287.5" ></text>
</g>
<g >
<title>walk_component (6,119,411 samples, 0.01%)</title><rect x="10.3" y="325" width="0.1" height="15.0" fill="rgb(252,149,49)" rx="2" ry="2" />
<text  x="13.27" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (57,734,878,544 samples, 98.38%)</title><rect x="22.2" y="469" width="1161.0" height="15.0" fill="rgb(209,123,27)" rx="2" ry="2" />
<text  x="25.23" y="479.5" >asm_exc_page_fault</text>
</g>
<g >
<title>entry_SYSCALL_64 (18,455,819 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(246,17,10)" rx="2" ry="2" />
<text  x="13.17" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5,894,122 samples, 0.01%)</title><rect x="12.8" y="293" width="0.2" height="15.0" fill="rgb(227,161,2)" rx="2" ry="2" />
<text  x="15.84" y="303.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (6,555,364 samples, 0.01%)</title><rect x="25.1" y="373" width="0.2" height="15.0" fill="rgb(232,163,3)" rx="2" ry="2" />
<text  x="28.13" y="383.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (46,978,576 samples, 0.08%)</title><rect x="1169.2" y="165" width="0.9" height="15.0" fill="rgb(210,11,11)" rx="2" ry="2" />
<text  x="1172.17" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (103,925,253 samples, 0.18%)</title><rect x="759.5" y="229" width="2.1" height="15.0" fill="rgb(237,148,8)" rx="2" ry="2" />
<text  x="762.48" y="239.5" ></text>
</g>
<g >
<title>raw_pci_read (49,680,962 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(247,121,30)" rx="2" ry="2" />
<text  x="1191.98" y="303.5" ></text>
</g>
<g >
<title>do_filp_open (9,649,204 samples, 0.02%)</title><rect x="10.7" y="389" width="0.2" height="15.0" fill="rgb(251,136,41)" rx="2" ry="2" />
<text  x="13.71" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (8,744,606 samples, 0.01%)</title><rect x="1180.1" y="341" width="0.2" height="15.0" fill="rgb(221,147,36)" rx="2" ry="2" />
<text  x="1183.11" y="351.5" ></text>
</g>
<g >
<title>[unknown] (4,996,714 samples, 0.01%)</title><rect x="10.1" y="437" width="0.1" height="15.0" fill="rgb(205,227,22)" rx="2" ry="2" />
<text  x="13.05" y="447.5" ></text>
</g>
<g >
<title>__GI___openat64 (18,455,819 samples, 0.03%)</title><rect x="10.2" y="469" width="0.3" height="15.0" fill="rgb(242,65,22)" rx="2" ry="2" />
<text  x="13.17" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (558,743,646 samples, 0.95%)</title><rect x="11.0" y="437" width="11.2" height="15.0" fill="rgb(211,158,51)" rx="2" ry="2" />
<text  x="13.95" y="447.5" ></text>
</g>
<g >
<title>main (58,022,195,941 samples, 98.87%)</title><rect x="22.2" y="485" width="1166.7" height="15.0" fill="rgb(213,79,13)" rx="2" ry="2" />
<text  x="25.23" y="495.5" >main</text>
</g>
<g >
<title>clear_huge_page (19,824,374,592 samples, 33.78%)</title><rect x="780.6" y="373" width="398.7" height="15.0" fill="rgb(215,159,54)" rx="2" ry="2" />
<text  x="783.63" y="383.5" >clear_huge_page</text>
</g>
<g >
<title>irq_work_tick (47,153,474 samples, 0.08%)</title><rect x="1169.2" y="213" width="0.9" height="15.0" fill="rgb(246,95,4)" rx="2" ry="2" />
<text  x="1172.16" y="223.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5,941,277 samples, 0.01%)</title><rect x="1188.4" y="469" width="0.2" height="15.0" fill="rgb(211,210,54)" rx="2" ry="2" />
<text  x="1191.44" y="479.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (453,208,370 samples, 0.77%)</title><rect x="761.7" y="309" width="9.1" height="15.0" fill="rgb(243,211,7)" rx="2" ry="2" />
<text  x="764.71" y="319.5" ></text>
</g>
<g >
<title>irq_work_run_list (47,153,474 samples, 0.08%)</title><rect x="1169.2" y="197" width="0.9" height="15.0" fill="rgb(205,91,12)" rx="2" ry="2" />
<text  x="1172.16" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,960,443 samples, 0.01%)</title><rect x="783.0" y="357" width="0.1" height="15.0" fill="rgb(248,196,4)" rx="2" ry="2" />
<text  x="785.98" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (9,971,569 samples, 0.02%)</title><rect x="1180.1" y="357" width="0.2" height="15.0" fill="rgb(247,166,21)" rx="2" ry="2" />
<text  x="1183.09" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (558,743,646 samples, 0.95%)</title><rect x="11.0" y="421" width="11.2" height="15.0" fill="rgb(245,110,13)" rx="2" ry="2" />
<text  x="13.95" y="431.5" ></text>
</g>
<g >
<title>page_counter_try_charge (29,628,428 samples, 0.05%)</title><rect x="1181.1" y="293" width="0.6" height="15.0" fill="rgb(251,197,12)" rx="2" ry="2" />
<text  x="1184.08" y="303.5" ></text>
</g>
<g >
<title>release_pages (447,131,566 samples, 0.76%)</title><rect x="13.2" y="277" width="9.0" height="15.0" fill="rgb(241,39,48)" rx="2" ry="2" />
<text  x="16.17" y="287.5" ></text>
</g>
<g >
<title>desc_read (5,028,052 samples, 0.01%)</title><rect x="1185.3" y="229" width="0.1" height="15.0" fill="rgb(220,170,10)" rx="2" ry="2" />
<text  x="1188.33" y="239.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (448,735,722 samples, 0.76%)</title><rect x="13.2" y="309" width="9.0" height="15.0" fill="rgb(228,142,47)" rx="2" ry="2" />
<text  x="16.17" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (10,262,449 samples, 0.02%)</title><rect x="10.7" y="405" width="0.2" height="15.0" fill="rgb(214,61,36)" rx="2" ry="2" />
<text  x="13.71" y="415.5" ></text>
</g>
<g >
<title>prb_read_valid (202,832,293 samples, 0.35%)</title><rect x="1183.8" y="261" width="4.1" height="15.0" fill="rgb(232,10,43)" rx="2" ry="2" />
<text  x="1186.80" y="271.5" ></text>
</g>
<g >
<title>release_pages (57,683,547 samples, 0.10%)</title><rect x="11.0" y="325" width="1.1" height="15.0" fill="rgb(221,126,35)" rx="2" ry="2" />
<text  x="13.97" y="335.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,262,341 samples, 0.02%)</title><rect x="1183.3" y="373" width="0.3" height="15.0" fill="rgb(237,143,3)" rx="2" ry="2" />
<text  x="1186.34" y="383.5" ></text>
</g>
<g >
<title>irq_work_run_list (87,951,502 samples, 0.15%)</title><rect x="759.6" y="149" width="1.8" height="15.0" fill="rgb(230,143,50)" rx="2" ry="2" />
<text  x="762.65" y="159.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (6,590,443 samples, 0.01%)</title><rect x="13.4" y="229" width="0.1" height="15.0" fill="rgb(252,194,25)" rx="2" ry="2" />
<text  x="16.40" y="239.5" ></text>
</g>
<g >
<title>unmap_vmas (499,895,461 samples, 0.85%)</title><rect x="12.1" y="373" width="10.1" height="15.0" fill="rgb(248,87,28)" rx="2" ry="2" />
<text  x="15.14" y="383.5" ></text>
</g>
<g >
<title>update_wall_time (9,456,823 samples, 0.02%)</title><rect x="1183.4" y="341" width="0.2" height="15.0" fill="rgb(208,70,31)" rx="2" ry="2" />
<text  x="1186.36" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (499,805,930 samples, 0.85%)</title><rect x="12.1" y="341" width="10.1" height="15.0" fill="rgb(220,152,48)" rx="2" ry="2" />
<text  x="15.14" y="351.5" ></text>
</g>
<g >
<title>desc_read (7,973,547 samples, 0.01%)</title><rect x="1169.6" y="85" width="0.2" height="15.0" fill="rgb(226,159,20)" rx="2" ry="2" />
<text  x="1172.59" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,606,622 samples, 0.02%)</title><rect x="10.7" y="469" width="0.2" height="15.0" fill="rgb(232,81,38)" rx="2" ry="2" />
<text  x="13.70" y="479.5" ></text>
</g>
<g >
<title>gups_vanilla (58,683,261,479 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(234,138,12)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >gups_vanilla</text>
</g>
<g >
<title>try_charge_memcg (13,545,716 samples, 0.02%)</title><rect x="27.1" y="341" width="0.3" height="15.0" fill="rgb(229,82,22)" rx="2" ry="2" />
<text  x="30.10" y="351.5" ></text>
</g>
<g >
<title>free_transhuge_page (425,659,135 samples, 0.73%)</title><rect x="13.6" y="245" width="8.6" height="15.0" fill="rgb(237,35,37)" rx="2" ry="2" />
<text  x="16.60" y="255.5" ></text>
</g>
<g >
<title>rcu_all_qs (86,770,367 samples, 0.15%)</title><rect x="1177.5" y="357" width="1.8" height="15.0" fill="rgb(226,192,54)" rx="2" ry="2" />
<text  x="1180.51" y="367.5" ></text>
</g>
<g >
<title>desc_read_finalized_seq (16,850,908 samples, 0.03%)</title><rect x="760.3" y="53" width="0.3" height="15.0" fill="rgb(222,87,18)" rx="2" ry="2" />
<text  x="763.31" y="63.5" ></text>
</g>
<g >
<title>[unknown] (32,298,927 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(229,64,8)" rx="2" ry="2" />
<text  x="13.04" y="495.5" ></text>
</g>
<g >
<title>prb_read_valid (82,512,298 samples, 0.14%)</title><rect x="759.7" y="85" width="1.7" height="15.0" fill="rgb(237,54,14)" rx="2" ry="2" />
<text  x="762.71" y="95.5" ></text>
</g>
<g >
<title>irq_work_single (216,768,007 samples, 0.37%)</title><rect x="1183.6" y="309" width="4.4" height="15.0" fill="rgb(219,203,22)" rx="2" ry="2" />
<text  x="1186.62" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (57,667,440,996 samples, 98.27%)</title><rect x="23.2" y="421" width="1159.6" height="15.0" fill="rgb(216,217,21)" rx="2" ry="2" />
<text  x="26.25" y="431.5" >handle_mm_fault</text>
</g>
<g >
<title>pte_alloc_one (118,393,421 samples, 0.20%)</title><rect x="1180.3" y="373" width="2.4" height="15.0" fill="rgb(227,171,24)" rx="2" ry="2" />
<text  x="1183.35" y="383.5" ></text>
</g>
<g >
<title>memcpy_erms (55,667,843 samples, 0.09%)</title><rect x="1186.8" y="245" width="1.1" height="15.0" fill="rgb(224,199,30)" rx="2" ry="2" />
<text  x="1189.75" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (57,844,807 samples, 0.10%)</title><rect x="1169.1" y="309" width="1.1" height="15.0" fill="rgb(225,43,28)" rx="2" ry="2" />
<text  x="1172.06" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (108,313,770 samples, 0.18%)</title><rect x="759.5" y="261" width="2.2" height="15.0" fill="rgb(250,8,1)" rx="2" ry="2" />
<text  x="762.48" y="271.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (10,668,344 samples, 0.02%)</title><rect x="27.4" y="357" width="0.2" height="15.0" fill="rgb(251,182,48)" rx="2" ry="2" />
<text  x="30.37" y="367.5" ></text>
</g>
<g >
<title>sync_regs (18,933,251 samples, 0.03%)</title><rect x="1188.6" y="469" width="0.3" height="15.0" fill="rgb(206,166,54)" rx="2" ry="2" />
<text  x="1191.55" y="479.5" ></text>
</g>
<g >
<title>page_counter_cancel (7,840,530 samples, 0.01%)</title><rect x="13.9" y="165" width="0.2" height="15.0" fill="rgb(220,42,24)" rx="2" ry="2" />
<text  x="16.94" y="175.5" ></text>
</g>
<g >
<title>path_openat (16,703,236 samples, 0.03%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(211,33,4)" rx="2" ry="2" />
<text  x="13.18" y="367.5" ></text>
</g>
<g >
<title>all (58,683,261,479 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(239,170,15)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (216,229,453 samples, 0.37%)</title><rect x="1183.6" y="293" width="4.4" height="15.0" fill="rgb(226,140,33)" rx="2" ry="2" />
<text  x="1186.63" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (558,743,646 samples, 0.95%)</title><rect x="11.0" y="453" width="11.2" height="15.0" fill="rgb(251,167,42)" rx="2" ry="2" />
<text  x="13.95" y="463.5" ></text>
</g>
<g >
<title>free_compound_page (416,599,390 samples, 0.71%)</title><rect x="13.8" y="229" width="8.4" height="15.0" fill="rgb(234,189,17)" rx="2" ry="2" />
<text  x="16.78" y="239.5" ></text>
</g>
<g >
<title>do_sys_open (17,843,100 samples, 0.03%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(206,76,17)" rx="2" ry="2" />
<text  x="13.18" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (248,841,411 samples, 0.42%)</title><rect x="1183.3" y="421" width="5.0" height="15.0" fill="rgb(228,189,45)" rx="2" ry="2" />
<text  x="1186.29" y="431.5" ></text>
</g>
</g>
</svg>
